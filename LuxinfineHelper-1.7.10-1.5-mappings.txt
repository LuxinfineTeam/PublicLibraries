ml.luxinfine.config.objects.CustomClassList.addClasses(java.lang.String[])void -> addClasses
ml.luxinfine.config.objects.CustomClassList.isEmpty()boolean -> isEmpty
ml.luxinfine.config.objects.CustomClassList.toStringList()java.util.ArrayList -> toStringList
ml.luxinfine.config.objects.CustomClassList.contains(java.lang.String)boolean -> contains
ml.luxinfine.config.objects.CustomClassList.isInstance(java.lang.Object)boolean -> isInstance
ml.luxinfine.config.objects.CustomClassList.addClasses(java.lang.Class[])void -> addClasses
ml.luxinfine.config.objects.CustomClassList.contains(java.lang.Class)boolean -> contains
ml.luxinfine.config.objects.CustomClassList.clazzList[java.util.List] -> synchronized yjе
ml.luxinfine.config.objects.CustomClassList.hasRegex[boolean] -> synchronized yjе

ml.luxinfine.helper.integrations.Regions$RegionEntry.isVirtual()boolean -> isVirtual
ml.luxinfine.helper.integrations.Regions$RegionEntry.getPoints()net.minecraft.util.ChunkCoordinates[] -> getPoints
ml.luxinfine.helper.integrations.Regions$RegionEntry.getShape()ml.luxinfine.helper.integrations.Regions$RegionShape -> getShape
ml.luxinfine.helper.integrations.Regions$RegionEntry.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.Regions$RegionEntry.intersects(ml.luxinfine.helper.utils.objects.Cuboid)boolean -> intersects

ml.luxinfine.helper.integrations.Punishments$PunishEntry.getPunishReason()java.util.Optional -> getPunishReason
ml.luxinfine.helper.integrations.Punishments$PunishEntry.getPunishSource()ml.luxinfine.helper.integrations.Punishments$PunishSource -> getPunishSource
ml.luxinfine.helper.integrations.Punishments$PunishEntry.getRemovePunishDate()java.util.Optional -> getRemovePunishDate
ml.luxinfine.helper.integrations.Punishments$PunishEntry.getPunishDate()java.util.Optional -> getPunishDate


ml.luxinfine.helper.PrelaunchConfig -> team.luxinfine.helper.10_07_2024__18_16_32.tpo


ml.luxinfine.helper.ModConfig$mob_drop_emulator -> team.luxinfine.helper.10_07_2024__18_16_32.уos$ffk
ml.luxinfine.helper.ModConfig$mob_drop_emulator.lambda$static$1()ml.luxinfine.config.internal.LazyConfigValue -> synchronized yjе
ml.luxinfine.helper.ModConfig$mob_drop_emulator.lambda$null$0(java.util.Map)java.util.Map -> synchronized yjе

ml.luxinfine.config.internal.ConfigCheckers -> ml.luxinfine.config.internal.хdo
ml.luxinfine.config.internal.ConfigCheckers.parse_from_json(com.google.gson.JsonElement, java.util.List, java.lang.String, java.lang.Object, java.util.function.Function, java.lang.String)java.lang.Object -> b оx
ml.luxinfine.config.internal.ConfigCheckers.check_nonnull_cfg_value(ml.luxinfine.config.api.ConfigValue, java.lang.Object, java.lang.Object, java.lang.String, java.util.List)java.lang.Object -> fр g
ml.luxinfine.config.internal.ConfigCheckers.filter_numbers(java.lang.Class, com.google.gson.JsonElement, java.util.List, java.lang.String, java.lang.Number, java.lang.Number)boolean -> synchronized yjе
ml.luxinfine.config.internal.ConfigCheckers.filter_strings(com.google.gson.JsonElement, java.util.List, java.lang.String, java.lang.String)boolean ->  сjf
ml.luxinfine.config.internal.ConfigCheckers.warn_min_max(ml.luxinfine.config.api.ConfigValue, java.util.List, java.lang.String)void -> synchronized yjе
ml.luxinfine.config.internal.ConfigCheckers.warn_regex(ml.luxinfine.config.api.ConfigValue, java.util.List, java.lang.String)void ->  сjf
ml.luxinfine.config.internal.ConfigCheckers.verity_category_name(java.lang.String)java.lang.String -> synchronized yjе
ml.luxinfine.config.internal.ConfigCheckers.warn_nulls(ml.luxinfine.config.api.ConfigValue, java.util.List, java.lang.String)void -> уf u
ml.luxinfine.config.internal.ConfigCheckers.lambda$filter_strings$0(java.util.List, java.lang.String, java.lang.String, java.util.Map$Entry)boolean -> уf u
ml.luxinfine.config.internal.ConfigCheckers.parse_number_from_json(java.lang.Class, com.google.gson.JsonElement, java.util.List, java.lang.String, java.lang.Object, java.lang.Number, java.lang.Number)java.lang.Number -> n pa
ml.luxinfine.config.internal.ConfigCheckers.lambda$filter_numbers$1(java.lang.Class, java.util.List, java.lang.String, java.lang.Number, java.lang.Number, java.util.Map$Entry)boolean -> synchronized yjе
ml.luxinfine.config.internal.ConfigCheckers.verifyEventHandler(java.lang.reflect.Method)void ->  сjf

ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup -> team.luxinfine.helper.10_07_2024__18_16_32.hzн
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getPermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getPermission
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getAttribute
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setPermissionValue(java.lang.String, boolean)ml.luxinfine.helper.integrations.OperationResult -> setPermissionValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getSuffix()ml.luxinfine.helper.integrations.OperationResult -> getSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setSuffix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getDisplayName()ml.luxinfine.helper.integrations.OperationResult -> getDisplayName
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$removeAttribute$6(java.lang.String, net.luckperms.api.node.types.MetaNode)boolean -> synchronized yjе
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.addParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addParentGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getPriority()ml.luxinfine.helper.integrations.OperationResult -> getPriority
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$setAttributeValue$5(java.lang.String, net.luckperms.api.node.types.MetaNode)boolean -> short хgd
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getParentGroups()ml.luxinfine.helper.integrations.OperationResult -> getParentGroups
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$save$8()java.lang.Boolean ->  сjf
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.removePermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removePermission
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.provider[ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider] -> short хgd
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setDisplayName(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setDisplayName
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getPrefix()ml.luxinfine.helper.integrations.OperationResult -> getPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$getAttributes$7(net.luckperms.api.node.types.MetaNode)ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute ->  сjf
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getAttributes()ml.luxinfine.helper.integrations.OperationResult -> getAttributes
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$getPermissions$4(net.luckperms.api.node.types.PermissionNode)ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission ->  сjf
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.save()ml.luxinfine.helper.integrations.OperationResult -> synchronized yjе
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$getParentGroups$0(java.util.ArrayList, net.luckperms.api.model.group.Group)void ->  сjf
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$setPermissionValue$2(java.lang.String, net.luckperms.api.node.types.PermissionNode)boolean -> voz throws
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setPrefix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setAttributeValue(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setAttributeValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.getPermissions()ml.luxinfine.helper.integrations.OperationResult -> getPermissions
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$removeParentGroup$1(java.lang.String, net.luckperms.api.node.types.InheritanceNode)boolean -> уf u
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.removeParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeParentGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.removeAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeAttribute
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.setPriority(int)ml.luxinfine.helper.integrations.OperationResult -> setPriority
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lpGroup[net.luckperms.api.model.group.Group] ->  сjf
ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup.lambda$removePermission$3(java.lang.String, net.luckperms.api.node.types.PermissionNode)boolean -> уf u

ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider -> team.luxinfine.helper.10_07_2024__18_16_32.uts
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.getWeWorld(net.minecraft.world.World)com.sk89q.worldedit.world.World -> short хgd
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.getSession(java.util.UUID)com.sk89q.worldedit.LocalSession -> voz throws
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.setCuboidSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Cuboid)ml.luxinfine.helper.integrations.OperationResult -> setCuboidSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.setPolygonSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location[])ml.luxinfine.helper.integrations.OperationResult -> setPolygonSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.getSupportedSelectionTypes()java.util.Set -> getSupportedSelectionTypes
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.clearSelection(java.util.UUID)void -> clearSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.setCylinderSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setCylinderSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.setEllipseSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setEllipseSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.getPlayerSelection(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerSelection
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.types[java.util.Set] -> short хgd
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.plugin[com.sk89q.worldedit.bukkit.WorldEditPlugin] -> уf u
ml.luxinfine.helper.integrations.impl.we.WorldEditSelectionProvider.getWEPlayer(java.util.UUID)com.sk89q.worldedit.bukkit.BukkitPlayer -> voz throws

ml.luxinfine.helper.guis.elements.IGuiButton.getSpriteHeight()int -> getSpriteHeight
ml.luxinfine.helper.guis.elements.IGuiButton.isLocked()boolean -> isLocked
ml.luxinfine.helper.guis.elements.IGuiButton.getSpriteWidth()int -> getSpriteWidth
ml.luxinfine.helper.guis.elements.IGuiButton.getTextureY(ml.luxinfine.helper.guis.elements.IGuiButton$State)int -> getTextureY
ml.luxinfine.helper.guis.elements.IGuiButton.getTextureX(ml.luxinfine.helper.guis.elements.IGuiButton$State)int -> getTextureX
ml.luxinfine.helper.guis.elements.IGuiButton.isHover(int, int)boolean -> isHover
ml.luxinfine.helper.guis.elements.IGuiButton.drawText(int, int)void -> drawText
ml.luxinfine.helper.guis.elements.IGuiButton.getTextureWidth()int -> getTextureWidth
ml.luxinfine.helper.guis.elements.IGuiButton.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.IGuiButton.getTextureHeight()int -> getTextureHeight
ml.luxinfine.helper.guis.elements.IGuiButton.getSprite()net.minecraft.util.ResourceLocation -> getSprite

ml.luxinfine.events.core.handlers.entity.EntityEggHook -> team.luxinfine.helper.10_07_2024__18_16_32.сem
ml.luxinfine.events.core.handlers.entity.EntityEggHook.onImpactReturn(net.minecraft.entity.projectile.EntityEgg, net.minecraft.util.MovingObjectPosition)void -> double enum
ml.luxinfine.events.core.handlers.entity.EntityEggHook.onImpact(net.minecraft.entity.projectile.EntityEgg, net.minecraft.util.MovingObjectPosition)void -> throw сoс
ml.luxinfine.events.core.handlers.entity.EntityEggHook.lambda$onImpact$0(net.minecraft.entity.projectile.EntityEgg)void -> short хgd

ml.luxinfine.helper.render.world.ICustomRendererTile.renderTile(int, double, double, double, float)void -> renderTile
ml.luxinfine.helper.render.world.ICustomRendererTile.provideRenderInfoAlpha()ml.luxinfine.helper.render.world.ICustomRendererTile$RenderInfo[] -> provideRenderInfoAlpha
ml.luxinfine.helper.render.world.ICustomRendererTile.provideRenderInfo()ml.luxinfine.helper.render.world.ICustomRendererTile$RenderInfo[] -> provideRenderInfo



ml.luxinfine.helper.recipes.RecipeBase.contains(net.minecraft.item.ItemStack)boolean -> contains
ml.luxinfine.helper.recipes.RecipeBase.getInputStacks()java.util.List -> getInputStacks
ml.luxinfine.helper.recipes.RecipeBase.isValidFluid(net.minecraftforge.fluids.FluidStack)boolean -> isValidFluid
ml.luxinfine.helper.recipes.RecipeBase.getOutputFluids()java.util.List -> getOutputFluids
ml.luxinfine.helper.recipes.RecipeBase.getInputFluid()net.minecraftforge.fluids.FluidStack -> getInputFluid
ml.luxinfine.helper.recipes.RecipeBase.getInputFluids()java.util.List -> getInputFluids
ml.luxinfine.helper.recipes.RecipeBase.contains(net.minecraftforge.fluids.FluidStack, int)boolean -> contains
ml.luxinfine.helper.recipes.RecipeBase.splitInputs0(java.util.List)java.util.List -> short хgd
ml.luxinfine.helper.recipes.RecipeBase.getOutputFluid()net.minecraftforge.fluids.FluidStack -> getOutputFluid
ml.luxinfine.helper.recipes.RecipeBase.isValidInputs(java.util.List)boolean -> isValidInputs
ml.luxinfine.helper.recipes.RecipeBase.getOutputStacks()java.util.List -> getOutputStacks
ml.luxinfine.helper.recipes.RecipeBase.isValidFluids(java.util.List)boolean -> isValidFluids
ml.luxinfine.helper.recipes.RecipeBase.findInputsFuzzy(java.util.List)java.util.List -> findInputsFuzzy
ml.luxinfine.helper.recipes.RecipeBase.getOutputStack()net.minecraft.item.ItemStack -> getOutputStack
ml.luxinfine.helper.recipes.RecipeBase.contains(net.minecraftforge.fluids.FluidStack)boolean -> contains
ml.luxinfine.helper.recipes.RecipeBase.contains(net.minecraft.item.ItemStack, int)boolean -> contains
ml.luxinfine.helper.recipes.RecipeBase.getInputStack()ml.luxinfine.helper.recipes.InputStack -> getInputStack

ml.luxinfine.helper.asm.ItemBlockHook -> team.luxinfine.helper.10_07_2024__18_16_32.bмa
ml.luxinfine.helper.asm.ItemBlockHook.lambda$placeBlockAt$0(net.minecraft.entity.player.EntityPlayer)com.mojang.authlib.GameProfile ->  сjf
ml.luxinfine.helper.asm.ItemBlockHook.placeBlockAtReturn(net.minecraft.item.ItemBlock, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, int, int, int, int, float, float, float, int)void -> class else
ml.luxinfine.helper.asm.ItemBlockHook.owner[com.mojang.authlib.GameProfile] -> voz throws
ml.luxinfine.helper.asm.ItemBlockHook.placeBlockAt(net.minecraft.item.ItemBlock, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, int, int, int, int, float, float, float, int)void -> for iмk
ml.luxinfine.helper.asm.ItemBlockHook.lambda$placeBlockAtReturn$1()com.mojang.authlib.GameProfile -> synchronized yjе
ml.luxinfine.helper.asm.ItemBlockHook.lambda$onSpawn$2(net.minecraftforge.event.entity.EntityJoinWorldEvent)void ->  teg
ml.luxinfine.helper.asm.ItemBlockHook.onSpawn(net.minecraftforge.event.entity.EntityJoinWorldEvent)void -> short хgd


ml.luxinfine.events.blocks.BlockSetEvent$UpdateBlockSource.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.events.blocks.BlockSetEvent$UpdateBlockSource.getX()int -> getX
ml.luxinfine.events.blocks.BlockSetEvent$UpdateBlockSource.getZ()int -> getZ
ml.luxinfine.events.blocks.BlockSetEvent$UpdateBlockSource.getY()int -> getY
ml.luxinfine.events.blocks.BlockSetEvent$UpdateBlockSource.getBlock()net.minecraft.block.Block -> getBlock

ml.luxinfine.commands.internal.args.StringCmdArg$1 -> team.luxinfine.helper.10_07_2024__18_16_32.gbе$zрz
ml.luxinfine.commands.internal.args.StringCmdArg$1.$SwitchMap$ml$luxinfine$commands$internal$args$StringCmdArg$StringType[int[]] -> уf u

ml.luxinfine.config.api.Config$ConfigSide$2.isSupportedSide()boolean -> isSupportedSide

ml.luxinfine.config.api.Config$ConfigSide$3.isSupportedSide()boolean -> isSupportedSide

ml.luxinfine.commands.internal.CommandsRegistry$ProxyCmdNode -> team.luxinfine.helper.10_07_2024__18_16_32.tit$ecх

ml.luxinfine.config.api.Config$ConfigSide$1.isSupportedSide()boolean -> isSupportedSide

ml.luxinfine.events.blocks.HopperEvent$PickupEvent.setCooldown(int)void -> setCooldown
ml.luxinfine.events.blocks.HopperEvent$PickupEvent.getItem()net.minecraft.entity.item.EntityItem -> getItem
ml.luxinfine.events.blocks.HopperEvent$PickupEvent.getStorage()net.minecraft.inventory.IInventory -> getStorage
ml.luxinfine.events.blocks.HopperEvent$PickupEvent.item[net.minecraft.entity.item.EntityItem] ->  сjf
ml.luxinfine.events.blocks.HopperEvent$PickupEvent.storage[net.minecraft.inventory.IInventory] -> voz throws

ml.luxinfine.helper.integrations.impl.wg.WGCustomProtectionDomain -> team.luxinfine.helper.10_07_2024__18_16_32.pеа
ml.luxinfine.helper.integrations.impl.wg.WGCustomProtectionDomain.members[boolean] -> yс h
ml.luxinfine.helper.integrations.impl.wg.WGCustomProtectionDomain.region[ml.luxinfine.helper.integrations.Regions$Region] ->  teg

ml.luxinfine.helper.virtualentity.asm.EntityRegistryHook -> team.luxinfine.helper.10_07_2024__18_16_32.ран
ml.luxinfine.helper.virtualentity.asm.EntityRegistryHook.tryTrackingEntity(cpw.mods.fml.common.registry.EntityRegistry, net.minecraft.entity.EntityTracker, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void -> this const

ml.luxinfine.helper.integrations.Economy.executeTransaction(java.util.function.Function)java.util.concurrent.CompletableFuture -> executeTransaction
ml.luxinfine.helper.integrations.Economy.setBalance(java.util.UUID, double)boolean -> setBalance
ml.luxinfine.helper.integrations.Economy.removeBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> removeBalanceListener
ml.luxinfine.helper.integrations.Economy.addBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> addBalanceListener
ml.luxinfine.helper.integrations.Economy.addBalanceAsync(java.util.UUID, double)java.util.concurrent.CompletableFuture -> addBalanceAsync
ml.luxinfine.helper.integrations.Economy.removeBalanceAsync(java.util.UUID, double)java.util.concurrent.CompletableFuture -> removeBalanceAsync
ml.luxinfine.helper.integrations.Economy.getBalanceAsync(java.util.UUID)java.util.concurrent.CompletableFuture -> getBalanceAsync
ml.luxinfine.helper.integrations.Economy.removeBalance(java.util.UUID, double)boolean -> removeBalance
ml.luxinfine.helper.integrations.Economy.getBalanceCached(java.util.UUID)java.util.Optional -> getBalanceCached
ml.luxinfine.helper.integrations.Economy.addBalance(java.util.UUID, double)boolean -> addBalance
ml.luxinfine.helper.integrations.Economy.getBalanceListeners()java.util.Collection -> getBalanceListeners
ml.luxinfine.helper.integrations.Economy.getBalance(java.util.UUID)java.util.Optional -> getBalance
ml.luxinfine.helper.integrations.Economy.setBalanceAsync(java.util.UUID, double)java.util.concurrent.CompletableFuture -> setBalanceAsync

ml.luxinfine.commands.api.ICommandContext.getSenderAsPlayer()net.minecraft.entity.player.EntityPlayer -> getSenderAsPlayer
ml.luxinfine.commands.api.ICommandContext.permissionNode(java.lang.String)java.lang.String -> permissionNode
ml.luxinfine.commands.api.ICommandContext.getLimit(java.lang.String)long -> getLimit
ml.luxinfine.commands.api.ICommandContext.getNullable(java.lang.String)java.lang.Object -> getNullable
ml.luxinfine.commands.api.ICommandContext.error(java.lang.String, java.lang.Object[])void -> error
ml.luxinfine.commands.api.ICommandContext.getSenderAsIPlayer()ml.luxinfine.helper.utils.internal.IPlayer -> getSenderAsIPlayer
ml.luxinfine.commands.api.ICommandContext.isVisible(net.minecraft.entity.player.EntityPlayer)boolean -> isVisible
ml.luxinfine.commands.api.ICommandContext.isVisible(java.util.UUID)boolean -> isVisible
ml.luxinfine.commands.api.ICommandContext.fail(java.lang.String, java.lang.Object[])ml.luxinfine.commands.api.CommandException -> fail
ml.luxinfine.commands.api.ICommandContext.getParsedArguments()java.util.Map -> getParsedArguments
ml.luxinfine.commands.api.ICommandContext.currentCommandNode()ml.luxinfine.commands.api.tree.IBakedCommandNode -> currentCommandNode
ml.luxinfine.commands.api.ICommandContext.getOrDefault(java.lang.String, java.lang.Object)java.lang.Object -> getOrDefault
ml.luxinfine.commands.api.ICommandContext.isPlayer(java.util.UUID)boolean -> isPlayer
ml.luxinfine.commands.api.ICommandContext.requirePermission(java.lang.String)void -> requirePermission
ml.luxinfine.commands.api.ICommandContext.getNullable(java.lang.String, java.lang.Class)java.lang.Object -> getNullable
ml.luxinfine.commands.api.ICommandContext.getSenderLang()java.lang.String -> getSenderLang
ml.luxinfine.commands.api.ICommandContext.getSenderLocation()ml.luxinfine.helper.utils.objects.Location -> getSenderLocation
ml.luxinfine.commands.api.ICommandContext.getOrDefault(java.lang.String, java.util.concurrent.Callable)java.lang.Object -> getOrDefault
ml.luxinfine.commands.api.ICommandContext.get(java.lang.String)java.lang.Object -> get
ml.luxinfine.commands.api.ICommandContext.get(java.lang.String, java.lang.Class)java.lang.Object -> get
ml.luxinfine.commands.api.ICommandContext.getOptional(java.lang.String)java.util.Optional -> getOptional
ml.luxinfine.commands.api.ICommandContext.response(net.minecraft.util.IChatComponent)void -> response
ml.luxinfine.commands.api.ICommandContext.getReaderCursor()int -> getReaderCursor
ml.luxinfine.commands.api.ICommandContext.getCommandLine()java.lang.String -> getCommandLine
ml.luxinfine.commands.api.ICommandContext.getOptional(java.lang.String, java.lang.Class)java.util.Optional -> getOptional
ml.luxinfine.commands.api.ICommandContext.hasPermission(java.lang.String)boolean -> hasPermission
ml.luxinfine.commands.api.ICommandContext.checkLimit(long, java.lang.String, java.lang.String)void -> checkLimit
ml.luxinfine.commands.api.ICommandContext.getSender()net.minecraft.command.ICommandSender -> getSender
ml.luxinfine.commands.api.ICommandContext.response(java.lang.String, java.lang.Object[])void -> response
ml.luxinfine.commands.api.ICommandContext.getSenderAsPlayerMP()net.minecraft.entity.player.EntityPlayerMP -> getSenderAsPlayerMP

ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair -> team.luxinfine.helper.10_07_2024__18_16_32.obg$zсе
ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair.pass[int] -> synchronized yjе
ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair.info[ml.luxinfine.helper.render.world.ICustomRendererTile$RenderInfo] -> yс h
ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair.tile[net.minecraft.tileentity.TileEntity] ->  сjf

ml.luxinfine.hooks.internal.injects.precise.IPreciseInjectProvider.provide(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, byte, java.lang.String[], java.lang.String[], boolean, java.lang.String, java.lang.String)ml.luxinfine.hooks.internal.injects.BaseInjector -> voz throws

ml.luxinfine.helper.render.world.WorldRendererHook -> team.luxinfine.helper.10_07_2024__18_16_32.оyx
ml.luxinfine.helper.render.world.WorldRendererHook.updateRenderer(net.minecraft.client.renderer.WorldRenderer, net.minecraft.entity.EntityLivingBase, ml.luxinfine.hooks.api.IHookContext)void -> finally while
ml.luxinfine.helper.render.world.WorldRendererHook.updateFinished(net.minecraft.client.renderer.WorldRenderer)void -> implements null
ml.luxinfine.helper.render.world.WorldRendererHook.optifine[boolean] -> package boolean
ml.luxinfine.helper.render.world.WorldRendererHook.updateRendererReturn(net.minecraft.client.renderer.WorldRenderer, net.minecraft.entity.EntityLivingBase, ml.luxinfine.hooks.api.IHookContext)void -> return xxм

ml.luxinfine.hooks.internal.injects.precise.FieldGetInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd
ml.luxinfine.hooks.internal.injects.precise.FieldGetInjector.isAcceptableMethodByDesc(org.objectweb.asm.tree.MethodNode)boolean -> yс h
ml.luxinfine.hooks.internal.injects.precise.FieldGetInjector.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> voz throws
ml.luxinfine.hooks.internal.injects.precise.FieldGetInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.events.entity.ChickenHatchEvent.egg[net.minecraft.entity.projectile.EntityEgg] ->  сjf
ml.luxinfine.events.entity.ChickenHatchEvent.chicken[net.minecraft.entity.passive.EntityChicken] -> package boolean
ml.luxinfine.events.entity.ChickenHatchEvent.getChicken()net.minecraft.entity.passive.EntityChicken -> getChicken
ml.luxinfine.events.entity.ChickenHatchEvent.getEgg()net.minecraft.entity.projectile.EntityEgg -> getEgg

ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.рmм
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.unbanIP(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> unbanIP
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.bannedBy[ml.luxinfine.helper.utils.objects.FieldAccessor] -> t bn
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.lambda$getIPBans$2(java.util.HashMap, java.lang.String, net.minecraft.server.management.UserListEntry)void -> short хgd
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getIPBanInfo(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getIPBanInfo
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.unban(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unban
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.access$300()ml.luxinfine.helper.utils.objects.FieldAccessor -> q zc
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.access$400()ml.luxinfine.helper.utils.objects.FieldAccessor -> char public
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getMuteInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getMuteInfo
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getMutes()ml.luxinfine.helper.integrations.OperationResult -> getMutes
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.mute(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> mute
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getSupportedPunishTypes()java.util.Set -> getSupportedPunishTypes
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getWarns()ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getBanInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getBanInfo
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getBans()ml.luxinfine.helper.integrations.OperationResult -> getBans
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.banStartDate[ml.luxinfine.helper.utils.objects.FieldAccessor] ->  teg
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.lambda$ban$0(java.lang.String, net.minecraft.entity.player.EntityPlayerMP)void -> уf u
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.reason[ml.luxinfine.helper.utils.objects.FieldAccessor] -> final byte
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.ban(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> ban
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getIPBans()ml.luxinfine.helper.integrations.OperationResult -> getIPBans
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.banIP(java.lang.String, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> banIP
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.getWarns(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.lambda$getBans$1(java.util.HashMap, java.lang.String, net.minecraft.server.management.UserListEntry)void -> extends catch
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.access$500()ml.luxinfine.helper.utils.objects.FieldAccessor ->  wus
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.access$200()ml.luxinfine.helper.utils.objects.FieldAccessor -> short хgd
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.unmute(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unmute
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.removeWarn(java.util.UUID, int)ml.luxinfine.helper.integrations.OperationResult -> removeWarn
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.warn(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> warn
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider.banEndDate[ml.luxinfine.helper.utils.objects.FieldAccessor] -> try goto

ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler -> team.luxinfine.helper.10_07_2024__18_16_32.pох$qрv
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.lambda$onMessage$2(ml.luxinfine.config.network.JsonCfgSyncPacket)void -> synchronized yjе
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.onMessage(ml.luxinfine.config.network.JsonCfgSyncPacket, cpw.mods.fml.common.network.simpleimpl.MessageContext)cpw.mods.fml.common.network.simpleimpl.IMessage -> package boolean
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.updateFieldValue(java.lang.String, java.lang.reflect.Field, java.lang.Object)void -> уf u
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.lambda$null$0(java.lang.Class, java.lang.String, com.google.gson.JsonElement)void -> char public
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.lambda$null$1(java.lang.Class, java.lang.String, java.util.Map)void -> extends catch
ml.luxinfine.config.network.JsonCfgSyncPacket$CHandler.postEvent(java.lang.Class, java.lang.String)void -> q zc

ml.luxinfine.events.blocks.PistonEvent$PistonExtendedEvent.getAffectedBlocks()java.util.Set -> getAffectedBlocks
ml.luxinfine.events.blocks.PistonEvent$PistonExtendedEvent.affectedBlocks[java.util.Set] -> h id

ml.luxinfine.commands.api.arguments.ICommandArgumentFilter.isValid(ml.luxinfine.commands.api.ICommandContext, java.lang.Object)boolean -> isValid


ml.luxinfine.helper.integrations.Permissions$Node.removeCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeCondition
ml.luxinfine.helper.integrations.Permissions$Node.addCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addCondition
ml.luxinfine.helper.integrations.Permissions$Node.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.Permissions$Node.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate
ml.luxinfine.helper.integrations.Permissions$Node.getConditions()ml.luxinfine.helper.integrations.OperationResult -> getConditions


ml.luxinfine.helper.virtualentity.dummy.DummyCombatTracker -> team.luxinfine.helper.10_07_2024__18_16_32.мed
ml.luxinfine.helper.virtualentity.dummy.DummyCombatTracker.INSTANCE[net.minecraft.util.CombatTracker] -> synchronized yjе

ml.luxinfine.config.network.NetworkManager -> team.luxinfine.helper.10_07_2024__18_16_32.vае
ml.luxinfine.config.network.NetworkManager.NETWORK[cpw.mods.fml.common.network.simpleimpl.SimpleNetworkWrapper] -> voz throws
ml.luxinfine.config.network.NetworkManager.init()void -> try goto

ml.luxinfine.helper.virtualentity.dummy.DummyBodyHelper -> team.luxinfine.helper.10_07_2024__18_16_32.нbe
ml.luxinfine.helper.virtualentity.dummy.DummyBodyHelper.INSTANCE[net.minecraft.entity.EntityBodyHelper] -> voz throws

ml.luxinfine.helper.guis.elements.IGuiElement.mc()net.minecraft.client.Minecraft -> mc
ml.luxinfine.helper.guis.elements.IGuiElement.setPos(int, int)ml.luxinfine.helper.guis.elements.IGuiElement -> setPos
ml.luxinfine.helper.guis.elements.IGuiElement.getGui()net.minecraft.client.gui.Gui -> getGui
ml.luxinfine.helper.guis.elements.IGuiElement.isHover(int, int)boolean -> isHover
ml.luxinfine.helper.guis.elements.IGuiElement.isVisible()boolean -> isVisible
ml.luxinfine.helper.guis.elements.IGuiElement.handleKeyboard(char, int)boolean -> handleKeyboard
ml.luxinfine.helper.guis.elements.IGuiElement.drawText(int, int)void -> drawText
ml.luxinfine.helper.guis.elements.IGuiElement.setVisible(boolean)void -> setVisible
ml.luxinfine.helper.guis.elements.IGuiElement.getX()int -> getX
ml.luxinfine.helper.guis.elements.IGuiElement.getHoverInfo(int, int, java.util.List)void -> getHoverInfo
ml.luxinfine.helper.guis.elements.IGuiElement.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.IGuiElement.drawTexturedModalRect(double, double, double, double, double, double, double, double)void -> drawTexturedModalRect
ml.luxinfine.helper.guis.elements.IGuiElement.getY()int -> getY
ml.luxinfine.helper.guis.elements.IGuiElement.drawTexturedModelRect(double, double, double, double, net.minecraft.util.IIcon)void -> drawTexturedModelRect
ml.luxinfine.helper.guis.elements.IGuiElement.onMouseClicked(int, int, int)void -> onMouseClicked

ml.luxinfine.commands.internal.args.ItemCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.xmm
ml.luxinfine.commands.internal.args.ItemCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.item.Item -> voz throws
ml.luxinfine.commands.internal.args.ItemCmdArg.lambda$new$0(ml.luxinfine.commands.api.ICommandContext)java.util.List -> voz throws
ml.luxinfine.commands.internal.args.ItemCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.utils.ItemUtils.wrapInventory(net.minecraft.inventory.IInventory, boolean)net.minecraft.inventory.IInventory ->  мfh
ml.luxinfine.helper.utils.ItemUtils.forceSave(net.minecraft.inventory.IInventory)void -> extends catch

ml.luxinfine.helper.recipes.RecipeInfoProvider.getInfo(java.lang.Object)java.lang.String -> getInfo

ml.luxinfine.commands.internal.commands.VersionCommand -> team.luxinfine.helper.10_07_2024__18_16_32.kgo
ml.luxinfine.commands.internal.commands.VersionCommand.SORT_BY_NAME[java.util.Comparator] -> extends catch
ml.luxinfine.commands.internal.commands.VersionCommand.jarSplitterTimeFormat[java.time.format.DateTimeFormatter] -> h id
ml.luxinfine.commands.internal.commands.VersionCommand.JAR_SPLITTER_CREATE_DATE[long] -> extends catch
ml.luxinfine.commands.internal.commands.VersionCommand.lambda$null$1(java.util.ArrayList, java.nio.file.Path)void -> q zc
ml.luxinfine.commands.internal.commands.VersionCommand.stripTimes(gnu.trove.set.hash.TLongHashSet, long)void -> t bn
ml.luxinfine.commands.internal.commands.VersionCommand.lambda$static$4(java.lang.String, java.lang.String)int -> extends catch
ml.luxinfine.commands.internal.commands.VersionCommand.formatDate(long)java.lang.String -> char public
ml.luxinfine.commands.internal.commands.VersionCommand.init()void -> ky e
ml.luxinfine.commands.internal.commands.VersionCommand.lambda$null$0(java.util.ArrayList, java.nio.file.Path)void -> new eyl
ml.luxinfine.commands.internal.commands.VersionCommand.lambda$init$2(ml.luxinfine.commands.api.ICommandContext)java.util.List -> instanceof void
ml.luxinfine.commands.internal.commands.VersionCommand.computeVersion(java.nio.file.Path, boolean)java.lang.String -> short хgd
ml.luxinfine.commands.internal.commands.VersionCommand.lambda$init$3(ml.luxinfine.commands.api.ICommandContext)void -> h id

ml.luxinfine.helper.utils.internal.FastOreDictionary$ItemStackKey -> team.luxinfine.helper.10_07_2024__18_16_32.gjy$hнj
ml.luxinfine.helper.utils.internal.FastOreDictionary$ItemStackKey.item[net.minecraft.item.Item] -> new eyl
ml.luxinfine.helper.utils.internal.FastOreDictionary$ItemStackKey.damage[int] -> do hki
ml.luxinfine.helper.utils.internal.FastOreDictionary$ItemStackKey.expireTime[long] -> import float


ml.luxinfine.events.core.handlers.blocks.TileEntityHopperHook -> team.luxinfine.helper.10_07_2024__18_16_32.qht
ml.luxinfine.events.core.handlers.blocks.TileEntityHopperHook.func_145892_a(net.minecraft.tileentity.IHopper, net.minecraft.inventory.IInventory, int, int, ml.luxinfine.hooks.api.IHookContext)void ->  fww
ml.luxinfine.events.core.handlers.blocks.TileEntityHopperHook.func_145898_a(net.minecraft.inventory.IInventory, net.minecraft.entity.item.EntityItem, ml.luxinfine.hooks.api.IHookContext)void -> native jmz
ml.luxinfine.events.core.handlers.blocks.TileEntityHopperHook.lambda$func_145892_a$1(net.minecraft.tileentity.IHopper, net.minecraft.inventory.IInventory, int, int, ml.luxinfine.hooks.api.IHookContext)void -> synchronized yjе
ml.luxinfine.events.core.handlers.blocks.TileEntityHopperHook.lambda$func_145898_a$0(net.minecraft.inventory.IInventory, net.minecraft.entity.item.EntityItem, ml.luxinfine.hooks.api.IHookContext)void -> package boolean

ml.luxinfine.helper.asm.ItemSkullHook -> team.luxinfine.helper.10_07_2024__18_16_32.fho
ml.luxinfine.helper.asm.ItemSkullHook.lambda$onItemUseReturn$1()com.mojang.authlib.GameProfile -> uc p
ml.luxinfine.helper.asm.ItemSkullHook.lambda$onItemUse$0(net.minecraft.entity.player.EntityPlayer)com.mojang.authlib.GameProfile ->  abc
ml.luxinfine.helper.asm.ItemSkullHook.onItemUseReturn(net.minecraft.item.ItemSkull, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, int, int, int, int, float, float, float)void -> н сr
ml.luxinfine.helper.asm.ItemSkullHook.owner[com.mojang.authlib.GameProfile] -> case irp
ml.luxinfine.helper.asm.ItemSkullHook.onItemUse(net.minecraft.item.ItemSkull, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, int, int, int, int, float, float, float)void -> protected private
ml.luxinfine.helper.asm.ItemSkullHook.lambda$onSpawn$2(net.minecraftforge.event.entity.EntityJoinWorldEvent)void -> nb t
ml.luxinfine.helper.asm.ItemSkullHook.onSpawn(net.minecraftforge.event.entity.EntityJoinWorldEvent)void -> fjo break

ml.luxinfine.helper.utils.internal.FastOreDictionary -> team.luxinfine.helper.10_07_2024__18_16_32.gjy
ml.luxinfine.helper.utils.internal.FastOreDictionary.ORE_IDS_CACHE[java.util.Map] -> short хgd
ml.luxinfine.helper.utils.internal.FastOreDictionary.dirty[boolean] -> true transient
ml.luxinfine.helper.utils.internal.FastOreDictionary.lambda$onTick$0(long, ml.luxinfine.helper.utils.internal.FastOreDictionary$ItemStackKey)boolean -> do hki
ml.luxinfine.helper.utils.internal.FastOreDictionary.getOreIDs(net.minecraft.item.ItemStack)int[] -> final byte
ml.luxinfine.helper.utils.internal.FastOreDictionary.counter[int] ->  hsb
ml.luxinfine.helper.utils.internal.FastOreDictionary.onUpdateOres(net.minecraftforge.oredict.OreDictionary$OreRegisterEvent)void -> t bn
ml.luxinfine.helper.utils.internal.FastOreDictionary.INSTANCE[ml.luxinfine.helper.utils.internal.FastOreDictionary] -> try goto
ml.luxinfine.helper.utils.internal.FastOreDictionary.onTick(cpw.mods.fml.common.gameevent.TickEvent$ServerTickEvent)void -> t bn

ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler -> team.luxinfine.helper.10_07_2024__18_16_32.wнv
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler.wrap(net.minecraft.block.Block, int)int -> short хgd
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler.onTooltipRequest(net.minecraftforge.event.entity.player.ItemTooltipEvent)void -> yс h
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler.NULL_PROVIDER[ml.luxinfine.helper.tiles.ITileTooltipProvider] -> final byte
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler.cache[ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$Cache] -> final byte
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler.lambda$onTooltipRequest$0(net.minecraft.block.Block, int, java.lang.Integer)ml.luxinfine.helper.tiles.ITileTooltipProvider -> short хgd

ml.luxinfine.commands.api.IStringReader.expect(char)void -> expect
ml.luxinfine.commands.api.IStringReader.readStringUntil(char)java.lang.String -> readStringUntil
ml.luxinfine.commands.api.IStringReader.readWord()java.lang.String -> readWord
ml.luxinfine.commands.api.IStringReader.skipWhitespace()void -> skipWhitespace
ml.luxinfine.commands.api.IStringReader.readQuotedString()java.lang.String -> readQuotedString
ml.luxinfine.commands.api.IStringReader.readSpace()void -> readSpace
ml.luxinfine.commands.api.IStringReader.readDouble()double -> readDouble
ml.luxinfine.commands.api.IStringReader.readLong()long -> readLong
ml.luxinfine.commands.api.IStringReader.readFloat()float -> readFloat
ml.luxinfine.commands.api.IStringReader.readBoolean()boolean -> readBoolean
ml.luxinfine.commands.api.IStringReader.getString()java.lang.String -> getString
ml.luxinfine.commands.api.IStringReader.readString()java.lang.String -> readString
ml.luxinfine.commands.api.IStringReader.peek(int)char -> peek
ml.luxinfine.commands.api.IStringReader.peek()char -> peek
ml.luxinfine.commands.api.IStringReader.canRead()boolean -> canRead
ml.luxinfine.commands.api.IStringReader.canRead(int)boolean -> canRead
ml.luxinfine.commands.api.IStringReader.skip()void -> skip
ml.luxinfine.commands.api.IStringReader.readInt()int -> readInt
ml.luxinfine.commands.api.IStringReader.getCursor()int -> getCursor
ml.luxinfine.commands.api.IStringReader.read()char -> read
ml.luxinfine.commands.api.IStringReader.setCursor(int)void -> setCursor

ml.luxinfine.helper.guis.elements.IGuiElement$MouseEvent.onClick(int, int, int)void -> onClick



ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup -> team.luxinfine.helper.10_07_2024__18_16_32.brн
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getPermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getPermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setAttributeValue(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getAttribute
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getPermissions()ml.luxinfine.helper.integrations.OperationResult -> getPermissions
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setPermissionValue(java.lang.String, boolean)ml.luxinfine.helper.integrations.OperationResult -> setPermissionValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.vaultPerm[net.milkbowl.vault.permission.Permission] -> instanceof void
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.removeParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeParentGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.groupName[java.lang.String] -> уf u
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getSuffix()ml.luxinfine.helper.integrations.OperationResult -> getSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setSuffix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.removeAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeAttribute
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.addParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addParentGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getDisplayName()ml.luxinfine.helper.integrations.OperationResult -> getDisplayName
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getParentGroups()ml.luxinfine.helper.integrations.OperationResult -> getParentGroups
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getPriority()ml.luxinfine.helper.integrations.OperationResult -> getPriority
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.vaultChat[net.milkbowl.vault.chat.Chat] -> volatile if
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.removePermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removePermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setPriority(int)ml.luxinfine.helper.integrations.OperationResult -> setPriority
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getPrefix()ml.luxinfine.helper.integrations.OperationResult -> getPrefix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setDisplayName(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setDisplayName
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.getAttributes()ml.luxinfine.helper.integrations.OperationResult -> getAttributes
ml.luxinfine.helper.integrations.impl.vault_perms.VaultGroup.setPrefix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setPrefix

ml.luxinfine.helper.handlers.AFKScanner$Interval.getInterval()long -> try goto
ml.luxinfine.helper.handlers.AFKScanner$Interval.startMillis[long] -> w оz
ml.luxinfine.helper.handlers.AFKScanner$Interval.endMillis[long] -> zlo long

ml.luxinfine.helper.utils.objects.PlayerLocation.copy()ml.luxinfine.helper.utils.objects.Location -> copy
ml.luxinfine.helper.utils.objects.PlayerLocation.getPitch()float -> getPitch
ml.luxinfine.helper.utils.objects.PlayerLocation.readFromNBT(net.minecraft.nbt.NBTTagCompound)void -> readFromNBT
ml.luxinfine.helper.utils.objects.PlayerLocation.isEmpty()boolean -> isEmpty
ml.luxinfine.helper.utils.objects.PlayerLocation.writeToNBT(net.minecraft.nbt.NBTTagCompound)void -> writeToNBT
ml.luxinfine.helper.utils.objects.PlayerLocation.setYaw(float)ml.luxinfine.helper.utils.objects.PlayerLocation -> setYaw
ml.luxinfine.helper.utils.objects.PlayerLocation.setPitch(float)ml.luxinfine.helper.utils.objects.PlayerLocation -> setPitch
ml.luxinfine.helper.utils.objects.PlayerLocation.getYaw()float -> getYaw

ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationResult -> team.luxinfine.helper.10_07_2024__18_16_32.pрr$dur
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationResult.code[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  wus
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationResult.exception[java.lang.Throwable] -> instanceof void

ml.luxinfine.hooks.api.FieldsAccessor.get(java.lang.Object)java.lang.Object[] -> get

ml.luxinfine.hooks.internal.HookUtils$ASMClassLoader.create(byte[])java.lang.Class -> try goto

ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute -> team.luxinfine.helper.10_07_2024__18_16_32.vаd
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.removeCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeCondition
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.addCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addCondition
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.getValue()java.lang.String -> getValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.value[java.lang.String] -> р рм
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.key[java.lang.String] -> lx s
ml.luxinfine.helper.integrations.impl.vault_perms.VaultAttribute.getConditions()ml.luxinfine.helper.integrations.OperationResult -> getConditions



ml.luxinfine.events.core.handlers.BukkitCommandInheritHook -> team.luxinfine.helper.10_07_2024__18_16_32.yuо
ml.luxinfine.events.core.handlers.BukkitCommandInheritHook.lambda$execute$0(java.lang.String, java.lang.String[], org.bukkit.command.CommandSender)void -> char public
ml.luxinfine.events.core.handlers.BukkitCommandInheritHook.executeReturn(org.bukkit.command.Command, org.bukkit.command.CommandSender, java.lang.String, java.lang.String[])void -> рit int
ml.luxinfine.events.core.handlers.BukkitCommandInheritHook.execute(org.bukkit.command.Command, org.bukkit.command.CommandSender, java.lang.String, java.lang.String[])void -> switch strictfp



ml.luxinfine.hooks.internal.injects.precise.HeadInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix -> team.luxinfine.helper.10_07_2024__18_16_32.dхh$ygb
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.d[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> уj y
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.access$000(ml.luxinfine.commands.api.IStringReader, java.lang.String)long -> е мс
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.millis[long] -> r d
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.h[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> false super
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.y[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> j хl
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.mo[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> о kа
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.m[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> x ch
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.s[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> мe v
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.timeOf(ml.luxinfine.commands.api.IStringReader, java.lang.String)long ->  abc
ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix.ms[ml.luxinfine.commands.internal.args.DurationCmdArg$TimeSuffix] -> t bn

ml.luxinfine.commands.internal.args.FilteredCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.снk
ml.luxinfine.commands.internal.args.FilteredCmdArg.setSuggestionProvider(ml.luxinfine.commands.api.suggestions.ISuggestionsProvider)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setSuggestionProvider
ml.luxinfine.commands.internal.args.FilteredCmdArg.setDescriptionProvider(java.util.function.Function)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.internal.args.FilteredCmdArg.lambda$getSuggestions$0(ml.luxinfine.commands.api.ICommandContext, java.lang.String)boolean -> synchronized yjе
ml.luxinfine.commands.internal.args.FilteredCmdArg.onInvalidValue[ml.luxinfine.commands.api.CommandException] -> fjo break
ml.luxinfine.commands.internal.args.FilteredCmdArg.filter[ml.luxinfine.commands.api.arguments.ICommandArgumentFilter] -> е мс
ml.luxinfine.commands.internal.args.FilteredCmdArg.source[ml.luxinfine.commands.api.arguments.BaseCommandArgument] ->  wus
ml.luxinfine.commands.internal.args.FilteredCmdArg.getDescription(ml.luxinfine.commands.api.ICommandContext)java.lang.String -> getDescription
ml.luxinfine.commands.internal.args.FilteredCmdArg.setDescriptionProvider(java.lang.String, java.lang.Object[])ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.internal.args.FilteredCmdArg.getSuggestions(ml.luxinfine.commands.api.ICommandContext)java.util.List -> getSuggestions
ml.luxinfine.commands.internal.args.FilteredCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook -> team.luxinfine.helper.10_07_2024__18_16_32.bd
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.tryToFlowVerticallyInto(net.minecraftforge.fluids.BlockFluidFinite, net.minecraft.world.World, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void -> abstract default
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.updateTick(net.minecraftforge.fluids.BlockFluidFinite, net.minecraft.world.World, int, int, int, java.util.Random)void -> bv continue
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.lambda$null$0(int, int, int, ml.luxinfine.events.blocks.BlockSetEvent)void -> nb t
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.densityDir[ml.luxinfine.helper.utils.objects.FieldAccessor] -> static oiа
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.lambda$updateTick$1(int, int, int)void ->  wus
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.quantaPerBlock[ml.luxinfine.helper.utils.objects.FieldAccessor] ->  uic
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.lambda$tryToFlowVerticallyInto$2(net.minecraftforge.fluids.BlockFluidFinite, net.minecraft.world.World, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void -> do hki
ml.luxinfine.events.core.handlers.blocks.BlockFluidFiniteHook.updateTick_return(net.minecraftforge.fluids.BlockFluidFinite, net.minecraft.world.World, int, int, int, java.util.Random)void -> interface assert

ml.luxinfine.helper.render.ObjGroupObject.render()void -> render
ml.luxinfine.helper.render.ObjGroupObject.vertexCount[int] ->  еqа
ml.luxinfine.helper.render.ObjGroupObject.bindVBO()void -> bindVBO
ml.luxinfine.helper.render.ObjGroupObject.getVertexCount()int -> getVertexCount
ml.luxinfine.helper.render.ObjGroupObject.faces[net.minecraftforge.client.model.obj.Face[]] -> уf u
ml.luxinfine.helper.render.ObjGroupObject.getVBO()int -> getVBO
ml.luxinfine.helper.render.ObjGroupObject.vbo[int] ->  egq


ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.meta[java.util.function.IntSupplier] -> char public
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getTileEntity()net.minecraft.tileentity.TileEntity -> getTileEntity
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getMeta()int -> getMeta
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.tile[java.util.function.Supplier] ->  nxе
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.z[int] ->  kмu
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getX()int -> getX
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.x[int] -> a lс
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getZ()int -> getZ
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.block[java.util.function.Supplier] -> false super
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.y[int] ->  ago
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getY()int -> getY
ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry.getBlock()net.minecraft.block.Block -> getBlock

ml.luxinfine.helper.handlers.AFKScanner$Triggers.onInteract(net.minecraftforge.event.entity.player.PlayerInteractEvent)void ->  egq
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onJoin(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedInEvent)void -> zlo long
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onBlockBreak(net.minecraftforge.event.world.BlockEvent$BreakEvent)void -> lx s
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onBlockMultiPlace(net.minecraftforge.event.world.BlockEvent$MultiPlaceEvent)void -> r d
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onPlayerTick(cpw.mods.fml.common.gameevent.TickEvent$PlayerTickEvent)void -> уf u
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onBlockPlace(net.minecraftforge.event.world.BlockEvent$PlaceEvent)void -> true transient
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onCommand(net.minecraftforge.event.ServerChatEvent)void -> uc p
ml.luxinfine.helper.handlers.AFKScanner$Triggers.update[long] -> z bу
ml.luxinfine.helper.handlers.AFKScanner$Triggers.trigger(java.util.UUID)void ->  abc
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onCommand(net.minecraftforge.event.CommandEvent)void -> р рм
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onLeave(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedOutEvent)void -> t bn
ml.luxinfine.helper.handlers.AFKScanner$Triggers.onTick(cpw.mods.fml.common.gameevent.TickEvent$ServerTickEvent)void ->  сcu

ml.luxinfine.config.internal.DefaultConfigParsers$8 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$8
ml.luxinfine.config.internal.DefaultConfigParsers$8.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$8.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$8.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)ml.luxinfine.config.objects.CustomStack -> synchronized yjе
ml.luxinfine.config.internal.DefaultConfigParsers$8.write(com.google.common.reflect.TypeToken, ml.luxinfine.config.objects.CustomStack)com.google.gson.JsonElement -> lx s

ml.luxinfine.events.blocks.FireEvent.targetLocation[ml.luxinfine.helper.utils.objects.Location] ->  nxе
ml.luxinfine.events.blocks.FireEvent.getTargetLocation()ml.luxinfine.helper.utils.objects.Location -> getTargetLocation

ml.luxinfine.config.internal.DefaultConfigParsers -> team.luxinfine.helper.10_07_2024__18_16_32.gu
ml.luxinfine.config.internal.DefaultConfigParsers.registerParsers()void -> сh х

ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer -> team.luxinfine.helper.10_07_2024__18_16_32.оub
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getPermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getPermission
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getAttribute
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lpUser[net.luckperms.api.model.user.User] -> static oiа
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setPermissionValue(java.lang.String, boolean)ml.luxinfine.helper.integrations.OperationResult -> setPermissionValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.addGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$setPermissionValue$5(java.lang.String, net.luckperms.api.node.types.PermissionNode)boolean -> с mi
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getSuffix()ml.luxinfine.helper.integrations.OperationResult -> getSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setSuffix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$setTempPermissionValue$3(java.lang.String, net.luckperms.api.node.types.PermissionNode)boolean -> а хо
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$removePermission$6(java.lang.String, net.luckperms.api.node.types.PermissionNode)boolean -> xa w
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$removeGroup$2(java.lang.String, net.luckperms.api.node.types.InheritanceNode)boolean -> q tz
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$setAttributeValue$8(java.lang.String, net.luckperms.api.node.types.MetaNode)boolean ->  zja
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.removePermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removePermission
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getPrimaryGroup()ml.luxinfine.helper.integrations.OperationResult -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.removeGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.provider[ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider] ->  oet
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getPrefix()ml.luxinfine.helper.integrations.OperationResult -> getPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getAttributes()ml.luxinfine.helper.integrations.OperationResult -> getAttributes
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$setTempAttributeValue$4(java.lang.String, net.luckperms.api.node.types.MetaNode)boolean -> i bо
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.save()ml.luxinfine.helper.integrations.OperationResult -> yc f
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$save$11()java.lang.Boolean -> qn z
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setPrefix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setTempAttributeValue(java.lang.String, java.time.Instant, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setTempAttributeValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setAttributeValue(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setAttributeValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getPermissions()ml.luxinfine.helper.integrations.OperationResult -> getPermissions
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$getGroups$1(java.util.ArrayList, net.luckperms.api.node.types.InheritanceNode, net.luckperms.api.model.group.Group)void -> x ch
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$getPermissions$7(net.luckperms.api.node.types.PermissionNode)ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission -> a уj
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.removeAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeAttribute
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.addGroup(java.lang.String, java.time.Instant)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$getPrimaryGroup$0(net.luckperms.api.model.group.Group)ml.luxinfine.helper.integrations.Permissions$PlayerGroup -> static oiа
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.setTempPermissionValue(java.lang.String, java.time.Instant, boolean)ml.luxinfine.helper.integrations.OperationResult -> setTempPermissionValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$removeAttribute$9(java.lang.String, net.luckperms.api.node.types.MetaNode)boolean ->  хcp
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayer.lambda$getAttributes$10(net.luckperms.api.node.types.MetaNode)ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute -> y nу


ml.luxinfine.helper.registration.RegistrableObject$IRegistrableObject.onObjectRegister()void -> onObjectRegister


ml.luxinfine.events.blocks.FireEvent$FireSpreadEvent.fireMeta[int] ->  мkн
ml.luxinfine.events.blocks.FireEvent$FireSpreadEvent.getFireMeta()int -> getFireMeta
ml.luxinfine.events.blocks.FireEvent$FireSpreadEvent.getSourceLocation()ml.luxinfine.helper.utils.objects.Location -> getSourceLocation
ml.luxinfine.events.blocks.FireEvent$FireSpreadEvent.sourceLocation[ml.luxinfine.helper.utils.objects.Location] ->  tna

ml.luxinfine.helper.utils.objects.Location.getChunkSafe()net.minecraft.world.chunk.Chunk -> getChunkSafe
ml.luxinfine.helper.utils.objects.Location.getChunk()net.minecraft.world.chunk.Chunk -> getChunk
ml.luxinfine.helper.utils.objects.Location.setWorld(net.minecraft.world.World)ml.luxinfine.helper.utils.objects.Location -> setWorld
ml.luxinfine.helper.utils.objects.Location.setZ(int)ml.luxinfine.helper.utils.objects.Location -> setZ
ml.luxinfine.helper.utils.objects.Location.getWorldSafe()net.minecraft.world.WorldServer -> getWorldSafe
ml.luxinfine.helper.utils.objects.Location.readFromNBT(net.minecraft.nbt.NBTTagCompound)void -> readFromNBT
ml.luxinfine.helper.utils.objects.Location.getX()int -> getX
ml.luxinfine.helper.utils.objects.Location.getZ()int -> getZ
ml.luxinfine.helper.utils.objects.Location.modifyPositionFromSide(net.minecraftforge.common.util.ForgeDirection, int)ml.luxinfine.helper.utils.objects.Location -> modifyPositionFromSide
ml.luxinfine.helper.utils.objects.Location.writeToNBT(net.minecraft.nbt.NBTTagCompound)void -> writeToNBT
ml.luxinfine.helper.utils.objects.Location.getWorld()net.minecraft.world.WorldServer -> getWorld
ml.luxinfine.helper.utils.objects.Location.getDistance(double, double, double)double -> getDistance
ml.luxinfine.helper.utils.objects.Location.getChunkLocation()ml.luxinfine.helper.utils.objects.ChunkLocation -> getChunkLocation
ml.luxinfine.helper.utils.objects.Location.getDistance(net.minecraft.entity.Entity)double -> getDistance
ml.luxinfine.helper.utils.objects.Location.getBlock()net.minecraft.block.Block -> getBlock
ml.luxinfine.helper.utils.objects.Location.setPoint(int, int, int)ml.luxinfine.helper.utils.objects.Location -> setPoint
ml.luxinfine.helper.utils.objects.Location.copy()ml.luxinfine.helper.utils.objects.Location -> copy
ml.luxinfine.helper.utils.objects.Location.setY(int)ml.luxinfine.helper.utils.objects.Location -> setY
ml.luxinfine.helper.utils.objects.Location.getBlockSafe()net.minecraft.block.Block -> getBlockSafe
ml.luxinfine.helper.utils.objects.Location.getTileEntity()net.minecraft.tileentity.TileEntity -> getTileEntity
ml.luxinfine.helper.utils.objects.Location.getDim()int -> getDim
ml.luxinfine.helper.utils.objects.Location.getTileEntitySafe()net.minecraft.tileentity.TileEntity -> getTileEntitySafe
ml.luxinfine.helper.utils.objects.Location.getBlockMetadataSafe()int -> getBlockMetadataSafe
ml.luxinfine.helper.utils.objects.Location.isEmpty()boolean -> isEmpty
ml.luxinfine.helper.utils.objects.Location.getDistance(ml.luxinfine.helper.utils.objects.Location)double -> getDistance
ml.luxinfine.helper.utils.objects.Location.getBlockMetadata()int -> getBlockMetadata
ml.luxinfine.helper.utils.objects.Location.setDim(int)ml.luxinfine.helper.utils.objects.Location -> setDim
ml.luxinfine.helper.utils.objects.Location.getY()int -> getY
ml.luxinfine.helper.utils.objects.Location.setX(int)ml.luxinfine.helper.utils.objects.Location -> setX

ml.luxinfine.helper.asm.ItemStackTipsHook -> team.luxinfine.helper.10_07_2024__18_16_32.lаq
ml.luxinfine.helper.asm.ItemStackTipsHook.onItemTooltip(cpw.mods.fml.common.eventhandler.EventBus, cpw.mods.fml.common.eventhandler.Event, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, java.util.List, boolean, ml.luxinfine.hooks.api.IHookContext)boolean ->  ipс

ml.luxinfine.hooks.internal.injects.precise.ReturnInjector.throwableSafety[boolean] ->  оеr
ml.luxinfine.hooks.internal.injects.precise.ReturnInjector.isThrowableSafety(java.lang.String[])boolean -> true transient
ml.luxinfine.hooks.internal.injects.precise.ReturnInjector.generateHookInvokeCode(ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int, org.objectweb.asm.tree.LocalVariableNode, boolean, org.objectweb.asm.Type[], boolean, boolean, int)org.objectweb.asm.tree.InsnList -> t bn
ml.luxinfine.hooks.internal.injects.precise.ReturnInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.helper.utils.ReflectionUtils$1.get(java.lang.Object)java.lang.Object -> get
ml.luxinfine.helper.utils.ReflectionUtils$1.set(java.lang.Object, java.lang.Object)void -> set

ml.luxinfine.config.api.ConfigAPI$LazyReadCallback.onRead(java.lang.Object)java.lang.Object -> onRead

ml.luxinfine.helper.virtualentity.world.VirtualDimChunkProvider -> team.luxinfine.helper.10_07_2024__18_16_32.gdа
ml.luxinfine.helper.virtualentity.world.VirtualDimChunkProvider.DUMMY_CHUNK[net.minecraft.world.chunk.EmptyChunk] ->  zja

ml.luxinfine.helper.jei.PositionedFluidTank.setDisplayTooltips(boolean)ml.luxinfine.helper.jei.PositionedFluidTank -> setDisplayTooltips

ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment.loadClass(java.lang.String)java.lang.Class -> loadClass
ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment.getPlugin()org.bukkit.plugin.Plugin -> getPlugin
ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment.plugin[org.bukkit.plugin.Plugin] -> а хо
ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment.loadInstance(java.lang.String)java.lang.Object -> loadInstance

ml.luxinfine.events.core.listeners.DispenserProcessListener$Result -> team.luxinfine.helper.10_07_2024__18_16_32.aqm$tan
ml.luxinfine.events.core.listeners.DispenserProcessListener$Result.cancel[boolean] ->  lbh
ml.luxinfine.events.core.listeners.DispenserProcessListener$Result.itemStack[net.minecraft.item.ItemStack] ->  мkн

ml.luxinfine.helper.jei.JEIHandler$CachedGenericRecipe.inputs[java.util.List] -> i fh
ml.luxinfine.helper.jei.JEIHandler$CachedGenericRecipe.outputs[java.util.List] -> zа k
ml.luxinfine.helper.jei.JEIHandler$CachedGenericRecipe.inputFluids[java.util.List] -> на с
ml.luxinfine.helper.jei.JEIHandler$CachedGenericRecipe.outputFluids[java.util.List] -> q ns

ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin$FakePluginLoader -> team.luxinfine.helper.10_07_2024__18_16_32.srn$cfc
ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin$FakePluginLoader.internalLoader[org.bukkit.plugin.java.JavaPluginLoader] -> е мс

ml.luxinfine.helper.handlers.AFKScanner.scannerStartTime[long] -> d rc
ml.luxinfine.helper.handlers.AFKScanner.getTotalAfk(java.util.concurrent.TimeUnit)long -> getTotalAfk
ml.luxinfine.helper.handlers.AFKScanner.getScannerStartTime()long -> getScannerStartTime
ml.luxinfine.helper.handlers.AFKScanner.AFK_INTERVALS[java.util.ArrayList] -> e ut
ml.luxinfine.helper.handlers.AFKScanner.getAFKInInterval(long, long)long -> getAFKInInterval
ml.luxinfine.helper.handlers.AFKScanner.getTargetUUID()java.util.UUID -> getTargetUUID
ml.luxinfine.helper.handlers.AFKScanner.startAFK()void -> startAFK
ml.luxinfine.helper.handlers.AFKScanner.targetID[java.util.UUID] -> zlo long
ml.luxinfine.helper.handlers.AFKScanner.ACTIVE_SCANNERS[java.util.HashMap] ->  oet
ml.luxinfine.helper.handlers.AFKScanner.isAFK()boolean -> isAFK
ml.luxinfine.helper.handlers.AFKScanner.AFK_START_EVENTS[java.util.ArrayList] -> vg v
ml.luxinfine.helper.handlers.AFKScanner.stopAFK()void -> stopAFK
ml.luxinfine.helper.handlers.AFKScanner.lastAFKUpdateTime[long] -> ор м
ml.luxinfine.helper.handlers.AFKScanner.AFK_END_EVENTS[java.util.ArrayList] -> h id
ml.luxinfine.helper.handlers.AFKScanner.getTarget()java.util.Optional -> getTarget
ml.luxinfine.helper.handlers.AFKScanner.afkStartTime[long] -> х оr

ml.luxinfine.helper.utils.ItemUtils$SubInventory -> ml.luxinfine.helper.utils.ItemUtils$zxа
ml.luxinfine.helper.utils.ItemUtils$SubInventory.src[net.minecraft.inventory.IInventory] -> r tu
ml.luxinfine.helper.utils.ItemUtils$SubInventory.size[int] -> еe k
ml.luxinfine.helper.utils.ItemUtils$SubInventory.offset[int] ->  ndn

ml.luxinfine.helper.integrations.impl.wg.WGRegion -> team.luxinfine.helper.10_07_2024__18_16_32.qpt
ml.luxinfine.helper.integrations.impl.wg.WGRegion.isVirtual()boolean -> isVirtual
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getPoints()net.minecraft.util.ChunkCoordinates[] -> getPoints
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getShape()ml.luxinfine.helper.integrations.Regions$RegionShape -> getShape
ml.luxinfine.helper.integrations.impl.wg.WGRegion.containsUser(com.sk89q.worldguard.domains.DefaultDomain, java.util.UUID)boolean -> y nу
ml.luxinfine.helper.integrations.impl.wg.WGRegion.global[com.sk89q.worldguard.protection.regions.ProtectedRegion] -> уf u
ml.luxinfine.helper.integrations.impl.wg.WGRegion.lambda$getPoints$0(com.sk89q.worldedit.BlockVector2D)net.minecraft.util.ChunkCoordinates -> ag е
ml.luxinfine.helper.integrations.impl.wg.WGRegion.lambda$getPoints$2(int)net.minecraft.util.ChunkCoordinates[] -> new eyl
ml.luxinfine.helper.integrations.impl.wg.WGRegion.hasFlag(java.lang.String)boolean -> hasFlag
ml.luxinfine.helper.integrations.impl.wg.WGRegion.removeMember(java.util.UUID)boolean -> removeMember
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.wg.WGRegion.region[com.sk89q.worldguard.protection.regions.ProtectedRegion] -> j pt
ml.luxinfine.helper.integrations.impl.wg.WGRegion.addOwner(java.util.UUID)boolean -> addOwner
ml.luxinfine.helper.integrations.impl.wg.WGRegion.setFlag(java.lang.String, java.lang.String)boolean -> setFlag
ml.luxinfine.helper.integrations.impl.wg.WGRegion.removeOwner(java.util.UUID)boolean -> removeOwner
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getMembers()java.util.Set -> getMembers
ml.luxinfine.helper.integrations.impl.wg.WGRegion.lambda$getPoints$1(com.sk89q.worldedit.BlockVector2D)net.minecraft.util.ChunkCoordinates -> static oiа
ml.luxinfine.helper.integrations.impl.wg.WGRegion.searchPlayerUUID(java.lang.String)java.util.UUID -> nb t
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getFlag(java.lang.String)java.lang.String -> getFlag
ml.luxinfine.helper.integrations.impl.wg.WGRegion.removeUser(com.sk89q.worldguard.domains.DefaultDomain, java.util.UUID)void -> i bо
ml.luxinfine.helper.integrations.impl.wg.WGRegion.intersects(ml.luxinfine.helper.utils.objects.Cuboid)boolean -> intersects
ml.luxinfine.helper.integrations.impl.wg.WGRegion.getOwners()java.util.Set -> getOwners
ml.luxinfine.helper.integrations.impl.wg.WGRegion.addMember(java.util.UUID)boolean -> addMember

ml.luxinfine.helper.utils.FakePlayerUtils.FAKE[com.mojang.authlib.GameProfile] -> н bм

ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin -> team.luxinfine.helper.10_07_2024__18_16_32.srn
ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin.desc[org.bukkit.plugin.PluginDescriptionFile] -> voz throws
ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin.access$100()org.bukkit.plugin.PluginDescriptionFile -> ор м
ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin.loader[ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin$FakePluginLoader] -> nb t
ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin.PLUGIN[org.bukkit.plugin.java.JavaPlugin] ->  оеr

ml.luxinfine.helper.containers.slots.BaseSlot.getHitItem()net.minecraft.item.ItemStack -> getHitItem
ml.luxinfine.helper.containers.slots.BaseSlot.onSlotChangedCustom()void ->  thf
ml.luxinfine.helper.containers.slots.BaseSlot.hitItem[net.minecraft.item.ItemStack] -> q wa
ml.luxinfine.helper.containers.slots.BaseSlot.setMaxStackSize(int)ml.luxinfine.helper.containers.slots.BaseSlot -> setMaxStackSize
ml.luxinfine.helper.containers.slots.BaseSlot.setValidStackPredicate(java.util.function.Predicate)ml.luxinfine.helper.containers.slots.BaseSlot -> setValidStackPredicate
ml.luxinfine.helper.containers.slots.BaseSlot.validStackPredicate[java.util.function.Predicate] ->  еqа
ml.luxinfine.helper.containers.slots.BaseSlot.maxStackSize[int] -> u cw
ml.luxinfine.helper.containers.slots.BaseSlot.setHitItem(net.minecraft.item.ItemStack)ml.luxinfine.helper.containers.slots.BaseSlot -> setHitItem
ml.luxinfine.helper.containers.slots.BaseSlot.setOnChange(java.util.function.IntConsumer)ml.luxinfine.helper.containers.slots.BaseSlot -> setOnChange
ml.luxinfine.helper.containers.slots.BaseSlot.onChange[java.util.function.IntConsumer] ->  оеr

ml.luxinfine.config.internal.DefaultConfigParsers$9 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$9
ml.luxinfine.config.internal.DefaultConfigParsers$9.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$9.write(com.google.common.reflect.TypeToken, ml.luxinfine.config.objects.CustomStackList)com.google.gson.JsonElement -> qn z
ml.luxinfine.config.internal.DefaultConfigParsers$9.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$9.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)ml.luxinfine.config.objects.CustomStackList ->  teg

ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState -> team.luxinfine.helper.10_07_2024__18_16_32.zаf
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.getIgnoreList(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getIgnoreList
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.isInIgnoreList(java.util.UUID, java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInIgnoreList
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.hasIgnoreImmune(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> hasIgnoreImmune
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.setIgnored(java.util.UUID, java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setIgnored
ml.luxinfine.helper.integrations.impl.dummy.EmptyIgnoreState.isIgnored(java.util.UUID, java.util.UUID)boolean -> isIgnored

ml.luxinfine.config.internal.DefaultConfigParsers$5 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$5
ml.luxinfine.config.internal.DefaultConfigParsers$5.write(com.google.common.reflect.TypeToken, java.awt.Color)com.google.gson.JsonElement ->  abc
ml.luxinfine.config.internal.DefaultConfigParsers$5.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$5.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$5.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.awt.Color ->  wus

ml.luxinfine.helper.compat.bukkit.BukkitProxy$DummyListener -> ml.luxinfine.helper.compat.bukkit.BukkitProxy$iаl

ml.luxinfine.helper.integrations.PlayerSelection.setCuboidSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Cuboid)ml.luxinfine.helper.integrations.OperationResult -> setCuboidSelection
ml.luxinfine.helper.integrations.PlayerSelection.setPolygonSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location[])ml.luxinfine.helper.integrations.OperationResult -> setPolygonSelection
ml.luxinfine.helper.integrations.PlayerSelection.getSupportedSelectionTypes()java.util.Set -> getSupportedSelectionTypes
ml.luxinfine.helper.integrations.PlayerSelection.clearSelection(java.util.UUID)void -> clearSelection
ml.luxinfine.helper.integrations.PlayerSelection.setCylinderSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setCylinderSelection
ml.luxinfine.helper.integrations.PlayerSelection.setEllipseSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setEllipseSelection
ml.luxinfine.helper.integrations.PlayerSelection.getPlayerSelection(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerSelection

ml.luxinfine.config.internal.DefaultConfigParsers$4 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$4
ml.luxinfine.config.internal.DefaultConfigParsers$4.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$4.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)org.apache.commons.lang3.tuple.Pair ->  lbh
ml.luxinfine.config.internal.DefaultConfigParsers$4.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$4.write(com.google.common.reflect.TypeToken, org.apache.commons.lang3.tuple.Pair)com.google.gson.JsonElement -> false super

ml.luxinfine.hooks.internal.injects.precise.FieldSetInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd
ml.luxinfine.hooks.internal.injects.precise.FieldSetInjector.isAcceptableMethodByDesc(org.objectweb.asm.tree.MethodNode)boolean -> yс h
ml.luxinfine.hooks.internal.injects.precise.FieldSetInjector.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> s nн
ml.luxinfine.hooks.internal.injects.precise.FieldSetInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.helper.virtualentity.world.FakeSaveHandler -> team.luxinfine.helper.10_07_2024__18_16_32.qнv
ml.luxinfine.helper.virtualentity.world.FakeSaveHandler.overworldSaver[net.minecraft.world.storage.ISaveHandler] ->  teg
ml.luxinfine.helper.virtualentity.world.FakeSaveHandler.settings[net.minecraft.world.WorldSettings] -> j pt

ml.luxinfine.hooks.internal.injects.precise.AbstractInvokeInjector.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList ->  teg
ml.luxinfine.hooks.internal.injects.precise.AbstractInvokeInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd
ml.luxinfine.hooks.internal.injects.precise.AbstractInvokeInjector.isAcceptableMethodByDesc(org.objectweb.asm.tree.MethodNode)boolean -> yс h
ml.luxinfine.hooks.internal.injects.precise.AbstractInvokeInjector.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> jo е
ml.luxinfine.hooks.internal.injects.precise.AbstractInvokeInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess -> team.luxinfine.helper.10_07_2024__18_16_32.aqm$fhy
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.access$100(ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess, net.minecraft.item.ItemStack)net.minecraft.item.ItemStack -> j pt
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.sourceItem[net.minecraft.item.ItemStack] -> v wh
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.dispenserLocation[ml.luxinfine.helper.utils.objects.Location] ->  pau
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.resultItem[net.minecraft.item.ItemStack] ->  еyn
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.cancelled[boolean] -> сw b
ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess.getItem(net.minecraft.item.ItemStack)net.minecraft.item.ItemStack -> q tz

ml.luxinfine.config.internal.ConfigParseUtils -> ml.luxinfine.config.internal.mzz
ml.luxinfine.config.internal.ConfigParseUtils.lambda$copy$0(com.google.gson.JsonObject, java.util.Map$Entry)void -> r tu
ml.luxinfine.config.internal.ConfigParseUtils.getComponentClazz(com.google.common.reflect.TypeToken)java.lang.Class -> q wa
ml.luxinfine.config.internal.ConfigParseUtils.toSimpleNames(java.lang.reflect.Type)java.lang.String -> jo е
ml.luxinfine.config.internal.ConfigParseUtils.validateConfigFolder(java.lang.String)java.lang.String -> uz b
ml.luxinfine.config.internal.ConfigParseUtils.findConfigEvent(java.lang.Class, java.lang.String)java.lang.reflect.Method -> н bм
ml.luxinfine.config.internal.ConfigParseUtils.getString(com.google.gson.JsonObject, java.lang.String)java.lang.String -> ck t
ml.luxinfine.config.internal.ConfigParseUtils.min(java.lang.Number[])java.lang.Number -> м сc
ml.luxinfine.config.internal.ConfigParseUtils.convert(java.lang.Class, java.lang.Number)java.lang.Number -> уj y
ml.luxinfine.config.internal.ConfigParseUtils.adaptConfigName(java.lang.String)java.lang.String -> о ну
ml.luxinfine.config.internal.ConfigParseUtils.searchSubConfig0(java.lang.Class, java.lang.String)java.lang.Class -> м еg
ml.luxinfine.config.internal.ConfigParseUtils.isEqual(com.google.gson.JsonElement, com.google.gson.JsonElement)boolean -> еe k
ml.luxinfine.config.internal.ConfigParseUtils.copy(com.google.gson.JsonElement)com.google.gson.JsonElement -> уf u
ml.luxinfine.config.internal.ConfigParseUtils.toSimpleNames_0(java.lang.reflect.Type)java.lang.String ->  mk
ml.luxinfine.config.internal.ConfigParseUtils.searchSubConfig(java.lang.Class, java.lang.String)java.lang.Class ->  ndn
ml.luxinfine.config.internal.ConfigParseUtils.max(java.lang.Number[])java.lang.Number -> ах b
ml.luxinfine.config.internal.ConfigParseUtils.isValidFSName(java.lang.String)boolean -> jo е
ml.luxinfine.config.internal.ConfigParseUtils.addDefaultValue(com.google.gson.JsonObject, java.lang.Object)boolean -> uz b

ml.luxinfine.events.entity.SnowmanSpawnSnowEvent.getTarget()ml.luxinfine.helper.utils.objects.Location -> getTarget
ml.luxinfine.events.entity.SnowmanSpawnSnowEvent.snowman[net.minecraft.entity.monster.EntitySnowman] -> case irp
ml.luxinfine.events.entity.SnowmanSpawnSnowEvent.getSnowman()net.minecraft.entity.monster.EntitySnowman -> getSnowman
ml.luxinfine.events.entity.SnowmanSpawnSnowEvent.target[ml.luxinfine.helper.utils.objects.Location] -> hs o

ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder.parse(net.minecraft.entity.player.EntityPlayerMP, java.lang.String)java.lang.String -> parse
ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder.parse(java.util.UUID, java.lang.String)java.lang.String -> parse

ml.luxinfine.helper.utils.SchedulerUtils.onTick(cpw.mods.fml.common.gameevent.TickEvent$ClientTickEvent)void -> о kа
ml.luxinfine.helper.utils.SchedulerUtils.onServerTick(cpw.mods.fml.common.gameevent.TickEvent$ServerTickEvent)void -> r de
ml.luxinfine.helper.utils.SchedulerUtils.activeTasks[java.util.concurrent.ConcurrentLinkedQueue] -> уj y

ml.luxinfine.helper.utils.EnergyUtils.getEnergy_CoFH(net.minecraft.item.ItemStack)int -> wx i
ml.luxinfine.helper.utils.EnergyUtils.multiplyExact(int, int)int ->  оxе
ml.luxinfine.helper.utils.EnergyUtils.isEnergyItem_IC2(net.minecraft.item.Item)boolean -> aa о
ml.luxinfine.helper.utils.EnergyUtils.energyTier_IC2(net.minecraft.item.ItemStack)int -> lh z
ml.luxinfine.helper.utils.EnergyUtils.extractEnergy_IC2(net.minecraft.item.ItemStack, double, int, boolean, boolean, boolean)double ->  qdw
ml.luxinfine.helper.utils.EnergyUtils.extractEnergy_CoFH(net.minecraft.item.ItemStack, int, boolean, boolean)int -> jg х
ml.luxinfine.helper.utils.EnergyUtils.extractEnergy_IC2(net.minecraft.tileentity.TileEntity, net.minecraftforge.common.util.ForgeDirection, double, boolean)double -> нr е
ml.luxinfine.helper.utils.EnergyUtils.isEnergyTile_CoFH(net.minecraft.tileentity.TileEntity)boolean -> fi с
ml.luxinfine.helper.utils.EnergyUtils.injectEnergy_IC2(net.minecraft.tileentity.TileEntity, net.minecraftforge.common.util.ForgeDirection, double, boolean)double -> c ap
ml.luxinfine.helper.utils.EnergyUtils.injectEnergy_CoFH(net.minecraft.tileentity.TileEntity, net.minecraftforge.common.util.ForgeDirection, int, boolean)int ->  hнx
ml.luxinfine.helper.utils.EnergyUtils.isEnergyItem_CoFH(net.minecraft.item.Item)boolean -> мl о
ml.luxinfine.helper.utils.EnergyUtils.injectEnergy_CoFH(net.minecraft.item.ItemStack, int, boolean, boolean)int -> ce n
ml.luxinfine.helper.utils.EnergyUtils.isEnergyTile_IC2(net.minecraft.tileentity.TileEntity)boolean ->  qvo
ml.luxinfine.helper.utils.EnergyUtils.getEnergy_IC2(net.minecraft.item.ItemStack)double -> zр t
ml.luxinfine.helper.utils.EnergyUtils.extractEnergy_CoFH(net.minecraft.tileentity.TileEntity, net.minecraftforge.common.util.ForgeDirection, int, boolean)int -> у мw
ml.luxinfine.helper.utils.EnergyUtils.getMaxEnergy_IC2(net.minecraft.item.ItemStack)double -> sн r
ml.luxinfine.helper.utils.EnergyUtils.injectEnergy_IC2(net.minecraft.item.ItemStack, double, int, boolean, boolean)double -> nb с
ml.luxinfine.helper.utils.EnergyUtils.getMaxEnergy_CoFH(net.minecraft.item.ItemStack)int ->  gре


ml.luxinfine.helper.integrations.Permissions$PlayerGroup.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate

ml.luxinfine.commands.internal.args.LongCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.нlн
ml.luxinfine.commands.internal.args.LongCmdArg.minimum[long] -> l rv
ml.luxinfine.commands.internal.args.LongCmdArg.maximum[long] -> c uо
ml.luxinfine.commands.internal.args.LongCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Long -> i fh
ml.luxinfine.commands.internal.args.LongCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.OperationResult$ResultTransformer.transform(java.lang.Object)java.lang.Object -> transform

ml.luxinfine.helper.integrations.Punishments$PunishSource.asRawSource()java.util.Optional -> asRawSource
ml.luxinfine.helper.integrations.Punishments$PunishSource.asPlayerUUID()java.util.Optional -> asPlayerUUID

ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.hardEquals(java.lang.Number, double)boolean ->  ndn
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.targetString[java.lang.String] ->  acx
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.inject(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int, org.objectweb.asm.tree.AbstractInsnNode, boolean, int)void -> о kа
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.targetClazz[org.objectweb.asm.Type] -> сw b
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.targetDoubleNumber[double] -> y nу
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.targetNumber[long] -> g ua
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.isDouble[boolean] -> nl c
ml.luxinfine.hooks.internal.injects.precise.AfterConstantLoadInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.hooks.internal.injects.precise.AfterInvokeInjector.throwableSafety[boolean] -> х yе
ml.luxinfine.hooks.internal.injects.precise.AfterInvokeInjector.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList ->  teg
ml.luxinfine.hooks.internal.injects.precise.AfterInvokeInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd
ml.luxinfine.hooks.internal.injects.precise.AfterInvokeInjector.removeThrowableSafeTag(java.lang.String[])java.lang.String[] -> s nн

ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$Cache -> team.luxinfine.helper.10_07_2024__18_16_32.wнv$ayy
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$Cache.maxSize[int] -> kk c

ml.luxinfine.helper.tiles.TileEnergyHandler.refreshRFEnergyReceivers()void -> refreshRFEnergyReceivers
ml.luxinfine.helper.tiles.TileEnergyHandler.useEnergy(double)double -> useEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.canAcceptEnergy(net.minecraftforge.common.util.ForgeDirection)boolean -> canAcceptEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyScaled()double -> getEnergyScaled
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyOutputForTooltipDisplay(net.minecraft.item.ItemStack)double -> getEnergyOutputForTooltipDisplay
ml.luxinfine.helper.tiles.TileEnergyHandler.tryAddEnergy(double)boolean -> tryAddEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.setRotation(int)void -> setRotation
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyBufferForTooltipDisplay(net.minecraft.item.ItemStack)double -> getEnergyBufferForTooltipDisplay
ml.luxinfine.helper.tiles.TileEnergyHandler.needSave[boolean] -> wp у
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyScaled(int)int -> getEnergyScaled
ml.luxinfine.helper.tiles.TileEnergyHandler.readEnergyFromNBT(net.minecraft.nbt.NBTTagCompound)void -> readEnergyFromNBT
ml.luxinfine.helper.tiles.TileEnergyHandler.canProvideEnergy(net.minecraftforge.common.util.ForgeDirection)boolean -> canProvideEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.addEnergy(double, boolean)double -> addEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.addEnergy(double)double -> addEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.writeEnergyToNBT(net.minecraft.nbt.NBTTagCompound)void -> writeEnergyToNBT
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyInputForTooltipDisplay(net.minecraft.item.ItemStack)double -> getEnergyInputForTooltipDisplay
ml.luxinfine.helper.tiles.TileEnergyHandler.getMaxInput()double -> getMaxInput
ml.luxinfine.helper.tiles.TileEnergyHandler.useEnergy(double, boolean)double -> useEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.outputEnergy[int] ->  nkр
ml.luxinfine.helper.tiles.TileEnergyHandler.setEnergy(double)void -> setEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.collectSyncableData(net.minecraft.nbt.NBTTagCompound, net.minecraft.entity.player.EntityPlayerMP)void -> collectSyncableData
ml.luxinfine.helper.tiles.TileEnergyHandler.tryUseEnergy(double)boolean -> tryUseEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyOutputTierForTooltipDisplay(net.minecraft.item.ItemStack)int -> getEnergyOutputTierForTooltipDisplay
ml.luxinfine.helper.tiles.TileEnergyHandler.handleTooltips(net.minecraft.item.ItemStack, net.minecraft.nbt.NBTTagCompound, java.util.List, boolean)void -> handleTooltips
ml.luxinfine.helper.tiles.TileEnergyHandler.energy[double] ->  tм
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergy()double -> getEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.outputTier[int] ->  lpf
ml.luxinfine.helper.tiles.TileEnergyHandler.inputTier[int] -> nn r
ml.luxinfine.helper.tiles.TileEnergyHandler.getMaxEnergy()double -> getMaxEnergy
ml.luxinfine.helper.tiles.TileEnergyHandler.getEnergyInputTierForTooltipDisplay(net.minecraft.item.ItemStack)int -> getEnergyInputTierForTooltipDisplay
ml.luxinfine.helper.tiles.TileEnergyHandler.inputEnergy[int] ->  rаh
ml.luxinfine.helper.tiles.TileEnergyHandler.getMaxOutput()double -> getMaxOutput
ml.luxinfine.helper.tiles.TileEnergyHandler.refreshEnergyNet()void -> refreshEnergyNet


ml.luxinfine.events.blocks.FireEvent$FireFromFireballEvent.fireball[net.minecraft.entity.projectile.EntityFireball] -> u cw
ml.luxinfine.events.blocks.FireEvent$FireFromFireballEvent.getFireball()net.minecraft.entity.projectile.EntityFireball -> getFireball

ml.luxinfine.events.core.handlers.blocks.BlockInheritHook -> team.luxinfine.helper.10_07_2024__18_16_32.mмt
ml.luxinfine.events.core.handlers.blocks.BlockInheritHook.lambda$updateTick$1(net.minecraft.block.Block, net.minecraft.world.World, int, int, int)void ->  хcp
ml.luxinfine.events.core.handlers.blocks.BlockInheritHook.updateTick(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, java.util.Random)void ->  рwf
ml.luxinfine.events.core.handlers.blocks.BlockInheritHook.canEntityDestroy(net.minecraft.block.Block, net.minecraft.world.IBlockAccess, int, int, int, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void -> dн g
ml.luxinfine.events.core.handlers.blocks.BlockInheritHook.lambda$canEntityDestroy$0(ml.luxinfine.hooks.api.IHookContext, net.minecraft.world.IBlockAccess, int, int, int, net.minecraft.entity.Entity)void -> nn r
ml.luxinfine.events.core.handlers.blocks.BlockInheritHook.updateTickReturn(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, java.util.Random)void -> d хc

ml.luxinfine.hooks.internal.injects.fuzzy.IFuzzyInjectProvider.provide(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, byte, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String)ml.luxinfine.hooks.internal.injects.BaseInjector ->  tм



ml.luxinfine.helper.render.world.TilesRenderManager -> team.luxinfine.helper.10_07_2024__18_16_32.obg
ml.luxinfine.helper.render.world.TilesRenderManager.COMPARATOR[java.util.Comparator] ->  zxr
ml.luxinfine.helper.render.world.TilesRenderManager.DISPATCHER[net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher] -> v wh
ml.luxinfine.helper.render.world.TilesRenderManager.lambda$static$2(ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair)int -> nb t
ml.luxinfine.helper.render.world.TilesRenderManager.getTextureID(net.minecraft.util.ResourceLocation)int -> d rc
ml.luxinfine.helper.render.world.TilesRenderManager.LF_refreshRender(net.minecraft.client.renderer.WorldRenderer)void -> u cw
ml.luxinfine.helper.render.world.TilesRenderManager.currentRenderObjects[java.util.ArrayList] -> yo o
ml.luxinfine.helper.render.world.TilesRenderManager.GAME[net.minecraft.client.Minecraft] ->  oet
ml.luxinfine.helper.render.world.TilesRenderManager.lambda$static$0(ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair)int -> el x
ml.luxinfine.helper.render.world.TilesRenderManager.lambda$static$1(ml.luxinfine.helper.render.world.TilesRenderManager$RenderPair)java.lang.String -> nb t
ml.luxinfine.helper.render.world.TilesRenderManager.currentRenderObjectsAlpha[java.util.ArrayList] ->  qox
ml.luxinfine.helper.render.world.TilesRenderManager.refresh0(net.minecraft.client.renderer.WorldRenderer, java.util.ArrayList, boolean)void -> jo е
ml.luxinfine.helper.render.world.TilesRenderManager.findCustomRenderTiles(net.minecraft.client.renderer.WorldRenderer)java.util.List ->  acx
ml.luxinfine.helper.render.world.TilesRenderManager.LF_RenderTick(net.minecraft.client.renderer.culling.ICamera, float)void -> yс h

ml.luxinfine.helper.guis.elements.IGuiFluidTank.getBarTexture()net.minecraft.util.ResourceLocation -> getBarTexture
ml.luxinfine.helper.guis.elements.IGuiFluidTank.getFluid()net.minecraftforge.fluids.Fluid -> getFluid
ml.luxinfine.helper.guis.elements.IGuiFluidTank.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.IGuiFluidTank.getFluidMax()int -> getFluidMax
ml.luxinfine.helper.guis.elements.IGuiFluidTank.getProgress()double -> getProgress
ml.luxinfine.helper.guis.elements.IGuiFluidTank.getFluidAmount()int -> getFluidAmount

ml.luxinfine.helper.virtualentity.dummy.DummyDataWatcher -> team.luxinfine.helper.10_07_2024__18_16_32.еmk

ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getPermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getPermission
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.setAttributeValue(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setAttributeValue
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getAttribute
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getPermissions()ml.luxinfine.helper.integrations.OperationResult -> getPermissions
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.setPermissionValue(java.lang.String, boolean)ml.luxinfine.helper.integrations.OperationResult -> setPermissionValue
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getSuffix()ml.luxinfine.helper.integrations.OperationResult -> getSuffix
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.setSuffix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setSuffix
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.removeAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeAttribute
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.removePermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removePermission
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getPrefix()ml.luxinfine.helper.integrations.OperationResult -> getPrefix
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.getAttributes()ml.luxinfine.helper.integrations.OperationResult -> getAttributes
ml.luxinfine.helper.integrations.Permissions$PermissionContainer.setPrefix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setPrefix

ml.luxinfine.helper.utils.objects.IOwnerProvider._setOwner(com.mojang.authlib.GameProfile)void -> _setOwner
ml.luxinfine.helper.utils.objects.IOwnerProvider._provideOwner()com.mojang.authlib.GameProfile -> _provideOwner

ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayerGroup -> team.luxinfine.helper.10_07_2024__18_16_32.qеw
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayerGroup.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate

ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider -> team.luxinfine.helper.10_07_2024__18_16_32.мwр
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.setCuboidSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Cuboid)ml.luxinfine.helper.integrations.OperationResult -> setCuboidSelection
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.setPolygonSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location[])ml.luxinfine.helper.integrations.OperationResult -> setPolygonSelection
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.getSupportedSelectionTypes()java.util.Set -> getSupportedSelectionTypes
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.clearSelection(java.util.UUID)void -> clearSelection
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.setCylinderSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setCylinderSelection
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.setEllipseSelection(java.util.UUID, ml.luxinfine.helper.utils.objects.Location, int, int, int)ml.luxinfine.helper.integrations.OperationResult -> setEllipseSelection
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlayerSelectionProvider.getPlayerSelection(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerSelection

ml.luxinfine.events.blocks.FireEvent$FireDetonateTNTEvent.getSourceLocation()ml.luxinfine.helper.utils.objects.Location -> getSourceLocation
ml.luxinfine.events.blocks.FireEvent$FireDetonateTNTEvent.sourceLocation[ml.luxinfine.helper.utils.objects.Location] ->  ba

ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter -> team.luxinfine.helper.10_07_2024__18_16_32.tуx
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.applyPlaceholders(java.lang.String, java.util.UUID)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.registerPlaceholder(java.lang.String, ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder)void -> registerPlaceholder
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.applyPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.getPlaceholder(java.lang.String)java.util.Optional -> getPlaceholder
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.getRegisteredPlaceholders()java.util.Map -> getRegisteredPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter.applyRelationalPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyRelationalPlaceholders

ml.luxinfine.commands.api.ICommandRunnable.run(ml.luxinfine.commands.api.ICommandContext)void -> run

ml.luxinfine.events.blocks.PistonEvent$PistonRetractEvent.getAffectedBlock()ml.luxinfine.helper.utils.objects.Location -> getAffectedBlock
ml.luxinfine.events.blocks.PistonEvent$PistonRetractEvent.affectedBlock[ml.luxinfine.helper.utils.objects.Location] ->  vjх

ml.luxinfine.helper.blocks.BlockMachineBase.getRotationType()ml.luxinfine.helper.blocks.BlockMachineBase$RotateType -> getRotationType
ml.luxinfine.helper.blocks.BlockMachineBase.getTileRotation(net.minecraft.world.IBlockAccess, int, int, int)int -> getTileRotation
ml.luxinfine.helper.blocks.BlockMachineBase.dropInventory(net.minecraft.world.World, int, int, int)void -> dropInventory
ml.luxinfine.helper.blocks.BlockMachineBase.setTileRotation(net.minecraft.world.World, int, int, int, int)void -> setTileRotation
ml.luxinfine.helper.blocks.BlockMachineBase.getDropItem(net.minecraft.world.World, int, int, int, int, int)net.minecraft.item.ItemStack -> getDropItem

ml.luxinfine.events.core.handlers.blocks.BehaviorDefaultDispenseItemHook -> team.luxinfine.helper.10_07_2024__18_16_32.gрx
ml.luxinfine.events.core.handlers.blocks.BehaviorDefaultDispenseItemHook.lambda$dispense$1(net.minecraft.dispenser.BehaviorDefaultDispenseItem, net.minecraft.dispenser.IBlockSource, net.minecraft.item.ItemStack)net.minecraft.item.ItemStack -> l rv
ml.luxinfine.events.core.handlers.blocks.BehaviorDefaultDispenseItemHook.dispense(net.minecraft.dispenser.BehaviorDefaultDispenseItem, net.minecraft.dispenser.IBlockSource, net.minecraft.item.ItemStack, net.minecraft.dispenser.BehaviorDefaultDispenseItem, net.minecraft.dispenser.IBlockSource, net.minecraft.item.ItemStack, ml.luxinfine.hooks.api.IHookContext)net.minecraft.item.ItemStack -> ss f
ml.luxinfine.events.core.handlers.blocks.BehaviorDefaultDispenseItemHook.dispenseStack[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  zxr
ml.luxinfine.events.core.handlers.blocks.BehaviorDefaultDispenseItemHook.lambda$dispense$0(net.minecraft.dispenser.IBlockSource, net.minecraft.item.ItemStack, ml.luxinfine.hooks.api.IHookContext, net.minecraft.dispenser.BehaviorDefaultDispenseItem)net.minecraft.item.ItemStack -> instanceof void

ml.luxinfine.helper.integrations.impl.dummy.EmptyPlaytimeProvider -> team.luxinfine.helper.10_07_2024__18_16_32.аsа
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlaytimeProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyPlaytimeProvider.getPlaytimeAsync(java.util.UUID)java.util.concurrent.CompletableFuture -> getPlaytimeAsync


ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler -> team.luxinfine.helper.10_07_2024__18_16_32.yel
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.lambda$tryExtend$2(net.minecraft.world.World, int, int, int, int, net.minecraft.block.BlockPistonBase, ml.luxinfine.hooks.api.IHookContext)void -> lx s
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.onBlockEventReceived(net.minecraft.block.BlockPistonBase, net.minecraft.world.World, int, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void ->  cqz
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.tryExtend(net.minecraft.block.BlockPistonBase, net.minecraft.world.World, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void -> es e
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.updatePistonState(net.minecraft.world.World, int, int, int, int, int, net.minecraft.block.BlockPistonBase, net.minecraft.world.World, int, int, int)boolean -> уq w
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.lambda$updatePistonState$0(net.minecraft.world.World, int, int, int, int, int)boolean -> do hki
ml.luxinfine.events.core.handlers.blocks.BlockPistonHandler.lambda$onBlockEventReceived$1(net.minecraft.world.World, int, int, int, int, net.minecraft.block.BlockPistonBase, int, ml.luxinfine.hooks.api.IHookContext)void ->  ndn

ml.luxinfine.events.core.handlers.entity.NetHandlerLoginServerHook -> team.luxinfine.helper.10_07_2024__18_16_32.хab
ml.luxinfine.events.core.handlers.entity.NetHandlerLoginServerHook.func_147326_c(net.minecraft.server.management.ServerConfigurationManager, java.net.SocketAddress, com.mojang.authlib.GameProfile, net.minecraft.server.network.NetHandlerLoginServer, ml.luxinfine.hooks.api.IHookContext)java.lang.String ->  нdk
ml.luxinfine.events.core.handlers.entity.NetHandlerLoginServerHook.lambda$func_147326_c$0(net.minecraft.server.network.NetHandlerLoginServer, com.mojang.authlib.GameProfile, java.lang.String, ml.luxinfine.hooks.api.IHookContext)void -> х оr

ml.luxinfine.helper.virtualentity.asm.HookEntityLiving -> team.luxinfine.helper.10_07_2024__18_16_32.csу
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initMoveHelper(net.minecraft.entity.EntityLiving, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.ai.EntityMoveHelper -> tt k
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initJumpHelper(net.minecraft.entity.EntityLiving, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.ai.EntityJumpHelper -> q nw
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initPathNavigate(net.minecraft.entity.EntityLiving, net.minecraft.world.World, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.pathfinding.PathNavigate ->  еаr
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initBodyHelper(net.minecraft.entity.EntityLivingBase, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.EntityBodyHelper -> dр р
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initEntitySenses(net.minecraft.entity.EntityLiving, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.ai.EntitySenses -> nx a
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initTasks(net.minecraft.profiler.Profiler, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.ai.EntityAITasks ->  usx
ml.luxinfine.helper.virtualentity.asm.HookEntityLiving.initLook(net.minecraft.entity.EntityLiving, net.minecraft.entity.EntityLiving, net.minecraft.world.World)net.minecraft.entity.ai.EntityLookHelper -> ba м


ml.luxinfine.helper.compat.bukkit.BukkitBridgePlugin$1 -> team.luxinfine.helper.10_07_2024__18_16_32.srn$еla

ml.luxinfine.helper.items.EnergyItem.getEnergy(net.minecraft.item.ItemStack)double -> getEnergy
ml.luxinfine.helper.items.EnergyItem.canExtractEnergy(net.minecraft.item.ItemStack, ml.luxinfine.helper.utils.objects.EnergyType)boolean -> canExtractEnergy
ml.luxinfine.helper.items.EnergyItem.getMaxReceivePerTick(net.minecraft.item.ItemStack)double -> getMaxReceivePerTick
ml.luxinfine.helper.items.EnergyItem.addEnergy(net.minecraft.item.ItemStack, double)boolean -> addEnergy
ml.luxinfine.helper.items.EnergyItem.useEnergy(net.minecraft.item.ItemStack, double)boolean -> useEnergy
ml.luxinfine.helper.items.EnergyItem.canReceiveEnergy(net.minecraft.item.ItemStack, ml.luxinfine.helper.utils.objects.EnergyType)boolean -> canReceiveEnergy
ml.luxinfine.helper.items.EnergyItem.setEnergy(net.minecraft.item.ItemStack, double)void -> setEnergy
ml.luxinfine.helper.items.EnergyItem.getMaxEnergy(net.minecraft.item.ItemStack)double -> getMaxEnergy
ml.luxinfine.helper.items.EnergyItem.getMaxExtractPerTick(net.minecraft.item.ItemStack)double -> getMaxExtractPerTick

ml.luxinfine.helper.render.world.RenderGlobalHook -> team.luxinfine.helper.10_07_2024__18_16_32.ifo
ml.luxinfine.helper.render.world.RenderGlobalHook.renderEntities(net.minecraft.client.renderer.RenderGlobal, net.minecraft.entity.EntityLivingBase, net.minecraft.client.renderer.culling.ICamera, float)void ->  aоk

ml.luxinfine.helper.integrations.Playtime.getPlaytimeAsync(java.util.UUID)java.util.concurrent.CompletableFuture -> getPlaytimeAsync

ml.luxinfine.events.entity.PlayerContainerChangeEvent.getLastContainer()net.minecraft.inventory.Container -> getLastContainer
ml.luxinfine.events.entity.PlayerContainerChangeEvent.lastContainer[net.minecraft.inventory.Container] ->  uic
ml.luxinfine.events.entity.PlayerContainerChangeEvent.getPlayer()net.minecraft.entity.player.EntityPlayer -> getPlayer
ml.luxinfine.events.entity.PlayerContainerChangeEvent.player[net.minecraft.entity.player.EntityPlayer] -> yc f

ml.luxinfine.helper.utils.objects.IFakeProvider._setOwner(com.mojang.authlib.GameProfile)void -> _setOwner
ml.luxinfine.helper.utils.objects.IFakeProvider.getFakePlayerManager()com.gamerforea.eventhelper.fake.FakePlayerContainer -> getFakePlayerManager
ml.luxinfine.helper.utils.objects.IFakeProvider._provideOwner()com.mojang.authlib.GameProfile -> _provideOwner

ml.luxinfine.hooks.internal.IndexedASMPatch.transformerIndex[int] -> lk f
ml.luxinfine.hooks.internal.IndexedASMPatch.counter[int] -> c оs

ml.luxinfine.events.core.listeners.ContainerChangeListener -> team.luxinfine.helper.10_07_2024__18_16_32.еih
ml.luxinfine.events.core.listeners.ContainerChangeListener.onPlayerLeave(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedOutEvent)void -> u аo
ml.luxinfine.events.core.listeners.ContainerChangeListener.LAST_CONTAINERS[java.util.HashMap] ->  mеp
ml.luxinfine.events.core.listeners.ContainerChangeListener.onPlayerTick(cpw.mods.fml.common.gameevent.TickEvent$PlayerTickEvent)void -> b kу


ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.hgy
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.unbanIP(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> unbanIP
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getBans()ml.luxinfine.helper.integrations.OperationResult -> getBans
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getBanInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getBanInfo
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getMutes()ml.luxinfine.helper.integrations.OperationResult -> getMutes
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getIPBanInfo(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getIPBanInfo
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getMuteInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getMuteInfo
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.unban(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unban
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getIPBans()ml.luxinfine.helper.integrations.OperationResult -> getIPBans
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.banIP(java.lang.String, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> banIP
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.ban(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> ban
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.mute(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> mute
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getWarns(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.unmute(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unmute
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getSupportedPunishTypes()java.util.Set -> getSupportedPunishTypes
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.getWarns()ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.removeWarn(java.util.UUID, int)ml.luxinfine.helper.integrations.OperationResult -> removeWarn
ml.luxinfine.helper.integrations.impl.dummy.EmptyPunishmentsProvider.warn(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> warn

ml.luxinfine.helper.virtualentity.dummy.DummyEntitySenses -> team.luxinfine.helper.10_07_2024__18_16_32.kdо
ml.luxinfine.helper.virtualentity.dummy.DummyEntitySenses.INSTANCE[net.minecraft.entity.ai.EntitySenses] ->  ago

ml.luxinfine.events.blocks.HopperEvent.setCooldown(int)void -> setCooldown

ml.luxinfine.commands.internal.commands.ReloadCommandsCMD -> team.luxinfine.helper.10_07_2024__18_16_32.ttу

ml.luxinfine.helper.integrations.Regions$RegionFlag.has(ml.luxinfine.helper.integrations.Regions$RegionEntry)boolean -> has
ml.luxinfine.helper.integrations.Regions$RegionFlag.set(ml.luxinfine.helper.integrations.Regions$RegionEntry, java.lang.Object)void -> set
ml.luxinfine.helper.integrations.Regions$RegionFlag.get(ml.luxinfine.helper.integrations.Regions$RegionEntry)java.lang.Object -> get


ml.luxinfine.helper.utils.ASMUtils$LocalVar.load()org.objectweb.asm.tree.VarInsnNode -> load
ml.luxinfine.helper.utils.ASMUtils$LocalVar.store()org.objectweb.asm.tree.VarInsnNode -> store

ml.luxinfine.helper.ModConfig$commands_manager -> team.luxinfine.helper.10_07_2024__18_16_32.уos$nсe

ml.luxinfine.commands.api.suggestions.ISuggestionsProvider.provideSuggests(ml.luxinfine.commands.api.ICommandContext)java.util.List -> provideSuggests

ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider -> team.luxinfine.helper.10_07_2024__18_16_32.eiо
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.setBalance(java.util.UUID, double)boolean -> setBalance
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.removeBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> removeBalanceListener
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.addBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> addBalanceListener
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.removeBalance(java.util.UUID, double)boolean -> removeBalance
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.addBalance(java.util.UUID, double)boolean -> addBalance
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.getBalanceListeners()java.util.Collection -> getBalanceListeners
ml.luxinfine.helper.integrations.impl.dummy.EmptyEconomyProvider.getBalance(java.util.UUID)java.util.Optional -> getBalance

ml.luxinfine.events.blocks.PistonEvent.direction[net.minecraftforge.common.util.ForgeDirection] ->  еqа
ml.luxinfine.events.blocks.PistonEvent.pistonZ[int] ->  аlx
ml.luxinfine.events.blocks.PistonEvent.world[net.minecraft.world.World] ->  сjf
ml.luxinfine.events.blocks.PistonEvent.isSticky()boolean -> isSticky
ml.luxinfine.events.blocks.PistonEvent.getPistonZ()int -> getPistonZ
ml.luxinfine.events.blocks.PistonEvent.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.events.blocks.PistonEvent.sticky[boolean] ->  pdх
ml.luxinfine.events.blocks.PistonEvent.pistonX[int] -> u iа
ml.luxinfine.events.blocks.PistonEvent.getPistonX()int -> getPistonX
ml.luxinfine.events.blocks.PistonEvent.getDirection()net.minecraftforge.common.util.ForgeDirection -> getDirection
ml.luxinfine.events.blocks.PistonEvent.getPistonY()int -> getPistonY
ml.luxinfine.events.blocks.PistonEvent.pistonY[int] -> zw b

ml.luxinfine.helper.guis.elements.GuiButton.getWidth()int -> getWidth
ml.luxinfine.helper.guis.elements.GuiButton.getSpriteHeight()int -> getSpriteHeight
ml.luxinfine.helper.guis.elements.GuiButton.isLocked()boolean -> isLocked
ml.luxinfine.helper.guis.elements.GuiButton.getSpriteWidth()int -> getSpriteWidth
ml.luxinfine.helper.guis.elements.GuiButton.getTextureY(ml.luxinfine.helper.guis.elements.IGuiButton$State)int -> getTextureY
ml.luxinfine.helper.guis.elements.GuiButton.getTextureX(ml.luxinfine.helper.guis.elements.IGuiButton$State)int -> getTextureX
ml.luxinfine.helper.guis.elements.GuiButton.setSize(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setSize
ml.luxinfine.helper.guis.elements.GuiButton.setText(ml.luxinfine.helper.guis.elements.GuiText)ml.luxinfine.helper.guis.elements.GuiLabel -> setText
ml.luxinfine.helper.guis.elements.GuiButton.getTextureWidth()int -> getTextureWidth
ml.luxinfine.helper.guis.elements.GuiButton.setLocked(boolean)ml.luxinfine.helper.guis.elements.GuiButton -> setLocked
ml.luxinfine.helper.guis.elements.GuiButton.setTextureSize(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setTextureSize
ml.luxinfine.helper.guis.elements.GuiButton.setDefaultTexturePosition(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setDefaultTexturePosition
ml.luxinfine.helper.guis.elements.GuiButton.getHeight()int -> getHeight
ml.luxinfine.helper.guis.elements.GuiButton.getTextureHeight()int -> getTextureHeight
ml.luxinfine.helper.guis.elements.GuiButton.getSprite()net.minecraft.util.ResourceLocation -> getSprite
ml.luxinfine.helper.guis.elements.GuiButton.setSize(int, int)ml.luxinfine.helper.guis.elements.IGuiSizableElement -> setSize
ml.luxinfine.helper.guis.elements.GuiButton.setSprite(net.minecraft.util.ResourceLocation, int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setSprite
ml.luxinfine.helper.guis.elements.GuiButton.setAllTexturePosition(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setAllTexturePosition
ml.luxinfine.helper.guis.elements.GuiButton.setHoveredTexturePosition(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setHoveredTexturePosition
ml.luxinfine.helper.guis.elements.GuiButton.setLockedTexturePosition(int, int)ml.luxinfine.helper.guis.elements.GuiButton -> setLockedTexturePosition
ml.luxinfine.helper.guis.elements.GuiButton.setText(ml.luxinfine.helper.guis.elements.GuiText)ml.luxinfine.helper.guis.elements.GuiButton -> setText
ml.luxinfine.helper.guis.elements.GuiButton.onMouseClicked(int, int, int)void -> onMouseClicked



ml.luxinfine.commands.internal.impl.CommandContextImpl -> team.luxinfine.helper.10_07_2024__18_16_32.yyd
ml.luxinfine.commands.internal.impl.CommandContextImpl.sender[net.minecraft.command.ICommandSender] ->  tna
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSenderAsPlayer()net.minecraft.entity.player.EntityPlayer -> getSenderAsPlayer
ml.luxinfine.commands.internal.impl.CommandContextImpl.permissionNode(java.lang.String)java.lang.String -> permissionNode
ml.luxinfine.commands.internal.impl.CommandContextImpl.getLimit(java.lang.String)long -> getLimit
ml.luxinfine.commands.internal.impl.CommandContextImpl.getNullable(java.lang.String)java.lang.Object -> getNullable
ml.luxinfine.commands.internal.impl.CommandContextImpl.error(java.lang.String, java.lang.Object[])void -> error
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSenderAsIPlayer()ml.luxinfine.helper.utils.internal.IPlayer -> getSenderAsIPlayer
ml.luxinfine.commands.internal.impl.CommandContextImpl.arguments[java.util.Map] ->  evq
ml.luxinfine.commands.internal.impl.CommandContextImpl.isVisible(net.minecraft.entity.player.EntityPlayer)boolean -> isVisible
ml.luxinfine.commands.internal.impl.CommandContextImpl.isVisible(java.util.UUID)boolean -> isVisible
ml.luxinfine.commands.internal.impl.CommandContextImpl.fail(java.lang.String, java.lang.Object[])ml.luxinfine.commands.api.CommandException -> fail
ml.luxinfine.commands.internal.impl.CommandContextImpl.getParsedArguments()java.util.Map -> getParsedArguments
ml.luxinfine.commands.internal.impl.CommandContextImpl.cursor[int] ->  jkа
ml.luxinfine.commands.internal.impl.CommandContextImpl.currentCommandNode()ml.luxinfine.commands.api.tree.IBakedCommandNode -> currentCommandNode
ml.luxinfine.commands.internal.impl.CommandContextImpl.getOrDefault(java.lang.String, java.lang.Object)java.lang.Object -> getOrDefault
ml.luxinfine.commands.internal.impl.CommandContextImpl.isPlayer(java.util.UUID)boolean -> isPlayer
ml.luxinfine.commands.internal.impl.CommandContextImpl.requirePermission(java.lang.String)void -> requirePermission
ml.luxinfine.commands.internal.impl.CommandContextImpl.getNullable(java.lang.String, java.lang.Class)java.lang.Object -> getNullable
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSenderLang()java.lang.String -> getSenderLang
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSenderLocation()ml.luxinfine.helper.utils.objects.Location -> getSenderLocation
ml.luxinfine.commands.internal.impl.CommandContextImpl.getOrDefault(java.lang.String, java.util.concurrent.Callable)java.lang.Object -> getOrDefault
ml.luxinfine.commands.internal.impl.CommandContextImpl.node[ml.luxinfine.commands.api.tree.IBakedCommandNode] -> case irp
ml.luxinfine.commands.internal.impl.CommandContextImpl.get(java.lang.String)java.lang.Object -> get
ml.luxinfine.commands.internal.impl.CommandContextImpl.get(java.lang.String, java.lang.Class)java.lang.Object -> get
ml.luxinfine.commands.internal.impl.CommandContextImpl.getOptional(java.lang.String)java.util.Optional -> getOptional
ml.luxinfine.commands.internal.impl.CommandContextImpl.response(net.minecraft.util.IChatComponent)void -> response
ml.luxinfine.commands.internal.impl.CommandContextImpl.getReaderCursor()int -> getReaderCursor
ml.luxinfine.commands.internal.impl.CommandContextImpl.cmdRaw[java.lang.String] -> a sw
ml.luxinfine.commands.internal.impl.CommandContextImpl.getCommandLine()java.lang.String -> getCommandLine
ml.luxinfine.commands.internal.impl.CommandContextImpl.getOptional(java.lang.String, java.lang.Class)java.util.Optional -> getOptional
ml.luxinfine.commands.internal.impl.CommandContextImpl.hasPermission(java.lang.String)boolean -> hasPermission
ml.luxinfine.commands.internal.impl.CommandContextImpl.checkLimit(long, java.lang.String, java.lang.String)void -> checkLimit
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSender()net.minecraft.command.ICommandSender -> getSender
ml.luxinfine.commands.internal.impl.CommandContextImpl.response(java.lang.String, java.lang.Object[])void -> response
ml.luxinfine.commands.internal.impl.CommandContextImpl.getSenderAsPlayerMP()net.minecraft.entity.player.EntityPlayerMP -> getSenderAsPlayerMP

ml.luxinfine.helper.virtualentity.dummy.DummyEntityAITasks -> team.luxinfine.helper.10_07_2024__18_16_32.оkх
ml.luxinfine.helper.virtualentity.dummy.DummyEntityAITasks.INSTANCE[net.minecraft.entity.ai.EntityAITasks] -> final byte

ml.luxinfine.helper.asm.ASMTransformer$Callback.markModified()void -> markModified

ml.luxinfine.helper.integrations.GodState.setGodEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setGodEnabled
ml.luxinfine.helper.integrations.GodState.isGodEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isGodEnabled
ml.luxinfine.helper.integrations.GodState.isGodActive(java.util.UUID)boolean -> isGodActive

ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.hardEquals(java.lang.Number, double)boolean -> c ge
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.targetString[java.lang.String] -> hq e
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.inject(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int, org.objectweb.asm.tree.AbstractInsnNode, boolean, int)void -> dz f
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.targetClazz[org.objectweb.asm.Type] -> mн a
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.targetDoubleNumber[double] -> c xе
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.targetNumber[long] -> hd b
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.isDouble[boolean] -> p sx
ml.luxinfine.hooks.internal.injects.fuzzy.AfterConstantLoadInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.helper.integrations.IgnoreState.getIgnoreList(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getIgnoreList
ml.luxinfine.helper.integrations.IgnoreState.isInIgnoreList(java.util.UUID, java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInIgnoreList
ml.luxinfine.helper.integrations.IgnoreState.hasIgnoreImmune(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> hasIgnoreImmune
ml.luxinfine.helper.integrations.IgnoreState.setIgnored(java.util.UUID, java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setIgnored
ml.luxinfine.helper.integrations.IgnoreState.isIgnored(java.util.UUID, java.util.UUID)boolean -> isIgnored

ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState -> team.luxinfine.helper.10_07_2024__18_16_32.qkq
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.hide[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  djs
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.show[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  нуy
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.isHidden[ml.luxinfine.helper.utils.objects.MethodAccessor] -> jo b
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.isInvisible(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInvisible
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.lambda$isVisible$0(ml.luxinfine.helper.utils.objects.MethodAccessor, java.lang.Object)java.lang.Boolean ->  c
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.lambda$isInvisible$2(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult ->  tna
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.setInvisible(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setInvisible
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.isVisible(java.util.UUID, java.util.UUID)boolean -> isVisible
ml.luxinfine.helper.integrations.impl.um_core.UltramineVanishState.lambda$isInvisible$1(ml.luxinfine.helper.utils.objects.MethodAccessor, java.lang.Object)java.lang.Boolean -> q wa

ml.luxinfine.commands.internal.args.IntegerCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.jаt
ml.luxinfine.commands.internal.args.IntegerCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Integer ->  хcp
ml.luxinfine.commands.internal.args.IntegerCmdArg.minimum[int] -> с fm
ml.luxinfine.commands.internal.args.IntegerCmdArg.maximum[int] ->  biа
ml.luxinfine.commands.internal.args.IntegerCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.storage.PlayerLanguageStorage -> team.luxinfine.helper.10_07_2024__18_16_32.рws
ml.luxinfine.helper.storage.PlayerLanguageStorage.lambda$getLang$1(java.util.UUID, net.minecraft.world.World)java.lang.String -> e ut
ml.luxinfine.helper.storage.PlayerLanguageStorage.KEY[java.lang.String] -> cx r
ml.luxinfine.helper.storage.PlayerLanguageStorage.lambda$setLang$2(java.lang.String, java.util.UUID, net.minecraft.world.World)void ->  zxr
ml.luxinfine.helper.storage.PlayerLanguageStorage.langMap[java.util.Map] ->  eхн
ml.luxinfine.helper.storage.PlayerLanguageStorage.getLang(java.util.UUID)java.lang.String ->  нoi
ml.luxinfine.helper.storage.PlayerLanguageStorage.setLang(java.util.UUID, java.lang.String)void -> do hki
ml.luxinfine.helper.storage.PlayerLanguageStorage.lambda$writeToNBT$0(net.minecraft.nbt.NBTTagCompound, java.util.UUID, java.lang.String)void -> v wh

ml.luxinfine.config.internal.ConfigReloadInfo -> ml.luxinfine.config.internal.mmн
ml.luxinfine.config.internal.ConfigReloadInfo.sender[net.minecraft.command.ICommandSender] ->  ccо
ml.luxinfine.config.internal.ConfigReloadInfo.configs[java.util.Map] ->  fou
ml.luxinfine.config.internal.ConfigReloadInfo.startTime[long] -> x me
ml.luxinfine.config.internal.ConfigReloadInfo.log[java.util.ArrayList] -> uj n

ml.luxinfine.helper.utils.FluidUtils$DrainResult.getDrainedFluid()java.util.Optional -> getDrainedFluid
ml.luxinfine.helper.utils.FluidUtils$DrainResult.getFilledContainer()net.minecraft.item.ItemStack -> getFilledContainer
ml.luxinfine.helper.utils.FluidUtils$DrainResult.getEmptyContainer()net.minecraft.item.ItemStack -> getEmptyContainer
ml.luxinfine.helper.utils.FluidUtils$DrainResult.input[net.minecraft.item.ItemStack] -> cu р
ml.luxinfine.helper.utils.FluidUtils$DrainResult.output[net.minecraft.item.ItemStack] -> be с
ml.luxinfine.helper.utils.FluidUtils$DrainResult.drainedFluid[net.minecraftforge.fluids.FluidStack] -> l rv

ml.luxinfine.helper.containers.Tank.getFluidStack()java.util.Optional -> getFluidStack
ml.luxinfine.helper.containers.Tank.setFluidType(int)void -> setFluidType
ml.luxinfine.helper.containers.Tank.markForSave()void -> markForSave
ml.luxinfine.helper.containers.Tank.setFluidAmount(int)void -> setFluidAmount
ml.luxinfine.helper.containers.Tank.fill(int, boolean)int -> fill
ml.luxinfine.helper.containers.Tank.name[java.lang.String] ->  cуs
ml.luxinfine.helper.containers.Tank.getName()java.lang.String -> getName
ml.luxinfine.helper.containers.Tank.isEmpty()boolean -> isEmpty
ml.luxinfine.helper.containers.Tank.getFluidType()java.util.Optional -> getFluidType
ml.luxinfine.helper.containers.Tank.setFilter(net.minecraftforge.fluids.Fluid)ml.luxinfine.helper.containers.Tank -> setFilter
ml.luxinfine.helper.containers.Tank.drain(net.minecraftforge.fluids.FluidStack, boolean)net.minecraftforge.fluids.FluidStack -> drain
ml.luxinfine.helper.containers.Tank.tankFilter[net.minecraftforge.fluids.Fluid] -> uc p
ml.luxinfine.helper.containers.Tank.getFluidID()int -> getFluidID
ml.luxinfine.helper.containers.Tank.asSingleArrayInfo()net.minecraftforge.fluids.FluidTankInfo[] -> asSingleArrayInfo

ml.luxinfine.helper.asm.LuxinfineHelperASM.currentModFile[java.io.File] -> zа k
ml.luxinfine.helper.asm.LuxinfineHelperASM.getPluginData(java.lang.Class, java.lang.Object, java.lang.String)java.lang.Object ->  нуy
ml.luxinfine.helper.asm.LuxinfineHelperASM.transformers[java.util.LinkedList] -> hq e



ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsVanishProvider -> team.luxinfine.helper.10_07_2024__18_16_32.уfo
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsVanishProvider.isInvisible(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInvisible
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsVanishProvider.instance[com.earth2me.essentials.Essentials] ->  хcp
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsVanishProvider.setInvisible(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setInvisible
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsVanishProvider.isVisible(java.util.UUID, java.util.UUID)boolean -> isVisible

ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityHook -> team.luxinfine.helper.10_07_2024__18_16_32.qjd
ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityHook.readFromNBT(net.minecraft.entity.Entity, net.minecraft.nbt.NBTTagCompound)void ->  асz

ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectFunction.inject(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> inject

ml.luxinfine.commands.internal.args.BlockCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.hс
ml.luxinfine.commands.internal.args.BlockCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.block.Block -> b kу
ml.luxinfine.commands.internal.args.BlockCmdArg.lambda$new$0(ml.luxinfine.commands.api.ICommandContext)java.util.List -> fk x
ml.luxinfine.commands.internal.args.BlockCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.guis.elements.GuiText.getText()java.lang.String -> getText

ml.luxinfine.events.blocks.FireEvent$FireBurnEvent.getSourceLocation()ml.luxinfine.helper.utils.objects.Location -> getSourceLocation
ml.luxinfine.events.blocks.FireEvent$FireBurnEvent.sourceLocation[ml.luxinfine.helper.utils.objects.Location] -> w jн

ml.luxinfine.commands.internal.args.BoolCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.lxа
ml.luxinfine.commands.internal.args.BoolCmdArg.lambda$new$0(ml.luxinfine.commands.api.ICommandContext)java.util.List -> н uо
ml.luxinfine.commands.internal.args.BoolCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Boolean -> yс h
ml.luxinfine.commands.internal.args.BoolCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.guis.elements.GuiText$GuiDynamicText.getText()java.lang.String -> getText
ml.luxinfine.helper.guis.elements.GuiText$GuiDynamicText.provider[java.util.function.Supplier] -> qy c

ml.luxinfine.commands.internal.CommandsRegistry -> team.luxinfine.helper.10_07_2024__18_16_32.tit
ml.luxinfine.commands.internal.CommandsRegistry.lookupPermissibleRegister()java.lang.reflect.Method ->  jkа
ml.luxinfine.commands.internal.CommandsRegistry.lambda$reloadCommands$2(java.lang.String, java.lang.Object)void -> q ns
ml.luxinfine.commands.internal.CommandsRegistry.getRegisteredCommandsCount()int -> hd b
ml.luxinfine.commands.internal.CommandsRegistry.commandsConfig[net.minecraftforge.common.config.Configuration] -> c ge
ml.luxinfine.commands.internal.CommandsRegistry.clearConflictAliases(java.util.List)void ->  сgх
ml.luxinfine.commands.internal.CommandsRegistry.isServerLoaded[boolean] ->  aео
ml.luxinfine.commands.internal.CommandsRegistry.ultramineCommandsRegistry[java.lang.Object] -> a sw
ml.luxinfine.commands.internal.CommandsRegistry.onStarted()void ->  kfn
ml.luxinfine.commands.internal.CommandsRegistry.getAliases(java.lang.String, ml.luxinfine.commands.api.tree.IBakedCommandNode)java.util.ArrayList -> х оr
ml.luxinfine.commands.internal.CommandsRegistry.allRegisteredCommands[java.util.List] -> rр n
ml.luxinfine.commands.internal.CommandsRegistry.getName(java.lang.String, ml.luxinfine.commands.api.tree.IBakedCommandNode)java.lang.String ->  lbh
ml.luxinfine.commands.internal.CommandsRegistry.unboxNode(ml.luxinfine.commands.api.tree.IBakedCommandNode)ml.luxinfine.commands.api.tree.IBakedCommandNode ->  egq
ml.luxinfine.commands.internal.CommandsRegistry._transform(ml.luxinfine.commands.api.tree.IBakedCommandNode, java.lang.String, boolean, java.util.Set, boolean)ml.luxinfine.commands.api.tree.IBakedCommandNode ->  biа
ml.luxinfine.commands.internal.CommandsRegistry.BAD_VALUE_TRANSLATE[java.lang.String] -> у nf
ml.luxinfine.commands.internal.CommandsRegistry.unloadConfig()void -> s iе
ml.luxinfine.commands.internal.CommandsRegistry.validateCmdName(java.lang.String)void -> t bn
ml.luxinfine.commands.internal.CommandsRegistry.readLong(net.minecraftforge.common.config.Configuration, java.lang.String, java.lang.String, long, long, long, java.lang.String)long -> x ch
ml.luxinfine.commands.internal.CommandsRegistry.lambda$static$0(java.lang.Object)boolean -> сw b
ml.luxinfine.commands.internal.CommandsRegistry.alwaysTrue()java.util.function.Predicate -> i fh
ml.luxinfine.commands.internal.CommandsRegistry.addCommandViaAPI(java.lang.String, boolean, ml.luxinfine.commands.api.tree.IBakedCommandNode)void -> uj n
ml.luxinfine.commands.internal.CommandsRegistry.lambda$reloadCommands$1(java.lang.String, java.lang.Object)void ->  tdz
ml.luxinfine.commands.internal.CommandsRegistry.commandSet[ml.luxinfine.helper.utils.objects.FieldAccessor] -> q da
ml.luxinfine.commands.internal.CommandsRegistry.lambda$tryInjectCommands$3(ml.luxinfine.commands.api.tree.IBakedCommandNode, org.apache.commons.lang3.tuple.Triple, boolean, boolean)void -> сw b
ml.luxinfine.commands.internal.CommandsRegistry.removedForgeCommands[java.util.Map] -> o lx
ml.luxinfine.commands.internal.CommandsRegistry.getIntList(net.minecraftforge.common.config.Configuration, java.lang.String, java.lang.String, int[], java.lang.String)int[] ->  ago
ml.luxinfine.commands.internal.CommandsRegistry.ultramineUnregisterCommand[java.lang.reflect.Method] -> q хd
ml.luxinfine.commands.internal.CommandsRegistry.ultramineGetCommands[java.lang.reflect.Method] -> а vq
ml.luxinfine.commands.internal.CommandsRegistry.activeCommands[java.util.List] -> xf r
ml.luxinfine.commands.internal.CommandsRegistry.removedBukkitModsCommands[java.util.Map] ->  eeс
ml.luxinfine.commands.internal.CommandsRegistry.populateAliases(java.util.List, java.lang.String, java.util.Set)void -> hq e
ml.luxinfine.commands.internal.CommandsRegistry.loadConfig()void -> fн o
ml.luxinfine.commands.internal.CommandsRegistry.unregisterCommand(java.lang.String)void -> мо f
ml.luxinfine.commands.internal.CommandsRegistry.injectCommand(ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand, java.lang.String, boolean)void -> j pt
ml.luxinfine.commands.internal.CommandsRegistry.bukkitRegisterMethod[java.lang.reflect.Method] -> wp у
ml.luxinfine.commands.internal.CommandsRegistry.ALWAYS_TRUE[java.util.function.Predicate] ->  хqx
ml.luxinfine.commands.internal.CommandsRegistry.getActiveCommands()java.util.List -> do hki
ml.luxinfine.commands.internal.CommandsRegistry.reloadCommands()void -> k gх
ml.luxinfine.commands.internal.CommandsRegistry.tryInjectCommands(java.util.List)void -> о kа
ml.luxinfine.commands.internal.CommandsRegistry.removedBukkitPluginsCommands[java.util.Map] -> ix i

ml.luxinfine.helper.virtualentity.world.FakeServerWorld -> team.luxinfine.helper.10_07_2024__18_16_32.мум
ml.luxinfine.helper.virtualentity.world.FakeServerWorld.rootTempFolder[java.io.File] -> а мc
ml.luxinfine.helper.virtualentity.world.FakeServerWorld.dropCollector[java.util.LinkedList] ->  ojf
ml.luxinfine.helper.virtualentity.world.FakeServerWorld.generate()ml.luxinfine.helper.virtualentity.world.FakeServerWorld -> do hki
ml.luxinfine.helper.virtualentity.world.FakeServerWorld.lambda$new$0(net.minecraft.world.World)net.minecraft.world.EnumDifficulty -> i fh


ml.luxinfine.helper.virtualentity.asm.ServerLoadBalancerHook -> team.luxinfine.helper.10_07_2024__18_16_32.hzo
ml.luxinfine.helper.virtualentity.asm.ServerLoadBalancerHook.canUpdateEntity(org.ultramine.server.ServerLoadBalancer, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void ->  itе

ml.luxinfine.hooks.internal.FieldCreatorImpl.requiredInterfaces[java.lang.String[]] ->  сgх
ml.luxinfine.hooks.internal.FieldCreatorImpl.interfaceToBind[ml.luxinfine.hooks.internal.Pair] -> uc p
ml.luxinfine.hooks.internal.FieldCreatorImpl.isAcceptable(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean -> hs o
ml.luxinfine.hooks.internal.FieldCreatorImpl.applyTransformation(org.objectweb.asm.tree.ClassNode)boolean -> uz b
ml.luxinfine.hooks.internal.FieldCreatorImpl.requiredAnnotations[java.lang.String[]] -> p еу
ml.luxinfine.hooks.internal.FieldCreatorImpl.slotsCount[byte] -> q ns
ml.luxinfine.hooks.internal.FieldCreatorImpl.hookContainerClass[java.lang.String] -> nм е

ml.luxinfine.helper.asm.langhooks.C00PacketLoginStartHook -> team.luxinfine.helper.10_07_2024__18_16_32.uqb
ml.luxinfine.helper.asm.langhooks.C00PacketLoginStartHook.writePacketData(net.minecraft.network.login.client.C00PacketLoginStart, net.minecraft.network.PacketBuffer)void ->  срt
ml.luxinfine.helper.asm.langhooks.C00PacketLoginStartHook.lambda$readPacketData$0(net.minecraft.network.login.client.C00PacketLoginStart, java.lang.String)java.lang.Object -> с fm
ml.luxinfine.helper.asm.langhooks.C00PacketLoginStartHook.readPacketData(net.minecraft.network.login.client.C00PacketLoginStart, net.minecraft.network.PacketBuffer)void -> lх r
ml.luxinfine.helper.asm.langhooks.C00PacketLoginStartHook.customFields[ml.luxinfine.hooks.api.FieldsAccessor] -> eа d

ml.luxinfine.helper.tiles.TileNeighborsManager.markDirty()void -> markDirty
ml.luxinfine.helper.tiles.TileNeighborsManager.getNeighbor(int)net.minecraft.tileentity.TileEntity -> getNeighbor
ml.luxinfine.helper.tiles.TileNeighborsManager.te[net.minecraft.tileentity.TileEntity] -> р уp

ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$Placeholder -> team.luxinfine.helper.10_07_2024__18_16_32.tуx$vеg
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$Placeholder.identifier[java.lang.String] ->  wуg
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$Placeholder.lfHandler[ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder] -> uc p

ml.luxinfine.commands.internal.args.TargetPlayerCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.еес
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.offlineSupport[boolean] -> мu h
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)ml.luxinfine.helper.utils.internal.IPlayer ->  kfn
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.requireOfflinePerm[boolean] -> nh n
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.parseTarget(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader, boolean, boolean)ml.luxinfine.helper.utils.internal.IPlayer ->  fou
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.lambda$new$0(boolean, boolean, boolean, ml.luxinfine.commands.api.ICommandContext)java.util.List -> с mi
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.requireOtherPerm[boolean] -> a уz
ml.luxinfine.commands.internal.args.TargetPlayerCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.impl.dummy.EmptyFlyProvider -> team.luxinfine.helper.10_07_2024__18_16_32.нrv
ml.luxinfine.helper.integrations.impl.dummy.EmptyFlyProvider.setFlyEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setFlyEnabled
ml.luxinfine.helper.integrations.impl.dummy.EmptyFlyProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyFlyProvider.isFlyActive(java.util.UUID)boolean -> isFlyActive
ml.luxinfine.helper.integrations.impl.dummy.EmptyFlyProvider.isFlyEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isFlyEnabled

ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.kzv
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getPlayerData(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerData
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getSupportedFeatures()java.util.Set -> getSupportedFeatures
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.createGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> createGroup
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, int)int -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, boolean)boolean -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, boolean)boolean -> getAttributeValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, int)int -> getAttributeValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.deleteGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> deleteGroup
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, double)double -> getAttributeValue
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getGroup
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.OpBasedPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, double)double -> getAttributeGroupValue

ml.luxinfine.helper.guis.elements.GuiFluidTank.getBarTexture()net.minecraft.util.ResourceLocation -> getBarTexture
ml.luxinfine.helper.guis.elements.GuiFluidTank.getFluid()net.minecraftforge.fluids.Fluid -> getFluid
ml.luxinfine.helper.guis.elements.GuiFluidTank.setFluid(net.minecraftforge.fluids.FluidTank)ml.luxinfine.helper.guis.elements.GuiFluidTank -> setFluid
ml.luxinfine.helper.guis.elements.GuiFluidTank.setBarTexture(net.minecraft.util.ResourceLocation)ml.luxinfine.helper.guis.elements.GuiFluidTank -> setBarTexture
ml.luxinfine.helper.guis.elements.GuiFluidTank.setBarTexture(net.minecraft.util.ResourceLocation)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setBarTexture
ml.luxinfine.helper.guis.elements.GuiFluidTank.setProgressProvider(java.util.function.DoubleSupplier)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setProgressProvider
ml.luxinfine.helper.guis.elements.GuiFluidTank.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.GuiFluidTank.getFluidMax()int -> getFluidMax
ml.luxinfine.helper.guis.elements.GuiFluidTank.getProgress()double -> getProgress
ml.luxinfine.helper.guis.elements.GuiFluidTank.getFluidAmount()int -> getFluidAmount

ml.luxinfine.events.blocks.FireEvent$FireFromLiquidEvent.getLiquid()net.minecraft.block.BlockStaticLiquid -> getLiquid
ml.luxinfine.events.blocks.FireEvent$FireFromLiquidEvent.liquid[net.minecraft.block.BlockStaticLiquid] -> о ну
ml.luxinfine.events.blocks.FireEvent$FireFromLiquidEvent.getSourceLocation()ml.luxinfine.helper.utils.objects.Location -> getSourceLocation
ml.luxinfine.events.blocks.FireEvent$FireFromLiquidEvent.sourceLocation[ml.luxinfine.helper.utils.objects.Location] -> нg e

ml.luxinfine.helper.utils.internal.offline_player_accessors.NetServerHandlerFake$NetworkManagerFake -> team.luxinfine.helper.10_07_2024__18_16_32.sfx$wrk


ml.luxinfine.helper.integrations.Permissions$Permission.isAllowPermission()boolean -> isAllowPermission

ml.luxinfine.helper.items.EnergyItem$ElectricManager.INSTANCE[ml.luxinfine.helper.items.EnergyItem$ElectricManager] ->  аlx

ml.luxinfine.events.core.handlers.blocks.EntitySmallFireballHook -> team.luxinfine.helper.10_07_2024__18_16_32.ybv
ml.luxinfine.events.core.handlers.blocks.EntitySmallFireballHook.onImpact(net.minecraft.entity.projectile.EntitySmallFireball, net.minecraft.util.MovingObjectPosition)void ->  умс
ml.luxinfine.events.core.handlers.blocks.EntitySmallFireballHook.lambda$null$0(net.minecraft.entity.projectile.EntitySmallFireball, ml.luxinfine.events.blocks.BlockSetEvent)void -> uj n
ml.luxinfine.events.core.handlers.blocks.EntitySmallFireballHook.lambda$onImpact$1(net.minecraft.entity.projectile.EntitySmallFireball)void -> extends catch
ml.luxinfine.events.core.handlers.blocks.EntitySmallFireballHook.onImpact_return(net.minecraft.entity.projectile.EntitySmallFireball, net.minecraft.util.MovingObjectPosition)void -> j gr

ml.luxinfine.events.entity.EntityDamageEvent.damage[float] -> u iа
ml.luxinfine.events.entity.EntityDamageEvent.source[net.minecraft.util.DamageSource] -> s iе
ml.luxinfine.events.entity.EntityDamageEvent.entity[net.minecraft.entity.Entity] -> ix i
ml.luxinfine.events.entity.EntityDamageEvent.getDamage()float -> getDamage
ml.luxinfine.events.entity.EntityDamageEvent.getSource()net.minecraft.util.DamageSource -> getSource
ml.luxinfine.events.entity.EntityDamageEvent.type[ml.luxinfine.events.entity.EntityDamageEvent$Type] ->  acx
ml.luxinfine.events.entity.EntityDamageEvent.getType()ml.luxinfine.events.entity.EntityDamageEvent$Type -> getType
ml.luxinfine.events.entity.EntityDamageEvent.getEntity()net.minecraft.entity.Entity -> getEntity

ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion -> team.luxinfine.helper.10_07_2024__18_16_32.mнl
ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion.lambda$isMember$3(java.util.UUID)java.lang.Boolean -> lk f
ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion.lambda$setMembers$1(java.util.Optional)void -> case irp
ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion.lambda$setOwners$0(java.util.Optional)void -> f tv
ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion.region[ml.luxinfine.helper.integrations.Regions$Region] -> nм m
ml.luxinfine.helper.integrations.impl.wg.WGCustomCuboidRegion.lambda$isOwner$2(java.util.UUID)java.lang.Boolean -> jм i


ml.luxinfine.commands.api.arguments.ICommandArgumentTransformer.transform(ml.luxinfine.commands.api.ICommandContext, java.lang.Object)java.lang.Object -> transform

ml.luxinfine.helper.integrations.impl.VanillaFlyProvider -> team.luxinfine.helper.10_07_2024__18_16_32.оtd
ml.luxinfine.helper.integrations.impl.VanillaFlyProvider.setFlyEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setFlyEnabled
ml.luxinfine.helper.integrations.impl.VanillaFlyProvider.lambda$isFlyEnabled$1(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult ->  lоl
ml.luxinfine.helper.integrations.impl.VanillaFlyProvider.isFlyActive(java.util.UUID)boolean -> isFlyActive
ml.luxinfine.helper.integrations.impl.VanillaFlyProvider.lambda$isFlyEnabled$0(net.minecraft.entity.player.EntityPlayerMP)ml.luxinfine.helper.integrations.OperationResult -> a уj
ml.luxinfine.helper.integrations.impl.VanillaFlyProvider.isFlyEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isFlyEnabled

ml.luxinfine.events.blocks.BlockSetEvent.getNewBlock()net.minecraft.block.Block -> getNewBlock
ml.luxinfine.events.blocks.BlockSetEvent.source[ml.luxinfine.events.blocks.BlockSetEvent$ActionSource] -> a уj
ml.luxinfine.events.blocks.BlockSetEvent.newBlock[net.minecraft.block.Block] -> f qg
ml.luxinfine.events.blocks.BlockSetEvent.newBlockMeta[int] ->  мdj
ml.luxinfine.events.blocks.BlockSetEvent.z[int] ->  qsq
ml.luxinfine.events.blocks.BlockSetEvent.world[net.minecraft.world.World] ->  uwk
ml.luxinfine.events.blocks.BlockSetEvent.getNewBlockMeta()int -> getNewBlockMeta
ml.luxinfine.events.blocks.BlockSetEvent.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.events.blocks.BlockSetEvent.getX()int -> getX
ml.luxinfine.events.blocks.BlockSetEvent.x[int] ->  lеw
ml.luxinfine.events.blocks.BlockSetEvent.getZ()int -> getZ
ml.luxinfine.events.blocks.BlockSetEvent.oldBlock[net.minecraft.block.Block] ->  uic
ml.luxinfine.events.blocks.BlockSetEvent.oldBlockMeta[int] -> o rn
ml.luxinfine.events.blocks.BlockSetEvent.getOldBlock()net.minecraft.block.Block -> getOldBlock
ml.luxinfine.events.blocks.BlockSetEvent.y[int] ->  bps
ml.luxinfine.events.blocks.BlockSetEvent.getY()int -> getY
ml.luxinfine.events.blocks.BlockSetEvent.getOldBlockMeta()int -> getOldBlockMeta
ml.luxinfine.events.blocks.BlockSetEvent.getActionSource()ml.luxinfine.events.blocks.BlockSetEvent$ActionSource -> getActionSource

ml.luxinfine.helper.integrations.Permissions$GroupData.removeParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeParentGroup
ml.luxinfine.helper.integrations.Permissions$GroupData.addParentGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addParentGroup
ml.luxinfine.helper.integrations.Permissions$GroupData.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.Permissions$GroupData.getDisplayName()ml.luxinfine.helper.integrations.OperationResult -> getDisplayName
ml.luxinfine.helper.integrations.Permissions$GroupData.getParentGroups()ml.luxinfine.helper.integrations.OperationResult -> getParentGroups
ml.luxinfine.helper.integrations.Permissions$GroupData.getPriority()ml.luxinfine.helper.integrations.OperationResult -> getPriority
ml.luxinfine.helper.integrations.Permissions$GroupData.setPriority(int)ml.luxinfine.helper.integrations.OperationResult -> setPriority
ml.luxinfine.helper.integrations.Permissions$GroupData.setDisplayName(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setDisplayName

ml.luxinfine.config.hooks.ConfigRegistrationHook -> team.luxinfine.helper.10_07_2024__18_16_32.оoi
ml.luxinfine.config.hooks.ConfigRegistrationHook.init(ml.luxinfine.hooks.api.IHookContext)void ->  bхv

ml.luxinfine.config.internal.ModNameResolver -> ml.luxinfine.config.internal.peе
ml.luxinfine.config.internal.ModNameResolver.searchModName(java.nio.file.Path, java.lang.String)java.lang.String -> g ua
ml.luxinfine.config.internal.ModNameResolver.lambda$getModName$0(org.objectweb.asm.tree.AnnotationNode)boolean -> yo o
ml.luxinfine.config.internal.ModNameResolver.findModName(java.lang.Class)java.lang.String -> c ge
ml.luxinfine.config.internal.ModNameResolver.getModName(byte[])java.lang.String ->  eхн

ml.luxinfine.helper.utils.FluidUtils$FillResult.getFilledContainer()net.minecraft.item.ItemStack -> getFilledContainer
ml.luxinfine.helper.utils.FluidUtils$FillResult.getEmptyContainer()net.minecraft.item.ItemStack -> getEmptyContainer
ml.luxinfine.helper.utils.FluidUtils$FillResult.getFilledFluid()int -> getFilledFluid
ml.luxinfine.helper.utils.FluidUtils$FillResult.input[net.minecraft.item.ItemStack] -> b lх
ml.luxinfine.helper.utils.FluidUtils$FillResult.output[net.minecraft.item.ItemStack] -> q ас
ml.luxinfine.helper.utils.FluidUtils$FillResult.fluidAmount[int] -> рu t

ml.luxinfine.helper.integrations.PlayerSelection$Selection.getAllPoints()java.util.List -> getAllPoints
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getMaximumPoint()ml.luxinfine.helper.utils.objects.Location -> getMaximumPoint
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getMinimumPoint()ml.luxinfine.helper.utils.objects.Location -> getMinimumPoint
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.helper.integrations.PlayerSelection$Selection.intersects(ml.luxinfine.helper.utils.objects.Location)boolean -> intersects
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getAffectedChunks()java.util.Set -> getAffectedChunks
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getType()ml.luxinfine.helper.integrations.PlayerSelection$SelectionType -> getType
ml.luxinfine.helper.integrations.PlayerSelection$Selection.getCenter()ml.luxinfine.helper.utils.objects.Location -> getCenter

ml.luxinfine.helper.compat.bukkit.BukkitEventsRedirect -> team.luxinfine.helper.10_07_2024__18_16_32.wvi
ml.luxinfine.helper.compat.bukkit.BukkitEventsRedirect.onPreLogin(org.bukkit.event.player.PlayerPreLoginEvent)void -> nм е
ml.luxinfine.helper.compat.bukkit.BukkitEventsRedirect.init()void -> nl х
ml.luxinfine.helper.compat.bukkit.BukkitEventsRedirect.onLogin(org.bukkit.event.player.PlayerLoginEvent)void -> y nу

ml.luxinfine.helper.network.ContainerSync -> team.luxinfine.helper.10_07_2024__18_16_32.wcс
ml.luxinfine.helper.network.ContainerSync.access$300(ml.luxinfine.helper.network.ContainerSync)double -> nb t
ml.luxinfine.helper.network.ContainerSync.type[byte] -> оx e
ml.luxinfine.helper.network.ContainerSync.intValue[int] -> у kv
ml.luxinfine.helper.network.ContainerSync.access$200(ml.luxinfine.helper.network.ContainerSync)int ->  riр
ml.luxinfine.helper.network.ContainerSync.access$400(ml.luxinfine.helper.network.ContainerSync)long ->  zxr
ml.luxinfine.helper.network.ContainerSync.access$000(ml.luxinfine.helper.network.ContainerSync)byte -> nb t
ml.luxinfine.helper.network.ContainerSync.lambda$fromBytes$0(io.netty.buffer.ByteBuf)void -> k iy
ml.luxinfine.helper.network.ContainerSync.id[int] -> m cf
ml.luxinfine.helper.network.ContainerSync.doubleValue[double] ->  xzj
ml.luxinfine.helper.network.ContainerSync.lambda$toBytes$1(io.netty.buffer.ByteBuf)void ->  lpf
ml.luxinfine.helper.network.ContainerSync.access$100(ml.luxinfine.helper.network.ContainerSync)int -> о ну
ml.luxinfine.helper.network.ContainerSync.longValue[long] -> n po

ml.luxinfine.commands.api.CommandException.getMessage(java.lang.String)java.lang.String -> getMessage
ml.luxinfine.commands.api.CommandException.getTranslationKey()java.lang.String -> getTranslationKey
ml.luxinfine.commands.api.CommandException.getContext(java.lang.String)java.lang.String -> getContext
ml.luxinfine.commands.api.CommandException.getArgs()java.lang.Object[] -> getArgs
ml.luxinfine.commands.api.CommandException.getLocalizedMessage(java.lang.String)java.lang.String -> getLocalizedMessage
ml.luxinfine.commands.api.CommandException.getCursor()int -> getCursor
ml.luxinfine.commands.api.CommandException.getInput()java.lang.String -> getInput

ml.luxinfine.config.internal.DefaultConfigParsers$6 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$6
ml.luxinfine.config.internal.DefaultConfigParsers$6.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$6.write(com.google.common.reflect.TypeToken, ml.luxinfine.config.objects.CustomClass)com.google.gson.JsonElement -> с mi
ml.luxinfine.config.internal.DefaultConfigParsers$6.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$6.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)ml.luxinfine.config.objects.CustomClass ->  evq

ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler$WailaHandler -> team.luxinfine.helper.10_07_2024__18_16_32.vpс$lqv
ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler$WailaHandler.lambda$getNBTData$1(net.minecraft.tileentity.TileEntity, net.minecraft.nbt.NBTTagCompound, net.minecraft.entity.player.EntityPlayerMP)void -> х yе
ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler$WailaHandler.lambda$getWailaBody$0(java.util.List, mcp.mobius.waila.api.IWailaDataAccessor, net.minecraft.item.ItemStack)void ->  lbh

ml.luxinfine.helper.handlers.PlayerModsListener.PLAYER_MODS[java.util.HashMap] -> v un
ml.luxinfine.helper.handlers.PlayerModsListener.accept(java.lang.Object, io.netty.channel.ChannelHandlerContext, cpw.mods.fml.common.network.handshake.FMLHandshakeMessage)void ->  aeu
ml.luxinfine.helper.handlers.PlayerModsListener.onLeave(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedOutEvent)void -> tо k
ml.luxinfine.helper.handlers.PlayerModsListener.parseMods(java.util.Map)java.util.Set -> extends catch

ml.luxinfine.hooks.internal.injects.fuzzy.ThrowInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityEventHandler -> team.luxinfine.helper.10_07_2024__18_16_32.yоe
ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityEventHandler.onLogout(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedOutEvent)void ->  ipr
ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityEventHandler.onConstruct(net.minecraftforge.event.entity.EntityEvent$EntityConstructing)void -> c uо
ml.luxinfine.helper.utils.internal.offline_player_accessors.EntityEventHandler.onLogin(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedInEvent)void -> rа a

ml.luxinfine.events.core.handlers.blocks.FarmlandTrampleHandler -> team.luxinfine.helper.10_07_2024__18_16_32.pхн
ml.luxinfine.events.core.handlers.blocks.FarmlandTrampleHandler.onFallenUpon_return(net.minecraft.block.BlockFarmland, net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, float)void -> j ou
ml.luxinfine.events.core.handlers.blocks.FarmlandTrampleHandler.lambda$null$0(net.minecraft.entity.Entity, ml.luxinfine.events.blocks.BlockSetEvent)void -> s iе
ml.luxinfine.events.core.handlers.blocks.FarmlandTrampleHandler.lambda$onFallenUpon$1(net.minecraft.entity.Entity)void -> ag е
ml.luxinfine.events.core.handlers.blocks.FarmlandTrampleHandler.onFallenUpon(net.minecraft.block.BlockFarmland, net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, float)void -> f uy

ml.luxinfine.commands.internal.impl.WrappedStringReader -> team.luxinfine.helper.10_07_2024__18_16_32.iru
ml.luxinfine.commands.internal.impl.WrappedStringReader.expect(char)void -> expect
ml.luxinfine.commands.internal.impl.WrappedStringReader.string[java.lang.String] -> a мm
ml.luxinfine.commands.internal.impl.WrappedStringReader.readQuotedString()java.lang.String -> readQuotedString
ml.luxinfine.commands.internal.impl.WrappedStringReader.readDouble()double -> readDouble
ml.luxinfine.commands.internal.impl.WrappedStringReader.readLong()long -> readLong
ml.luxinfine.commands.internal.impl.WrappedStringReader.readFloat()float -> readFloat
ml.luxinfine.commands.internal.impl.WrappedStringReader.readBoolean()boolean -> readBoolean
ml.luxinfine.commands.internal.impl.WrappedStringReader.getString()java.lang.String -> getString
ml.luxinfine.commands.internal.impl.WrappedStringReader.canRead(int)boolean -> canRead
ml.luxinfine.commands.internal.impl.WrappedStringReader.canRead()boolean -> canRead
ml.luxinfine.commands.internal.impl.WrappedStringReader.peek()char -> peek
ml.luxinfine.commands.internal.impl.WrappedStringReader.peek(int)char -> peek
ml.luxinfine.commands.internal.impl.WrappedStringReader.skip()void -> skip
ml.luxinfine.commands.internal.impl.WrappedStringReader.cursor[int] ->  oid
ml.luxinfine.commands.internal.impl.WrappedStringReader.getCursor()int -> getCursor
ml.luxinfine.commands.internal.impl.WrappedStringReader.read()char -> read
ml.luxinfine.commands.internal.impl.WrappedStringReader.setCursor(int)void -> setCursor
ml.luxinfine.commands.internal.impl.WrappedStringReader.readWord()java.lang.String -> readWord
ml.luxinfine.commands.internal.impl.WrappedStringReader.readStringUntil(char)java.lang.String -> readStringUntil
ml.luxinfine.commands.internal.impl.WrappedStringReader.skipWhitespace()void -> skipWhitespace
ml.luxinfine.commands.internal.impl.WrappedStringReader.readSpace()void -> readSpace
ml.luxinfine.commands.internal.impl.WrappedStringReader.readString()java.lang.String -> readString
ml.luxinfine.commands.internal.impl.WrappedStringReader.readNumber(java.lang.Class, java.util.function.Function)java.lang.Number -> е do
ml.luxinfine.commands.internal.impl.WrappedStringReader.isQuotedStringStart(char)boolean -> nl х
ml.luxinfine.commands.internal.impl.WrappedStringReader.readInt()int -> readInt

ml.luxinfine.commands.internal.impl.CommandBuilder -> team.luxinfine.helper.10_07_2024__18_16_32.gpн
ml.luxinfine.commands.internal.impl.CommandBuilder.optionalArgs[java.util.ArrayList] -> l dl
ml.luxinfine.commands.internal.impl.CommandBuilder.localCommand(ml.luxinfine.commands.api.tree.IBakedCommandNode)ml.luxinfine.commands.api.tree.ITerminateCommandBuilder -> localCommand
ml.luxinfine.commands.internal.impl.CommandBuilder.aliases[java.util.List] -> jq u
ml.luxinfine.commands.internal.impl.CommandBuilder.name[java.lang.String] ->  qfr
ml.luxinfine.commands.internal.impl.CommandBuilder.args[java.util.ArrayList] -> g ti
ml.luxinfine.commands.internal.impl.CommandBuilder.runnable[ml.luxinfine.commands.api.ICommandRunnable] -> н uо
ml.luxinfine.commands.internal.impl.CommandBuilder.localCommands[java.util.ArrayList] -> уa o
ml.luxinfine.commands.internal.impl.CommandBuilder.defaultEnabled[boolean] ->  tlа
ml.luxinfine.commands.internal.impl.CommandBuilder.argument(java.lang.String, ml.luxinfine.commands.api.arguments.ICommandArgument)ml.luxinfine.commands.api.tree.ICommandBuilder -> argument
ml.luxinfine.commands.internal.impl.CommandBuilder.subCommands[java.util.ArrayList] -> е do
ml.luxinfine.commands.internal.impl.CommandBuilder.cooldown[long] ->  nx
ml.luxinfine.commands.internal.impl.CommandBuilder.build()ml.luxinfine.commands.api.tree.IBakedCommandNode -> build
ml.luxinfine.commands.internal.impl.CommandBuilder.run(ml.luxinfine.commands.api.ICommandRunnable)ml.luxinfine.commands.api.tree.IBakedCommandNode -> run
ml.luxinfine.commands.internal.impl.CommandBuilder.lambda$subCommand$0(ml.luxinfine.commands.api.tree.IBakedCommandNode, ml.luxinfine.commands.api.tree.IBakedCommandNode)boolean -> оx e
ml.luxinfine.commands.internal.impl.CommandBuilder.optionalArgument(java.lang.String, ml.luxinfine.commands.api.arguments.ICommandArgument)ml.luxinfine.commands.api.tree.IOptionalCommandBuilder -> optionalArgument
ml.luxinfine.commands.internal.impl.CommandBuilder.subCommand(ml.luxinfine.commands.api.tree.IBakedCommandNode)ml.luxinfine.commands.api.tree.IRunOrSubCommandBuilder -> subCommand

ml.luxinfine.events.core.handlers.entity.EntityLivingBaseInheritHook -> team.luxinfine.helper.10_07_2024__18_16_32.byb
ml.luxinfine.events.core.handlers.entity.EntityLivingBaseInheritHook.damageEntityReturn(net.minecraft.entity.EntityLivingBase, net.minecraft.util.DamageSource, float)void -> rо x
ml.luxinfine.events.core.handlers.entity.EntityLivingBaseInheritHook.lambda$damageEntityReturn$1(net.minecraft.entity.EntityLivingBase, net.minecraft.util.DamageSource)void ->  uwk
ml.luxinfine.events.core.handlers.entity.EntityLivingBaseInheritHook.lambda$damageEntity$0(net.minecraft.entity.EntityLivingBase, net.minecraft.util.DamageSource, float, ml.luxinfine.hooks.api.IHookContext)void -> zlo long
ml.luxinfine.events.core.handlers.entity.EntityLivingBaseInheritHook.damageEntity(net.minecraft.entity.EntityLivingBase, net.minecraft.util.DamageSource, float, ml.luxinfine.hooks.api.IHookContext)void -> k tt

ml.luxinfine.config.internal.DefaultConfigParsers$7 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$7
ml.luxinfine.config.internal.DefaultConfigParsers$7.write(com.google.common.reflect.TypeToken, ml.luxinfine.config.objects.CustomClassList)com.google.gson.JsonElement -> e ut
ml.luxinfine.config.internal.DefaultConfigParsers$7.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$7.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$7.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)ml.luxinfine.config.objects.CustomClassList ->  oet

ml.luxinfine.helper.asm.langhooks.NetHandlerLoginServerHook -> team.luxinfine.helper.10_07_2024__18_16_32.lхо
ml.luxinfine.helper.asm.langhooks.NetHandlerLoginServerHook.processLoginStart(net.minecraft.server.network.NetHandlerLoginServer, net.minecraft.network.login.client.C00PacketLoginStart)void -> m bs
ml.luxinfine.helper.asm.langhooks.NetHandlerLoginServerHook.fields[ml.luxinfine.hooks.api.FieldsAccessor] -> cy x
ml.luxinfine.helper.asm.langhooks.NetHandlerLoginServerHook.func_147326_c(net.minecraft.server.network.NetHandlerLoginServer)void -> ie м

ml.luxinfine.commands.internal.args.EntityCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.рce
ml.luxinfine.commands.internal.args.EntityCmdArg.lambda$new$0(ml.luxinfine.commands.api.ICommandContext)java.util.List -> b оi
ml.luxinfine.commands.internal.args.EntityCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.entity.Entity -> b lх
ml.luxinfine.commands.internal.args.EntityCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.config.internal.DefaultConfigParsers$12 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$12
ml.luxinfine.config.internal.DefaultConfigParsers$12.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$12.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$12.write(com.google.common.reflect.TypeToken, net.minecraft.item.ItemStack)com.google.gson.JsonElement -> nl c
ml.luxinfine.config.internal.DefaultConfigParsers$12.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)net.minecraft.item.ItemStack -> instanceof void

ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$1 -> team.luxinfine.helper.10_07_2024__18_16_32.wнv$оoj
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$1.collectSyncableData(net.minecraft.nbt.NBTTagCompound, net.minecraft.entity.player.EntityPlayerMP)void -> collectSyncableData
ml.luxinfine.helper.tiles.internal.TileInGuiTooltipHandler$1.handleTooltips(net.minecraft.item.ItemStack, net.minecraft.nbt.NBTTagCompound, java.util.List, boolean)void -> handleTooltips

ml.luxinfine.commands.internal.CharsTranslator -> team.luxinfine.helper.10_07_2024__18_16_32.rap
ml.luxinfine.commands.internal.CharsTranslator.ru2en[gnu.trove.map.hash.TCharCharHashMap] -> c uо
ml.luxinfine.commands.internal.CharsTranslator.translateRu2En(java.lang.String)java.lang.String -> x yс
ml.luxinfine.commands.internal.CharsTranslator.en2ru[gnu.trove.map.hash.TCharCharHashMap] -> wl а
ml.luxinfine.commands.internal.CharsTranslator.translateInternal(java.lang.String, gnu.trove.map.hash.TCharCharHashMap)java.lang.String -> оx e
ml.luxinfine.commands.internal.CharsTranslator.translateEn2Ru(java.lang.String)java.lang.String -> v wl

ml.luxinfine.helper.render.ObjRender.renderAll()void -> renderAll
ml.luxinfine.helper.render.ObjRender.buildSimpleRenderInfo(net.minecraft.util.ResourceLocation)ml.luxinfine.helper.render.world.ICustomRendererTile$RenderInfo[] -> buildSimpleRenderInfo


ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl -> team.luxinfine.helper.10_07_2024__18_16_32.fgn
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getExperienceTotal()float -> getExperienceTotal
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.target[com.mojang.authlib.GameProfile] -> yм r
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.foodLevelRef[ml.luxinfine.helper.utils.objects.FieldAccessor] ->  ifу
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getBurnTicks()int -> getBurnTicks
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl._ref()net.minecraft.entity.player.EntityPlayerMP -> c оs
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.removeExperience(int)void -> removeExperience
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getLocation()ml.luxinfine.helper.utils.objects.PlayerLocation -> getLocation
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getEnderInventory()net.minecraft.inventory.InventoryEnderChest -> getEnderInventory
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setWorld(net.minecraft.world.World)void -> setWorld
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getName()java.lang.String -> getName
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getFoodLevel()int -> getFoodLevel
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setHealth(float)void -> setHealth
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.asOnlinePlayer()java.util.Optional -> asOnlinePlayer
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getPlayerData()net.minecraft.nbt.NBTTagCompound -> getPlayerData
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getExperienceLevel()int -> getExperienceLevel
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.addPotionEffect(net.minecraft.potion.PotionEffect)void -> addPotionEffect
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.foodSaturationLevelRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> h sy
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getExperienceRequired()float -> getExperienceRequired
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setGameMode(net.minecraft.world.WorldSettings$GameType)void -> setGameMode
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getGameMode()net.minecraft.world.WorldSettings$GameType -> getGameMode
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getMaxHealth()float -> getMaxHealth
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setFoodLevel(int)void -> setFoodLevel
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getUUID()java.util.UUID -> getUUID
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.isOnline()boolean -> isOnline
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getInventory()net.minecraft.entity.player.InventoryPlayer -> getInventory
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getExperience()float -> getExperience
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getX()double -> getX
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setLocation(double, double, double, float, float)void -> setLocation
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getProperties(java.lang.Class, java.lang.String)net.minecraftforge.common.IExtendedEntityProperties -> getProperties
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getZ()double -> getZ
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getDimension()int -> getDimension
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getLanguage()java.lang.String -> getLanguage
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.removePotionEffect(net.minecraft.potion.Potion)void -> removePotionEffect
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.free()void -> free
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getHealth()float -> getHealth
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getPotionEffects()java.util.Collection -> getPotionEffects
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setBurnTicks(int)void -> setBurnTicks
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.setSaturationLevel(float)void -> setSaturationLevel
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.addExperience(int)void -> addExperience
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getSaturationLevel()float -> getSaturationLevel
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getY()double -> getY
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.dataProvider[java.util.function.Supplier] ->  уym
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.fireRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> e ur
ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl.getProfile()com.mojang.authlib.GameProfile -> getProfile


ml.luxinfine.hooks.internal.injects.fuzzy.FieldGetInjectorFuzzy.requiredArgs(org.objectweb.asm.tree.FieldInsnNode)boolean ->  mk
ml.luxinfine.hooks.internal.injects.fuzzy.FieldGetInjectorFuzzy.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> у mn
ml.luxinfine.hooks.internal.injects.fuzzy.FieldGetInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.helper.asm.EntityMinecartHopperHook -> team.luxinfine.helper.10_07_2024__18_16_32.рsх
ml.luxinfine.helper.asm.EntityMinecartHopperHook.readEntityFromNBT(net.minecraft.entity.item.EntityMinecartHopper, net.minecraft.nbt.NBTTagCompound)void -> l аm
ml.luxinfine.helper.asm.EntityMinecartHopperHook.writeEntityToNBT(net.minecraft.entity.item.EntityMinecartHopper, net.minecraft.nbt.NBTTagCompound)void ->  wеj
ml.luxinfine.helper.asm.EntityMinecartHopperHook._setOwner(net.minecraft.entity.item.EntityMinecartHopper, com.mojang.authlib.GameProfile)void -> g by
ml.luxinfine.helper.asm.EntityMinecartHopperHook._provideOwner(net.minecraft.entity.item.EntityMinecartHopper, ml.luxinfine.hooks.api.IHookContext)void -> k nr
ml.luxinfine.helper.asm.EntityMinecartHopperHook.OWNER_FIELD[ml.luxinfine.hooks.api.FieldsAccessor] -> z pe

ml.luxinfine.helper.integrations.Regions.getRegionsInPosition(net.minecraft.entity.Entity)java.util.Set -> getRegionsInPosition
ml.luxinfine.helper.integrations.Regions.getRegionsInPosition(net.minecraft.world.World, int, int, int)java.util.Set -> getRegionsInPosition
ml.luxinfine.helper.integrations.Regions.getRegisteredFlags()java.util.Set -> getRegisteredFlags
ml.luxinfine.helper.integrations.Regions.canPlaceBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canPlaceBlock
ml.luxinfine.helper.integrations.Regions.getGlobalRegion(net.minecraft.world.World)java.util.Optional -> getGlobalRegion
ml.luxinfine.helper.integrations.Regions.deleteRegion(net.minecraft.world.World, java.lang.String)ml.luxinfine.helper.integrations.Regions$DeletionStatus -> deleteRegion
ml.luxinfine.helper.integrations.Regions.registerFlag(java.lang.String, java.util.function.Function, java.util.function.Function, java.lang.Object, java.util.function.Function, java.util.function.BiConsumer)ml.luxinfine.helper.integrations.Regions$RegionFlag -> registerFlag
ml.luxinfine.helper.integrations.Regions.getRegionsInChunk(net.minecraft.world.World, int, int)java.util.Set -> getRegionsInChunk
ml.luxinfine.helper.integrations.Regions.canFromTo(net.minecraft.world.World, int, int, int, int, int, int)boolean -> canFromTo
ml.luxinfine.helper.integrations.Regions.canInteract(net.minecraft.world.World, int, int, int, net.minecraftforge.common.util.ForgeDirection, java.util.UUID)boolean -> canInteract
ml.luxinfine.helper.integrations.Regions.canAttack(net.minecraft.entity.Entity, java.util.UUID)boolean -> canAttack
ml.luxinfine.helper.integrations.Regions.canAttack(net.minecraft.entity.Entity, net.minecraft.entity.Entity)boolean -> canAttack
ml.luxinfine.helper.integrations.Regions.registerBooleanFlag(java.lang.String, boolean)ml.luxinfine.helper.integrations.Regions$RegionFlag -> registerBooleanFlag
ml.luxinfine.helper.integrations.Regions.getRegionsInWorld(net.minecraft.world.World)java.util.Set -> getRegionsInWorld
ml.luxinfine.helper.integrations.Regions.getRegion(net.minecraft.world.World, java.lang.String)java.util.Optional -> getRegion
ml.luxinfine.helper.integrations.Regions.canTeleport(net.minecraft.entity.Entity, net.minecraft.world.World, double, double, double)boolean -> canTeleport
ml.luxinfine.helper.integrations.Regions.canBreakBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canBreakBlock
ml.luxinfine.helper.integrations.Regions.addRegion(net.minecraft.world.World, ml.luxinfine.helper.integrations.Regions$RegionShape, java.lang.String, boolean, net.minecraft.util.ChunkCoordinates[])ml.luxinfine.helper.integrations.Regions$CreationStatus -> addRegion
ml.luxinfine.helper.integrations.Regions.addRegion(ml.luxinfine.helper.integrations.Regions$Region, net.minecraft.world.World, ml.luxinfine.helper.integrations.Regions$RegionShape, java.lang.String, boolean, net.minecraft.util.ChunkCoordinates[])ml.luxinfine.helper.integrations.Regions$CreationStatus -> addRegion
ml.luxinfine.helper.integrations.Regions.getRegionsInPosition(net.minecraft.tileentity.TileEntity)java.util.Set -> getRegionsInPosition

ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion -> team.luxinfine.helper.10_07_2024__18_16_32.qq
ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion.lambda$isMember$3(java.util.UUID)java.lang.Boolean ->  vkf
ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion.lambda$setMembers$1(java.util.Optional)void ->  rсq
ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion.lambda$setOwners$0(java.util.Optional)void -> м bр
ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion.region[ml.luxinfine.helper.integrations.Regions$Region] -> j ox
ml.luxinfine.helper.integrations.impl.wg.WGCustomPolygonRegion.lambda$isOwner$2(java.util.UUID)java.lang.Boolean -> о uм


ml.luxinfine.commands.internal.args.StringCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.gbе
ml.luxinfine.commands.internal.args.StringCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.String -> rр n
ml.luxinfine.commands.internal.args.StringCmdArg.type[ml.luxinfine.commands.internal.args.StringCmdArg$StringType] -> zа k
ml.luxinfine.commands.internal.args.StringCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.utils.objects.Cuboid.getSize()long -> getSize
ml.luxinfine.helper.utils.objects.Cuboid.isIncorrect()boolean -> isIncorrect
ml.luxinfine.helper.utils.objects.Cuboid.getFirst()ml.luxinfine.helper.utils.objects.Location -> getFirst
ml.luxinfine.helper.utils.objects.Cuboid.setFirst(ml.luxinfine.helper.utils.objects.Location)ml.luxinfine.helper.utils.objects.Cuboid -> setFirst
ml.luxinfine.helper.utils.objects.Cuboid.setFirst(int, int, int, int)ml.luxinfine.helper.utils.objects.Cuboid -> setFirst
ml.luxinfine.helper.utils.objects.Cuboid.iterate(boolean, ml.luxinfine.helper.utils.objects.Cuboid$BlockIterator)boolean -> iterate
ml.luxinfine.helper.utils.objects.Cuboid.pos2[ml.luxinfine.helper.utils.objects.Location] ->  gwy
ml.luxinfine.helper.utils.objects.Cuboid.pos1[ml.luxinfine.helper.utils.objects.Location] -> sj d
ml.luxinfine.helper.utils.objects.Cuboid.setSecond(int, int, int, int)ml.luxinfine.helper.utils.objects.Cuboid -> setSecond
ml.luxinfine.helper.utils.objects.Cuboid.clear()ml.luxinfine.helper.utils.objects.Cuboid -> clear
ml.luxinfine.helper.utils.objects.Cuboid.setSecond(ml.luxinfine.helper.utils.objects.Location)ml.luxinfine.helper.utils.objects.Cuboid -> setSecond
ml.luxinfine.helper.utils.objects.Cuboid.iterate(boolean, java.util.function.Consumer)void -> iterate
ml.luxinfine.helper.utils.objects.Cuboid.iterate(java.util.function.Consumer)void -> iterate
ml.luxinfine.helper.utils.objects.Cuboid.set(ml.luxinfine.helper.utils.objects.Location, boolean)ml.luxinfine.helper.utils.objects.Cuboid -> set
ml.luxinfine.helper.utils.objects.Cuboid.getSecond()ml.luxinfine.helper.utils.objects.Location -> getSecond
ml.luxinfine.helper.utils.objects.Cuboid.iterate(ml.luxinfine.helper.utils.objects.Cuboid$BlockIterator)boolean -> iterate


ml.luxinfine.commands.internal.args.TargetPlayersCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.аfр
ml.luxinfine.commands.internal.args.TargetPlayersCmdArg.lambda$new$0(boolean, ml.luxinfine.commands.api.ICommandContext)java.util.List ->  fou
ml.luxinfine.commands.internal.args.TargetPlayersCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.util.List ->  acx
ml.luxinfine.commands.internal.args.TargetPlayersCmdArg.allowOffline[boolean] -> о ru
ml.luxinfine.commands.internal.args.TargetPlayersCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.hooks.api.IHookContext.getInjectIndex()int -> getInjectIndex
ml.luxinfine.hooks.api.IHookContext.caughtException()boolean -> caughtException
ml.luxinfine.hooks.api.IHookContext.getRedirectedValue()java.lang.Object -> getRedirectedValue
ml.luxinfine.hooks.api.IHookContext.getCustomLocalVars()java.lang.Object[] -> getCustomLocalVars
ml.luxinfine.hooks.api.IHookContext.exit(java.lang.Object)void -> exit
ml.luxinfine.hooks.api.IHookContext.getSourceClass()java.lang.Class -> getSourceClass

ml.luxinfine.helper.utils.ASMUtils.searchFreeLocalIndex_0(org.objectweb.asm.tree.MethodNode)int -> n po
ml.luxinfine.helper.utils.ASMUtils.searchFreeLocalIndex_1(org.objectweb.asm.tree.MethodNode)int -> ej о
ml.luxinfine.helper.utils.ASMUtils.asEnumClazz0(java.lang.Class)java.lang.Class -> u cw
ml.luxinfine.helper.utils.ASMUtils.searchFreeLocalIndex_3(org.objectweb.asm.tree.MethodNode)int -> ee w
ml.luxinfine.helper.utils.ASMUtils.isDevEnvironment[byte] -> ае y
ml.luxinfine.helper.utils.ASMUtils.searchFreeLocalIndex_2(org.objectweb.asm.tree.MethodNode)int -> x eн
ml.luxinfine.helper.utils.ASMUtils.parseInt(java.lang.String)int -> xa w
ml.luxinfine.helper.utils.ASMUtils.hasUM[byte] -> е dа
ml.luxinfine.helper.utils.ASMUtils.hasBukkit[byte] -> s cе

ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext -> team.luxinfine.helper.10_07_2024__18_16_32.pxz
ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext.setBalance(java.util.UUID, double)boolean -> setBalance
ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext.removeBalance(java.util.UUID, double)boolean -> removeBalance
ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext.source[ml.luxinfine.helper.integrations.Economy] ->  ipr
ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext.addBalance(java.util.UUID, double)boolean -> addBalance
ml.luxinfine.helper.integrations.impl.RedirectedEconomyTransactionContext.getBalance(java.util.UUID)java.util.Optional -> getBalance

ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand -> team.luxinfine.helper.10_07_2024__18_16_32.pрr
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$null$0(long, java.lang.Long)boolean ->  нmм
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$handleCommand$7(java.util.UUID)java.util.Map -> n td
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$null$2(long, java.lang.Long)boolean -> уc r
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$static$4()void ->  atf
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.rootNode[ml.luxinfine.commands.api.tree.IBakedCommandNode] ->  нхс
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.tabCompletionCooldowns[java.util.Map] -> уu v
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.handleSumCmd(ml.luxinfine.commands.api.tree.IBakedCommandNode, net.minecraft.command.ICommandSender, ml.luxinfine.commands.api.IStringReader, java.lang.String, java.util.Map, boolean, java.util.LinkedList)org.apache.commons.lang3.tuple.Pair ->  еqа
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.reader(java.lang.String, ml.luxinfine.commands.api.IStringReader)ml.luxinfine.commands.api.IStringReader -> g ti
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.generateHelpLink(java.lang.String, java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> jq u
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.handleCommand(net.minecraft.command.ICommandSender, ml.luxinfine.commands.api.tree.IBakedCommandNode, ml.luxinfine.commands.api.IStringReader, int, java.util.Map, boolean)ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationResult -> c xе
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$null$1(long, org.apache.commons.lang3.tuple.Pair)boolean -> q tz
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.findCompletions(net.minecraft.command.ICommandSender, ml.luxinfine.commands.api.tree.IBakedCommandNode, ml.luxinfine.commands.api.IStringReader, java.util.Map, java.util.LinkedHashSet, java.util.LinkedHashSet)void -> уa o
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.checkCmdWorldAccess(ml.luxinfine.commands.api.ICommandContext)boolean -> jo b
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.computeCost(net.minecraft.command.ICommandSender, ml.luxinfine.commands.api.tree.IBakedCommandNode)double -> a уj
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.splitInts(java.lang.String)int[] ->  vjх
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.quote(java.lang.String)java.lang.String ->  оji
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$null$3(long, java.lang.Long)boolean ->  wus
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.generateHelp(net.minecraft.command.ICommandSender, ml.luxinfine.commands.api.tree.IBakedCommandNode, java.lang.String)java.util.List -> е do
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.hasPerm(net.minecraft.command.ICommandSender, java.lang.String)boolean -> mн a
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$handleCommand$8(java.util.UUID)java.util.Map -> нg e
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$addTabCompletionOptions$6(java.lang.String)java.lang.String ->  nt
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.generateHelp(net.minecraft.command.ICommandSender)java.util.List -> yс h
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.lambda$addTabCompletionOptions$5(java.lang.String, java.lang.String)boolean -> j хl
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.unquote(java.lang.String)java.lang.String -> a aс
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.handleSubCommandCompletion(ml.luxinfine.commands.api.tree.IBakedCommandNode, ml.luxinfine.commands.api.IStringReader, net.minecraft.command.ICommandSender, java.lang.String, java.util.Map, java.util.LinkedHashSet, java.util.LinkedHashSet)org.apache.commons.lang3.tuple.Pair -> уf u
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.confirmPendingCooldown[java.util.Map] -> о ks
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.executionCooldowns[java.util.Map] ->  sа
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.appendCmdHelp(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.helper.utils.objects.MessageBuilder, ml.luxinfine.commands.api.tree.IBakedCommandNode, java.lang.String, java.util.List)void ->  xzj
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.isSubCmdCaseSensitive(ml.luxinfine.commands.api.tree.IBakedCommandNode)boolean -> nм m
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.cmdPath[java.lang.String] -> cy p
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.asString(java.lang.Throwable, net.minecraft.command.ICommandSender)java.lang.String -> c оs
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.globalCommandCooldowns[java.util.Map] -> р uу
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand.hasHelp[boolean] -> уе y

ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.requiredExecute[long] ->  rfа
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.getRequiredExecute()long -> getRequiredExecute
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.ticks[long] ->  хkg
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.tick()void -> о хм
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.executed[long] ->  qtl
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.getPeriod()long -> getPeriod
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.alive[boolean] -> b аw
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.period[long] -> m сa
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.getExecutedCount()long -> getExecutedCount
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.task[java.lang.Runnable] -> cx r
ml.luxinfine.helper.utils.SchedulerUtils$TimerTask.cancel()void -> cancel

ml.luxinfine.helper.integrations.OperationResult.SUCCESS_TRUE[ml.luxinfine.helper.integrations.OperationResult] -> v wo
ml.luxinfine.helper.integrations.OperationResult.EMPTY[ml.luxinfine.helper.integrations.OperationResult] ->  tdz
ml.luxinfine.helper.integrations.OperationResult.flatMap(ml.luxinfine.helper.integrations.OperationResult$ResultTransformer)ml.luxinfine.helper.integrations.OperationResult -> flatMap
ml.luxinfine.helper.integrations.OperationResult.message[java.lang.String] -> p eо
ml.luxinfine.helper.integrations.OperationResult.getMessage()java.lang.String -> getMessage
ml.luxinfine.helper.integrations.OperationResult.getOrElse(java.lang.Object)java.lang.Object -> getOrElse
ml.luxinfine.helper.integrations.OperationResult.getOrElse(java.util.function.Supplier)java.lang.Object -> getOrElse
ml.luxinfine.helper.integrations.OperationResult.getStatus()ml.luxinfine.helper.integrations.OperationResult$Status -> getStatus
ml.luxinfine.helper.integrations.OperationResult.asResult()java.util.Optional -> asResult
ml.luxinfine.helper.integrations.OperationResult.isSuccess()boolean -> isSuccess
ml.luxinfine.helper.integrations.OperationResult.getCause()java.lang.Throwable -> getCause
ml.luxinfine.helper.integrations.OperationResult.map(ml.luxinfine.helper.integrations.OperationResult$ResultTransformer)ml.luxinfine.helper.integrations.OperationResult -> map
ml.luxinfine.helper.integrations.OperationResult.value[java.lang.Object] -> nа c
ml.luxinfine.helper.integrations.OperationResult.isEmpty()boolean -> isEmpty
ml.luxinfine.helper.integrations.OperationResult.get()java.lang.Object -> get
ml.luxinfine.helper.integrations.OperationResult.error[java.lang.Throwable] -> do x
ml.luxinfine.helper.integrations.OperationResult.ifPresent(java.util.function.Consumer)void -> ifPresent
ml.luxinfine.helper.integrations.OperationResult.SUCCESS[ml.luxinfine.helper.integrations.OperationResult] -> gh t
ml.luxinfine.helper.integrations.OperationResult.getOrNull()java.lang.Object -> getOrNull
ml.luxinfine.helper.integrations.OperationResult.status[ml.luxinfine.helper.integrations.OperationResult$Status] -> о ну
ml.luxinfine.helper.integrations.OperationResult.PLATFORM_UNSUPPORTED[ml.luxinfine.helper.integrations.OperationResult] -> s oм
ml.luxinfine.helper.integrations.OperationResult.SUCCESS_FALSE[ml.luxinfine.helper.integrations.OperationResult] -> dk а

ml.luxinfine.events.core.listeners.EntityCollisionListener -> team.luxinfine.helper.10_07_2024__18_16_32.mхi
ml.luxinfine.events.core.listeners.EntityCollisionListener.lambda$onTick$0(net.minecraft.entity.Entity, ml.luxinfine.helper.utils.objects.Location)boolean -> a sw
ml.luxinfine.events.core.listeners.EntityCollisionListener.onTick(cpw.mods.fml.common.gameevent.TickEvent$ServerTickEvent)void ->  saн

ml.luxinfine.hooks.internal.injects.fuzzy.BeforeInvokeInjectorFuzzy.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList -> dj n

ml.luxinfine.events.ModConfig -> team.luxinfine.helper.10_07_2024__18_16_32.fjо

ml.luxinfine.events.blocks.HopperEvent$ImportEvent.source[net.minecraft.inventory.IInventory] -> vk у
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.setCooldown(int)void -> setCooldown
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.transferItem[net.minecraft.item.ItemStack] -> gy р
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.getSource()net.minecraft.inventory.IInventory -> getSource
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.getTransferItem()net.minecraft.item.ItemStack -> getTransferItem
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.hopper[net.minecraft.tileentity.IHopper] -> ix i
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.getSlotID()int -> getSlotID
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.getHopper()net.minecraft.tileentity.IHopper -> getHopper
ml.luxinfine.events.blocks.HopperEvent$ImportEvent.slotID[int] ->  нij

ml.luxinfine.hooks.internal.HooksContainerImpl.applyTransformations(java.lang.String, org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean ->  ccо
ml.luxinfine.hooks.internal.HooksContainerImpl.INHERIT_PENDING_INTERFACE_BINDERS[java.util.concurrent.CopyOnWriteArrayList] -> b bs
ml.luxinfine.hooks.internal.HooksContainerImpl.PENDING_ACCESSORS[java.util.concurrent.ConcurrentHashMap] ->  сjf
ml.luxinfine.hooks.internal.HooksContainerImpl.applyTransformations0(java.lang.String, org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean -> p нh
ml.luxinfine.hooks.internal.HooksContainerImpl.PENDING_INTERFACE_BINDERS[java.util.concurrent.ConcurrentHashMap] ->  kwх
ml.luxinfine.hooks.internal.HooksContainerImpl.INHERIT_PENDING_ACCESSORS[java.util.concurrent.CopyOnWriteArrayList] -> nh n
ml.luxinfine.hooks.internal.HooksContainerImpl.currentPatch[ml.luxinfine.hooks.internal.IndexedASMPatch] -> true transient
ml.luxinfine.hooks.internal.HooksContainerImpl.initializeLocalArray(org.objectweb.asm.tree.ClassNode, ml.luxinfine.hooks.internal.LazyContextInfo)void ->  мkн
ml.luxinfine.hooks.internal.HooksContainerImpl.INHERIT_PENDING_INJECTORS[java.util.concurrent.CopyOnWriteArrayList] -> hc p
ml.luxinfine.hooks.internal.HooksContainerImpl.PENDING_INJECTORS[java.util.concurrent.ConcurrentHashMap] -> q ot
ml.luxinfine.hooks.internal.HooksContainerImpl.HOOK_STEPS[ml.luxinfine.hooks.internal.HooksContainerImpl[]] ->  еyn

ml.luxinfine.helper.render.ModelReader -> team.luxinfine.helper.10_07_2024__18_16_32.orx
ml.luxinfine.helper.render.ModelReader.readTextureCoordinates(java.io.DataInputStream)net.minecraftforge.client.model.obj.TextureCoordinate[] -> gh t
ml.luxinfine.helper.render.ModelReader.readObjGroupObjects(java.io.DataInputStream)ml.luxinfine.helper.render.ObjGroupObject[] -> wp у
ml.luxinfine.helper.render.ModelReader.readModel(java.io.InputStream)ml.luxinfine.helper.render.ObjRender -> p нh
ml.luxinfine.helper.render.ModelReader.readFaces(java.io.DataInputStream)net.minecraftforge.client.model.obj.Face[] -> xa w
ml.luxinfine.helper.render.ModelReader.readVertex(java.io.DataInputStream)net.minecraftforge.client.model.obj.Vertex -> еe k
ml.luxinfine.helper.render.ModelReader.readVertexes(java.io.DataInputStream)net.minecraftforge.client.model.obj.Vertex[] -> r de
ml.luxinfine.helper.render.ModelReader.readTextureCoordinate(java.io.DataInputStream)net.minecraftforge.client.model.obj.TextureCoordinate -> voz throws

ml.luxinfine.hooks.internal.injects.BaseInjector.requiredInterfaces[java.lang.String[]] -> н cb
ml.luxinfine.hooks.internal.injects.BaseInjector.methodName[java.lang.String] -> pk f
ml.luxinfine.hooks.internal.injects.BaseInjector.fuzzy[boolean] -> jk f
ml.luxinfine.hooks.internal.injects.BaseInjector.requiredAnnotations[java.lang.String[]] ->  tхj
ml.luxinfine.hooks.internal.injects.BaseInjector.trimFirstMethodDescArg(org.objectweb.asm.Type[])org.objectweb.asm.Type[] -> x eн
ml.luxinfine.hooks.internal.injects.BaseInjector.lookupTarget(org.objectweb.asm.tree.ClassNode)java.util.List -> b оi
ml.luxinfine.hooks.internal.injects.BaseInjector.createLocalVarsCount[byte] -> е u
ml.luxinfine.hooks.internal.injects.BaseInjector.targetMethodName[java.lang.String] ->  pmi
ml.luxinfine.hooks.internal.injects.BaseInjector.checkInjectionCondition(ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, int)boolean -> vg v
ml.luxinfine.hooks.internal.injects.BaseInjector.hookContainerClass[java.lang.String] ->  ska
ml.luxinfine.hooks.internal.injects.BaseInjector.conditionCallbackName[java.lang.String] ->  сmq
ml.luxinfine.hooks.internal.injects.BaseInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf
ml.luxinfine.hooks.internal.injects.BaseInjector.targetMethodDesc[java.lang.String] -> m hy
ml.luxinfine.hooks.internal.injects.BaseInjector.createMethodIfAbsent[boolean] -> e qр
ml.luxinfine.hooks.internal.injects.BaseInjector.targetInfo[java.lang.String[]] ->  gjа
ml.luxinfine.hooks.internal.injects.BaseInjector.isAcceptable(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean ->  ovy
ml.luxinfine.hooks.internal.injects.BaseInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd
ml.luxinfine.hooks.internal.injects.BaseInjector.target[ml.luxinfine.hooks.api.InjectTarget] -> yo o
ml.luxinfine.hooks.internal.injects.BaseInjector.methodArgs[java.lang.String] -> qa a
ml.luxinfine.hooks.internal.injects.BaseInjector.conditionCallbackClass[java.lang.String] -> uс е
ml.luxinfine.hooks.internal.injects.BaseInjector.hasOverride(java.lang.String, java.lang.String, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean -> qy c
ml.luxinfine.hooks.internal.injects.BaseInjector.applyInjector(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, ml.luxinfine.hooks.internal.LazyContextInfo)boolean -> х оr
ml.luxinfine.hooks.internal.injects.BaseInjector.methodReturn[java.lang.String] ->  еaf
ml.luxinfine.hooks.internal.injects.BaseInjector.isAcceptableMethodByDesc(org.objectweb.asm.tree.MethodNode)boolean -> yс h
ml.luxinfine.hooks.internal.injects.BaseInjector.mandatory[boolean] -> dм w

ml.luxinfine.helper.utils.internal.SetBlockHooksHandler -> team.luxinfine.helper.10_07_2024__18_16_32.skр
ml.luxinfine.helper.utils.internal.SetBlockHooksHandler.push(java.util.function.Consumer)void -> ej о
ml.luxinfine.helper.utils.internal.SetBlockHooksHandler.pop()void ->  мхн
ml.luxinfine.helper.utils.internal.SetBlockHooksHandler._onBlockSet_internal(ml.luxinfine.events.blocks.BlockSetEvent)void -> l rv
ml.luxinfine.helper.utils.internal.SetBlockHooksHandler.handlers[java.util.LinkedList] ->  рqа

ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager -> team.luxinfine.helper.10_07_2024__18_16_32.оbw
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.applyPlaceholders(java.lang.String, java.util.UUID)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.placeholders[java.util.HashMap] ->  jcg
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.registerPlaceholder(java.lang.String, ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder)void -> registerPlaceholder
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.applyPlaceholdersInternal(java.lang.String, java.lang.Object, boolean)java.lang.String -> мо f
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.applyPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.getPlaceholder(java.lang.String)java.util.Optional -> getPlaceholder
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.RELATIONAL_PLACEHOLDER_PATTERN[java.util.regex.Pattern] -> h id
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.getRegisteredPlaceholders()java.util.Map -> getRegisteredPlaceholders
ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager.applyRelationalPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyRelationalPlaceholders

ml.luxinfine.hooks.internal.LazyContextInfo.contextLocalSlotPerMethod[java.util.IdentityHashMap] ->  рqа
ml.luxinfine.hooks.internal.LazyContextInfo.localsPerHookContainer[java.util.Map] ->  ocy



ml.luxinfine.helper.integrations.VanishState.isInvisible(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInvisible
ml.luxinfine.helper.integrations.VanishState.setInvisible(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setInvisible
ml.luxinfine.helper.integrations.VanishState.isVisible(java.util.UUID, java.util.UUID)boolean -> isVisible

ml.luxinfine.events.entity.PlayerTryConnectionEvent.setDisconnectMsg(net.minecraft.util.IChatComponent)void -> setDisconnectMsg
ml.luxinfine.events.entity.PlayerTryConnectionEvent.disconnectMsg[net.minecraft.util.IChatComponent] -> uс е
ml.luxinfine.events.entity.PlayerTryConnectionEvent.address[java.net.InetAddress] -> jk f
ml.luxinfine.events.entity.PlayerTryConnectionEvent.profile[com.mojang.authlib.GameProfile] ->  xуu
ml.luxinfine.events.entity.PlayerTryConnectionEvent.getAddress()java.net.InetAddress -> getAddress
ml.luxinfine.events.entity.PlayerTryConnectionEvent.getDisconnectMsg()net.minecraft.util.IChatComponent -> getDisconnectMsg
ml.luxinfine.events.entity.PlayerTryConnectionEvent.getProfile()com.mojang.authlib.GameProfile -> getProfile


ml.luxinfine.helper.utils.PlaceholderUtils.handlers[java.util.Map] ->  нtн
ml.luxinfine.helper.utils.PlaceholderUtils.INTERNAL_HANDLER[ml.luxinfine.helper.utils.internal.placeholders.InternalPlaceholdersManager] -> z bу

ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.applyPlaceholders(java.lang.String, java.util.UUID)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.registerPlaceholder(java.lang.String, ml.luxinfine.helper.utils.PlaceholderUtils$Placeholder)void -> registerPlaceholder
ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.applyPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyPlaceholders
ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.getPlaceholder(java.lang.String)java.util.Optional -> getPlaceholder
ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.getRegisteredPlaceholders()java.util.Map -> getRegisteredPlaceholders
ml.luxinfine.helper.utils.PlaceholderUtils$PlaceholderHandler.applyRelationalPlaceholders(java.lang.String, net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP)java.lang.String -> applyRelationalPlaceholders



ml.luxinfine.helper.asm.FireballExplosionHook -> team.luxinfine.helper.10_07_2024__18_16_32.хwх
ml.luxinfine.helper.asm.FireballExplosionHook.onImpact(net.minecraft.world.World, net.minecraft.entity.Entity, double, double, double, float, boolean, boolean, net.minecraft.entity.projectile.EntityLargeFireball, net.minecraft.util.MovingObjectPosition)net.minecraft.world.Explosion ->  mdb
ml.luxinfine.helper.asm.FireballExplosionHook.lambda$onImpact$1(net.minecraft.world.World, net.minecraft.entity.Entity, double, double, double, float, boolean, boolean)net.minecraft.world.Explosion -> n po
ml.luxinfine.helper.asm.FireballExplosionHook.lambda$onImpact$0(net.minecraft.world.World, net.minecraft.entity.projectile.EntityLargeFireball, double, double, double, float, boolean, boolean)net.minecraft.world.Explosion ->  еyn

ml.luxinfine.helper.recipes.InputStack.isOreKeyExist()boolean ->  nxе
ml.luxinfine.helper.recipes.InputStack.oreKey[java.lang.String] -> p рi
ml.luxinfine.helper.recipes.InputStack.isEquals(ml.luxinfine.helper.recipes.InputStack)boolean -> isEquals
ml.luxinfine.helper.recipes.InputStack.count[int] -> c hе
ml.luxinfine.helper.recipes.InputStack.getInputs()java.util.List -> getInputs
ml.luxinfine.helper.recipes.InputStack.isEmpty()boolean -> isEmpty
ml.luxinfine.helper.recipes.InputStack.writeCachedTime[long] -> н рb
ml.luxinfine.helper.recipes.InputStack._time()long -> i qу
ml.luxinfine.helper.recipes.InputStack.oreKeyExist[boolean] -> u yg
ml.luxinfine.helper.recipes.InputStack.canUseStack(net.minecraft.item.ItemStack)boolean -> canUseStack
ml.luxinfine.helper.recipes.InputStack.setNeededCount(int)ml.luxinfine.helper.recipes.InputStack -> setNeededCount
ml.luxinfine.helper.recipes.InputStack.canUseBlock(net.minecraft.block.Block, int)boolean -> canUseBlock
ml.luxinfine.helper.recipes.InputStack.input[net.minecraft.item.ItemStack] -> q wx
ml.luxinfine.helper.recipes.InputStack.getNeededCount()int -> getNeededCount
ml.luxinfine.helper.recipes.InputStack.hash[int] ->  qis
ml.luxinfine.helper.recipes.InputStack.checkNBT(net.minecraft.item.ItemStack)boolean -> х yе
ml.luxinfine.helper.recipes.InputStack.getOreKey()java.util.Optional -> getOreKey
ml.luxinfine.helper.recipes.InputStack.cachedOreEntries[java.util.List] -> gz l
ml.luxinfine.helper.recipes.InputStack.availableOreItems()java.util.List -> xа с
ml.luxinfine.helper.recipes.InputStack.copy()ml.luxinfine.helper.recipes.InputStack -> copy

ml.luxinfine.helper.integrations.impl.wg.WGRegion$1 -> team.luxinfine.helper.10_07_2024__18_16_32.qpt$nus
ml.luxinfine.helper.integrations.impl.wg.WGRegion$1.$SwitchMap$com$sk89q$worldguard$protection$regions$RegionType[int[]] ->  fok

ml.luxinfine.helper.utils.objects.MessageBuilder$BuiltChatComponent.createCopy()ml.luxinfine.helper.utils.objects.MessageBuilder$BuiltChatComponent -> createCopy
ml.luxinfine.helper.utils.objects.MessageBuilder$BuiltChatComponent.getMessageKey()java.util.UUID -> getMessageKey

ml.luxinfine.helper.utils.objects.MessageBuilder.resetHoverEvent()ml.luxinfine.helper.utils.objects.MessageBuilder -> resetHoverEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverAchievementEvent(java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverAchievementEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.applyLang(net.minecraft.command.ICommandSender)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyLang
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverItemEvent(net.minecraft.item.ItemStack)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverItemEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.underline(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> underline
ml.luxinfine.helper.utils.objects.MessageBuilder.send(net.minecraft.command.ICommandSender[])void -> send
ml.luxinfine.helper.utils.objects.MessageBuilder.setColorSeparator(char)ml.luxinfine.helper.utils.objects.MessageBuilder -> setColorSeparator
ml.luxinfine.helper.utils.objects.MessageBuilder.appendLink(java.lang.String, java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> appendLink
ml.luxinfine.helper.utils.objects.MessageBuilder.bold(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> bold
ml.luxinfine.helper.utils.objects.MessageBuilder.obfuscated(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> obfuscated
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverTextEvent(java.lang.String[])ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverTextEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.build()java.util.List -> build
ml.luxinfine.helper.utils.objects.MessageBuilder.send(net.minecraft.command.ICommandSender)void -> send
ml.luxinfine.helper.utils.objects.MessageBuilder.nextLine()ml.luxinfine.helper.utils.objects.MessageBuilder -> nextLine
ml.luxinfine.helper.utils.objects.MessageBuilder.appendWithArgs_Internal(java.lang.String, java.lang.Object[])void -> e ur
ml.luxinfine.helper.utils.objects.MessageBuilder.toggleSplitter(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> toggleSplitter
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverEvent(net.minecraft.event.HoverEvent)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverTextEvent(java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverTextEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.appendTextPart_Internal(java.lang.String)void -> t qe
ml.luxinfine.helper.utils.objects.MessageBuilder.applyLang(java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyLang
ml.luxinfine.helper.utils.objects.MessageBuilder.resetEvents()ml.luxinfine.helper.utils.objects.MessageBuilder -> resetEvents
ml.luxinfine.helper.utils.objects.MessageBuilder.append(java.lang.Object)ml.luxinfine.helper.utils.objects.MessageBuilder -> append
ml.luxinfine.helper.utils.objects.MessageBuilder.appendWord_Internal(java.lang.String)void -> tе m
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverTranslateEvent(java.lang.String, java.lang.Object[])ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverTranslateEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.currentLineComponent[ml.luxinfine.helper.utils.objects.MessageBuilder$BuiltChatComponent] -> aс о
ml.luxinfine.helper.utils.objects.MessageBuilder.messageKey[java.util.UUID] -> w eа
ml.luxinfine.helper.utils.objects.MessageBuilder.toggleCommands(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> toggleCommands
ml.luxinfine.helper.utils.objects.MessageBuilder.toUnformattedString()java.lang.String -> toUnformattedString
ml.luxinfine.helper.utils.objects.MessageBuilder.messageKey(java.util.UUID)ml.luxinfine.helper.utils.objects.MessageBuilder -> messageKey
ml.luxinfine.helper.utils.objects.MessageBuilder.sendToConsole()void -> sendToConsole
ml.luxinfine.helper.utils.objects.MessageBuilder.enableSplit[boolean] ->  zyе
ml.luxinfine.helper.utils.objects.MessageBuilder.getFormattingCode_Internal(net.minecraft.util.ChatStyle)java.lang.String ->  fok
ml.luxinfine.helper.utils.objects.MessageBuilder.send(boolean, net.minecraft.command.ICommandSender)void -> send
ml.luxinfine.helper.utils.objects.MessageBuilder.appendText(java.lang.String, java.lang.Object[])ml.luxinfine.helper.utils.objects.MessageBuilder -> appendText
ml.luxinfine.helper.utils.objects.MessageBuilder.applyClickEvent(net.minecraft.event.ClickEvent)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyClickEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.applyFormat_Internal(net.minecraft.util.EnumChatFormatting, boolean)ml.luxinfine.helper.utils.objects.MessageBuilder ->  ifу
ml.luxinfine.helper.utils.objects.MessageBuilder.activeSeparator[char] -> g vh
ml.luxinfine.helper.utils.objects.MessageBuilder.build_Internal(boolean)java.util.List -> gy р
ml.luxinfine.helper.utils.objects.MessageBuilder.appendBuilder(ml.luxinfine.helper.utils.objects.MessageBuilder)ml.luxinfine.helper.utils.objects.MessageBuilder -> appendBuilder
ml.luxinfine.helper.utils.objects.MessageBuilder.enableLinks[boolean] ->  rаu
ml.luxinfine.helper.utils.objects.MessageBuilder.applyClickEvent(net.minecraft.event.ClickEvent$Action, java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyClickEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.deepCloneComponent_Internal(net.minecraft.util.IChatComponent, boolean)net.minecraft.util.IChatComponent -> е u
ml.luxinfine.helper.utils.objects.MessageBuilder.appendText(java.lang.String)ml.luxinfine.helper.utils.objects.MessageBuilder -> appendText
ml.luxinfine.helper.utils.objects.MessageBuilder.send(boolean, net.minecraft.command.ICommandSender[])void -> send
ml.luxinfine.helper.utils.objects.MessageBuilder.SPACE_PATTERN[java.util.regex.Pattern] -> b tо
ml.luxinfine.helper.utils.objects.MessageBuilder.builtLines[java.util.List] -> y sw
ml.luxinfine.helper.utils.objects.MessageBuilder.getIterator_Internal(net.minecraft.util.IChatComponent)java.util.Iterator -> vg v
ml.luxinfine.helper.utils.objects.MessageBuilder.resetClickEvent()ml.luxinfine.helper.utils.objects.MessageBuilder -> resetClickEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.applyFormat(net.minecraft.util.EnumChatFormatting)ml.luxinfine.helper.utils.objects.MessageBuilder -> applyFormat
ml.luxinfine.helper.utils.objects.MessageBuilder.language[java.lang.String] -> ec d
ml.luxinfine.helper.utils.objects.MessageBuilder.DUMMY_HOVER_EVENT[net.minecraft.event.HoverEvent] -> сh х
ml.luxinfine.helper.utils.objects.MessageBuilder.toggleLinks(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> toggleLinks
ml.luxinfine.helper.utils.objects.MessageBuilder.DEFAULT_SEPARATOR[char] -> rр n
ml.luxinfine.helper.utils.objects.MessageBuilder.appendRaw(net.minecraft.util.IChatComponent)ml.luxinfine.helper.utils.objects.MessageBuilder -> appendRaw
ml.luxinfine.helper.utils.objects.MessageBuilder.italic(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> italic
ml.luxinfine.helper.utils.objects.MessageBuilder.activeStyle[net.minecraft.util.ChatStyle] -> cе m
ml.luxinfine.helper.utils.objects.MessageBuilder.applyHoverTextEvent(java.lang.String, java.lang.Object[])ml.luxinfine.helper.utils.objects.MessageBuilder -> applyHoverTextEvent
ml.luxinfine.helper.utils.objects.MessageBuilder.color(net.minecraft.util.EnumChatFormatting)ml.luxinfine.helper.utils.objects.MessageBuilder -> color
ml.luxinfine.helper.utils.objects.MessageBuilder.toFormattedString()java.lang.String -> toFormattedString
ml.luxinfine.helper.utils.objects.MessageBuilder.strikethrough(boolean)ml.luxinfine.helper.utils.objects.MessageBuilder -> strikethrough
ml.luxinfine.helper.utils.objects.MessageBuilder.DUMMY_CLICK_EVENT[net.minecraft.event.ClickEvent] -> g ua
ml.luxinfine.helper.utils.objects.MessageBuilder.appendPart_Internal(java.lang.String)void -> ah j
ml.luxinfine.helper.utils.objects.MessageBuilder.copy()ml.luxinfine.helper.utils.objects.MessageBuilder -> copy
ml.luxinfine.helper.utils.objects.MessageBuilder.URL_PATTERN[java.util.regex.Pattern] -> ui h
ml.luxinfine.helper.utils.objects.MessageBuilder.reset()ml.luxinfine.helper.utils.objects.MessageBuilder -> reset
ml.luxinfine.helper.utils.objects.MessageBuilder.enableCommands[boolean] -> аl a
ml.luxinfine.helper.utils.objects.MessageBuilder.appendTranslate(java.lang.String, java.lang.Object[])ml.luxinfine.helper.utils.objects.MessageBuilder -> appendTranslate


ml.luxinfine.config.internal.LazyConfigValue._receiveFromConfig(com.google.common.reflect.TypeToken, com.google.gson.JsonElement)void -> be с
ml.luxinfine.config.internal.LazyConfigValue._setConfigPath(java.lang.String)void -> y xu
ml.luxinfine.config.internal.LazyConfigValue.isInitialized()boolean -> isInitialized
ml.luxinfine.config.internal.LazyConfigValue._lazy(com.google.gson.JsonElement, ml.luxinfine.config.api.ConfigAPI$LazyReadCallback)ml.luxinfine.config.internal.LazyConfigValue -> xа с
ml.luxinfine.config.internal.LazyConfigValue.modified[boolean] -> м ga

ml.luxinfine.events.core.listeners.ChickenHatchListener -> team.luxinfine.helper.10_07_2024__18_16_32.lхc
ml.luxinfine.events.core.listeners.ChickenHatchListener.onEggImpactStart(net.minecraft.entity.projectile.EntityEgg)void ->  oxe
ml.luxinfine.events.core.listeners.ChickenHatchListener.onEggImpactEnd()void ->  fxd
ml.luxinfine.events.core.listeners.ChickenHatchListener.CHICKEN_HATCH_PROCESS[net.minecraft.entity.projectile.EntityEgg] -> d vi
ml.luxinfine.events.core.listeners.ChickenHatchListener.onSpawn(net.minecraftforge.event.entity.EntityJoinWorldEvent)void -> n ca

ml.luxinfine.events.core.handlers.ForgeCommandInheritHook -> team.luxinfine.helper.10_07_2024__18_16_32.hрh
ml.luxinfine.events.core.handlers.ForgeCommandInheritHook.processCommand(net.minecraft.command.ICommand, net.minecraft.command.ICommandSender, java.lang.String[])void -> с aa
ml.luxinfine.events.core.handlers.ForgeCommandInheritHook.lambda$processCommand$0(net.minecraft.command.ICommand, net.minecraft.command.ICommandSender, java.lang.String[])void ->  rfа
ml.luxinfine.events.core.handlers.ForgeCommandInheritHook.processCommandReturn(net.minecraft.command.ICommand, net.minecraft.command.ICommandSender, java.lang.String[])void -> m vq

ml.luxinfine.commands.internal.args.StringCmdArg$StringType -> team.luxinfine.helper.10_07_2024__18_16_32.gbе$хoм
ml.luxinfine.commands.internal.args.StringCmdArg$StringType.GREEDY_PHRASE[ml.luxinfine.commands.internal.args.StringCmdArg$StringType] -> mh r
ml.luxinfine.commands.internal.args.StringCmdArg$StringType.SINGLE_WORD[ml.luxinfine.commands.internal.args.StringCmdArg$StringType] -> w хf
ml.luxinfine.commands.internal.args.StringCmdArg$StringType.QUOTED_PHRASE[ml.luxinfine.commands.internal.args.StringCmdArg$StringType] ->  qlm


ml.luxinfine.helper.integrations.impl.we.WESelect -> team.luxinfine.helper.10_07_2024__18_16_32.jнe
ml.luxinfine.helper.integrations.impl.we.WESelect.getWorldID()int ->  xta
ml.luxinfine.helper.integrations.impl.we.WESelect.getAllPoints()java.util.List -> getAllPoints
ml.luxinfine.helper.integrations.impl.we.WESelect.getMaximumPoint()ml.luxinfine.helper.utils.objects.Location -> getMaximumPoint
ml.luxinfine.helper.integrations.impl.we.WESelect.lambda$getAffectedChunks$0(com.sk89q.worldedit.Vector2D)ml.luxinfine.helper.utils.objects.ChunkLocation ->  ifу
ml.luxinfine.helper.integrations.impl.we.WESelect.getMinimumPoint()ml.luxinfine.helper.utils.objects.Location -> getMinimumPoint
ml.luxinfine.helper.integrations.impl.we.WESelect.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.helper.integrations.impl.we.WESelect.intersects(ml.luxinfine.helper.utils.objects.Location)boolean -> intersects
ml.luxinfine.helper.integrations.impl.we.WESelect.getAffectedChunks()java.util.Set -> getAffectedChunks
ml.luxinfine.helper.integrations.impl.we.WESelect.getType()ml.luxinfine.helper.integrations.PlayerSelection$SelectionType -> getType
ml.luxinfine.helper.integrations.impl.we.WESelect.getCenter()ml.luxinfine.helper.utils.objects.Location -> getCenter
ml.luxinfine.helper.integrations.impl.we.WESelect.lambda$getAllPoints$1(int, com.sk89q.worldedit.BlockVector2D)ml.luxinfine.helper.utils.objects.Location -> ае y
ml.luxinfine.helper.integrations.impl.we.WESelect.region[com.sk89q.worldedit.regions.Region] -> м bр

ml.luxinfine.helper.containers.InfinitySlotItemSizePacket$CHandler -> team.luxinfine.helper.10_07_2024__18_16_32.vgm$htр
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket$CHandler.lambda$onMessage$0(ml.luxinfine.helper.containers.InfinitySlotItemSizePacket)void -> b оi
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket$CHandler.onMessage(ml.luxinfine.helper.containers.InfinitySlotItemSizePacket, cpw.mods.fml.common.network.simpleimpl.MessageContext)cpw.mods.fml.common.network.simpleimpl.IMessage ->  saн


ml.luxinfine.helper.integrations.impl.dummy.EmptyVanishProvider -> team.luxinfine.helper.10_07_2024__18_16_32.ccu
ml.luxinfine.helper.integrations.impl.dummy.EmptyVanishProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyVanishProvider.isInvisible(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInvisible
ml.luxinfine.helper.integrations.impl.dummy.EmptyVanishProvider.setInvisible(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setInvisible
ml.luxinfine.helper.integrations.impl.dummy.EmptyVanishProvider.isVisible(java.util.UUID, java.util.UUID)boolean -> isVisible

ml.luxinfine.helper.guis.elements.IGuiProgressBar.getBarTexture()net.minecraft.util.ResourceLocation -> getBarTexture
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getTextureBarHeight()int -> getTextureBarHeight
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getTextureBarX()int -> getTextureBarX
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getTextureBarWidth()int -> getTextureBarWidth
ml.luxinfine.helper.guis.elements.IGuiProgressBar.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getProgress()double -> getProgress
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getTextureBarY()int -> getTextureBarY
ml.luxinfine.helper.guis.elements.IGuiProgressBar.getBarDirection()ml.luxinfine.helper.guis.ProgressBarDirection -> getBarDirection

ml.luxinfine.hooks.internal.injects.fuzzy.RedirectInvokeInjectorFuzzy.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList -> dj n


ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$1 -> team.luxinfine.helper.10_07_2024__18_16_32.pрr$fре
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$1.$SwitchMap$ml$luxinfine$commands$internal$impl$MinecraftWrappedCommand$OperationCode[int[]] -> ao l

ml.luxinfine.events.core.handlers.blocks.BlockSetHandler -> team.luxinfine.helper.10_07_2024__18_16_32.afm
ml.luxinfine.events.core.handlers.blocks.BlockSetHandler.setBlockMetadata(net.minecraft.world.chunk.Chunk, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void -> o rj
ml.luxinfine.events.core.handlers.blocks.BlockSetHandler.lambda$func_150807_a$0(net.minecraft.world.chunk.Chunk, int, int, int, net.minecraft.block.Block, int, ml.luxinfine.hooks.api.IHookContext)void ->  хkg
ml.luxinfine.events.core.handlers.blocks.BlockSetHandler.func_150807_a(net.minecraft.world.chunk.Chunk, int, int, int, net.minecraft.block.Block, int, ml.luxinfine.hooks.api.IHookContext)void ->  pzu
ml.luxinfine.events.core.handlers.blocks.BlockSetHandler.lambda$setBlockMetadata$1(net.minecraft.world.chunk.Chunk, int, int, int, int, ml.luxinfine.hooks.api.IHookContext)void ->  pdх

ml.luxinfine.helper.utils.TeleportUtils._transferPlayerToDim(net.minecraft.server.management.ServerConfigurationManager, net.minecraft.entity.player.EntityPlayerMP, net.minecraft.world.WorldServer, int)void -> v wh

ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission -> team.luxinfine.helper.10_07_2024__18_16_32.еsi
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.removeCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeCondition
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.container[net.luckperms.api.model.PermissionHolder] -> у mn
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.node[net.luckperms.api.node.types.PermissionNode] -> с mi
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.addCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addCondition
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.updateNode(net.luckperms.api.node.types.PermissionNode)ml.luxinfine.helper.integrations.OperationResult -> j pt
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.lambda$updateNode$0(net.luckperms.api.node.types.PermissionNode)java.lang.Boolean ->  мkн
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.getConditions()ml.luxinfine.helper.integrations.OperationResult -> getConditions
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.isAllowPermission()boolean -> isAllowPermission
ml.luxinfine.helper.integrations.impl.luck_perms.LPPermission.lp[net.luckperms.api.LuckPerms] -> yм r

ml.luxinfine.helper.utils.objects.FieldAccessor.get(java.lang.Object)java.lang.Object -> get
ml.luxinfine.helper.utils.objects.FieldAccessor.set(java.lang.Object, java.lang.Object)void -> set

ml.luxinfine.config.network.JsonCfgSyncPacket -> team.luxinfine.helper.10_07_2024__18_16_32.pох
ml.luxinfine.config.network.JsonCfgSyncPacket.access$200(ml.luxinfine.config.network.JsonCfgSyncPacket)java.util.Map -> а мc
ml.luxinfine.config.network.JsonCfgSyncPacket.cfgCategories[java.util.Map] ->  tmо
ml.luxinfine.config.network.JsonCfgSyncPacket.access$100(ml.luxinfine.config.network.JsonCfgSyncPacket)java.lang.String -> r еm
ml.luxinfine.config.network.JsonCfgSyncPacket.configName[java.lang.String] -> nz о
ml.luxinfine.config.network.JsonCfgSyncPacket.access$000(ml.luxinfine.config.network.JsonCfgSyncPacket)java.lang.String ->  xta
ml.luxinfine.config.network.JsonCfgSyncPacket.lambda$fromBytes$0(io.netty.buffer.ByteBuf)void ->  pmo
ml.luxinfine.config.network.JsonCfgSyncPacket.lambda$toBytes$1(io.netty.buffer.ByteBuf)void ->  el
ml.luxinfine.config.network.JsonCfgSyncPacket.configFolder[java.lang.String] ->  vkр

ml.luxinfine.hooks.internal.injects.precise.RedirectInvokeInjector.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList ->  teg
ml.luxinfine.hooks.internal.injects.precise.RedirectInvokeInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd

ml.luxinfine.helper.utils.ReflectionUtils.uniqueID[int] -> хk е
ml.luxinfine.helper.utils.ReflectionUtils.UNSAFE[sun.misc.Unsafe] ->  nx
ml.luxinfine.helper.utils.ReflectionUtils.lookup[java.lang.invoke.MethodHandles$Lookup] -> lx s
ml.luxinfine.helper.utils.ReflectionUtils.LOADER[ml.luxinfine.helper.utils.ReflectionUtils$ASMClassLoader] -> rр n
ml.luxinfine.helper.utils.ReflectionUtils.gainTrustedLookup()java.lang.invoke.MethodHandles$Lookup -> jo е
ml.luxinfine.helper.utils.ReflectionUtils.createdCheckers[java.util.Map] ->  xfe
ml.luxinfine.helper.utils.ReflectionUtils.generateInvokeAccessor(java.lang.reflect.Executable, java.lang.Class, ml.luxinfine.helper.utils.objects.MethodAccessor)ml.luxinfine.helper.utils.objects.MethodAccessor -> q iy
ml.luxinfine.helper.utils.ReflectionUtils.magicAccessor[java.lang.String] ->  хug

ml.luxinfine.hooks.internal.injects.precise.BeforeInvokeInjector.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList ->  teg
ml.luxinfine.hooks.internal.injects.precise.BeforeInvokeInjector.initTargetMethodName(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String)void -> short хgd

ml.luxinfine.commands.api.tree.IBakedCommandNode.isLocalCommand()boolean -> isLocalCommand
ml.luxinfine.commands.api.tree.IBakedCommandNode.getSourceModID()java.lang.String -> getSourceModID
ml.luxinfine.commands.api.tree.IBakedCommandNode.getPermission()java.lang.String -> getPermission
ml.luxinfine.commands.api.tree.IBakedCommandNode.getCooldown()long -> getCooldown
ml.luxinfine.commands.api.tree.IBakedCommandNode.getArguments()java.util.List -> getArguments
ml.luxinfine.commands.api.tree.IBakedCommandNode.getExecutionCost()double -> getExecutionCost
ml.luxinfine.commands.api.tree.IBakedCommandNode.getSubCommands()java.util.List -> getSubCommands
ml.luxinfine.commands.api.tree.IBakedCommandNode.getDimensionsWhitelist()int[] -> getDimensionsWhitelist
ml.luxinfine.commands.api.tree.IBakedCommandNode.getName()java.lang.String -> getName
ml.luxinfine.commands.api.tree.IBakedCommandNode.getParentNode()ml.luxinfine.commands.api.tree.IBakedCommandNode -> getParentNode
ml.luxinfine.commands.api.tree.IBakedCommandNode.getRunnable()ml.luxinfine.commands.api.ICommandRunnable -> getRunnable
ml.luxinfine.commands.api.tree.IBakedCommandNode.getLocalCommands()java.util.List -> getLocalCommands
ml.luxinfine.commands.api.tree.IBakedCommandNode.isEnabled()boolean -> isEnabled
ml.luxinfine.commands.api.tree.IBakedCommandNode.getDimensionsBlacklist()int[] -> getDimensionsBlacklist
ml.luxinfine.commands.api.tree.IBakedCommandNode.getOptionalArguments()java.util.List -> getOptionalArguments
ml.luxinfine.commands.api.tree.IBakedCommandNode.getCommandPath()java.lang.String -> getCommandPath
ml.luxinfine.commands.api.tree.IBakedCommandNode.getCodeName()java.lang.String -> getCodeName
ml.luxinfine.commands.api.tree.IBakedCommandNode.getAliases()java.util.List -> getAliases

ml.luxinfine.helper.virtualentity.asm.HookEntity -> team.luxinfine.helper.10_07_2024__18_16_32.vхs
ml.luxinfine.helper.virtualentity.asm.HookEntity.entityDropItem(net.minecraft.entity.Entity, net.minecraft.item.ItemStack, float, ml.luxinfine.hooks.api.IHookContext)void ->  ухm
ml.luxinfine.helper.virtualentity.asm.HookEntity.entityRandom[java.util.Random] -> b lх
ml.luxinfine.helper.virtualentity.asm.HookEntity.initRandom(net.minecraft.entity.Entity, net.minecraft.world.World)java.util.Random -> еs m

ml.luxinfine.helper.utils.internal.offline_player_accessors.NetServerHandlerFake -> team.luxinfine.helper.10_07_2024__18_16_32.sfx

ml.luxinfine.events.entity.EndermanGriefEvent.getTarget()ml.luxinfine.helper.utils.objects.Location -> getTarget
ml.luxinfine.events.entity.EndermanGriefEvent.enderman[net.minecraft.entity.monster.EntityEnderman] -> i qу
ml.luxinfine.events.entity.EndermanGriefEvent.getEnderman()net.minecraft.entity.monster.EntityEnderman -> getEnderman
ml.luxinfine.events.entity.EndermanGriefEvent.getAction()ml.luxinfine.events.entity.EndermanGriefEvent$Action -> getAction
ml.luxinfine.events.entity.EndermanGriefEvent.action[ml.luxinfine.events.entity.EndermanGriefEvent$Action] -> a уj
ml.luxinfine.events.entity.EndermanGriefEvent.target[ml.luxinfine.helper.utils.objects.Location] -> ан y

ml.luxinfine.events.core.handlers.entity.EntityArrowHook -> team.luxinfine.helper.10_07_2024__18_16_32.bjk
ml.luxinfine.events.core.handlers.entity.EntityArrowHook.onUpdate(net.minecraft.entity.Entity, int, net.minecraft.entity.projectile.EntityArrow)void ->  уеу
ml.luxinfine.events.core.handlers.entity.EntityArrowHook.lambda$onUpdate$0(net.minecraft.entity.Entity, int)void -> у nf




ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions -> team.luxinfine.helper.10_07_2024__18_16_32.gmx
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getPlayerInfo(java.util.UUID)org.apache.commons.lang3.tuple.Pair -> u аo
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, int)int -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.umPermissions[org.ultramine.core.permissions.Permissions] -> n td
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, boolean)boolean -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.ultramineServices[org.ultramine.core.service.ServiceManager] ->  yрh
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.init()boolean -> е ам
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.um_core.UltraminePermissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, double)double -> getAttributeGroupValue

ml.luxinfine.helper.guis.elements.IGuiElement$KeyboardEvent.onKeyPress(char, int)boolean -> onKeyPress

ml.luxinfine.helper.guis.elements.GuiProgressBar.getWidth()int -> getWidth
ml.luxinfine.helper.guis.elements.GuiProgressBar.getBarTexture()net.minecraft.util.ResourceLocation -> getBarTexture
ml.luxinfine.helper.guis.elements.GuiProgressBar.setDirection(ml.luxinfine.helper.guis.ProgressBarDirection)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setDirection
ml.luxinfine.helper.guis.elements.GuiProgressBar.setTextureBarSize(int, int)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setTextureBarSize
ml.luxinfine.helper.guis.elements.GuiProgressBar.setBlended(boolean)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setBlended
ml.luxinfine.helper.guis.elements.GuiProgressBar.getTextureBarHeight()int -> getTextureBarHeight
ml.luxinfine.helper.guis.elements.GuiProgressBar.getTextureBarX()int -> getTextureBarX
ml.luxinfine.helper.guis.elements.GuiProgressBar.setBarTexture(net.minecraft.util.ResourceLocation)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setBarTexture
ml.luxinfine.helper.guis.elements.GuiProgressBar.setTextureBarPos(int, int)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setTextureBarPos
ml.luxinfine.helper.guis.elements.GuiProgressBar.getTextureBarWidth()int -> getTextureBarWidth
ml.luxinfine.helper.guis.elements.GuiProgressBar.setProgressProvider(java.util.function.DoubleSupplier)ml.luxinfine.helper.guis.elements.GuiProgressBar -> setProgressProvider
ml.luxinfine.helper.guis.elements.GuiProgressBar.getHeight()int -> getHeight
ml.luxinfine.helper.guis.elements.GuiProgressBar.draw(int, int, float)void -> draw
ml.luxinfine.helper.guis.elements.GuiProgressBar.getProgress()double -> getProgress
ml.luxinfine.helper.guis.elements.GuiProgressBar.getTextureBarY()int -> getTextureBarY
ml.luxinfine.helper.guis.elements.GuiProgressBar.getBarDirection()ml.luxinfine.helper.guis.ProgressBarDirection -> getBarDirection
ml.luxinfine.helper.guis.elements.GuiProgressBar.setSize(int, int)ml.luxinfine.helper.guis.elements.IGuiSizableElement -> setSize
ml.luxinfine.helper.guis.elements.GuiProgressBar.blend[boolean] ->  jмh

ml.luxinfine.helper.asm.TransformersExecutor -> ml.luxinfine.helper.asm.qун
ml.luxinfine.helper.asm.TransformersExecutor.getTransformerExceptions()java.util.Set -> b kу
ml.luxinfine.helper.asm.TransformersExecutor.SKIP_INVALID_TRANSFORMED_CLASSES[boolean] ->  рxх
ml.luxinfine.helper.asm.TransformersExecutor.LOG_TRANSFORMERS[boolean] -> еt q
ml.luxinfine.helper.asm.TransformersExecutor.transformerExceptions[java.util.Set] -> yp w
ml.luxinfine.helper.asm.TransformersExecutor.TRANSFORMERS[java.util.ArrayList] -> di м
ml.luxinfine.helper.asm.TransformersExecutor.lambda$transform$0(java.util.concurrent.atomic.AtomicBoolean)void -> import float
ml.luxinfine.helper.asm.TransformersExecutor.loadTransformers()void -> уo m
ml.luxinfine.helper.asm.TransformersExecutor.SKIP_PACKAGES[java.lang.String[]] ->  xvf
ml.luxinfine.helper.asm.TransformersExecutor.SKIP_DEPRECATED_WARNINGS[boolean] -> с аm

ml.luxinfine.events.core.handlers.blocks.BlockTripWireHook -> team.luxinfine.helper.10_07_2024__18_16_32.uес
ml.luxinfine.events.core.handlers.blocks.BlockTripWireHook.lambda$onEntityCollidedWithBlock$0(net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void ->  qis
ml.luxinfine.events.core.handlers.blocks.BlockTripWireHook.onEntityCollidedWithBlock(net.minecraft.block.BlockTripWire, net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void -> e еm

ml.luxinfine.events.blocks.FireEvent$FireFromLightningBoltEvent.getLightningBolt()net.minecraft.entity.effect.EntityLightningBolt -> getLightningBolt
ml.luxinfine.events.blocks.FireEvent$FireFromLightningBoltEvent.lightningBolt[net.minecraft.entity.effect.EntityLightningBolt] ->  ocy

ml.luxinfine.events.blocks.BlockSetEvent$ActionSource.isUnknown()boolean -> isUnknown

ml.luxinfine.helper.virtualentity.dummy.DummyPathNavigate -> team.luxinfine.helper.10_07_2024__18_16_32.sqs
ml.luxinfine.helper.virtualentity.dummy.DummyPathNavigate.INSTANCE[net.minecraft.pathfinding.PathNavigate] ->  eeс

ml.luxinfine.events.core.handlers.blocks.BlockStaticLiquidHook -> team.luxinfine.helper.10_07_2024__18_16_32.sfz
ml.luxinfine.events.core.handlers.blocks.BlockStaticLiquidHook.updateTick_return(net.minecraft.block.BlockStaticLiquid, net.minecraft.world.World, int, int, int, java.util.Random)void -> h hе
ml.luxinfine.events.core.handlers.blocks.BlockStaticLiquidHook.updateTick(net.minecraft.block.BlockStaticLiquid, net.minecraft.world.World, int, int, int, java.util.Random)void -> м xl
ml.luxinfine.events.core.handlers.blocks.BlockStaticLiquidHook.lambda$updateTick$1(int, int, int, net.minecraft.block.BlockStaticLiquid)void -> pk f
ml.luxinfine.events.core.handlers.blocks.BlockStaticLiquidHook.lambda$null$0(int, int, int, net.minecraft.block.BlockStaticLiquid, ml.luxinfine.events.blocks.BlockSetEvent)void -> hd b

ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag -> team.luxinfine.helper.10_07_2024__18_16_32.orv
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag.defaultValue[java.lang.Object] ->  аеe
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag.valueSelector[java.util.function.Function] -> y zk
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag.value2Raw[java.util.function.Function] -> нh a
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag.raw2Value[java.util.function.Function] ->  оеr
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag.onFlagSet[java.util.function.BiConsumer] -> import float

ml.luxinfine.events.core.handlers.ItemInWorldManagerHook -> team.luxinfine.helper.10_07_2024__18_16_32.уgj
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.onBlockClickedReturn(net.minecraft.server.management.ItemInWorldManager, int, int, int, int)void ->  оaм
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.onBlockClicked(net.minecraft.server.management.ItemInWorldManager, int, int, int, int)void -> p xу
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.lambda$activateBlockOrUseItem$4(net.minecraft.entity.player.EntityPlayer)void -> sj d
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.lambda$tryUseItem$3(net.minecraft.entity.player.EntityPlayer)void -> е iс
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.activateBlockOrUseItem(net.minecraft.server.management.ItemInWorldManager, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, net.minecraft.item.ItemStack, int, int, int, int, float, float, float)void -> f fy
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.tryHarvestBlockReturn(net.minecraft.server.management.ItemInWorldManager, int, int, int)void ->  рq
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.uncheckedTryHarvestBlockReturn(net.minecraft.server.management.ItemInWorldManager, int, int, int)void -> g af
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.uncheckedTryHarvestBlock(net.minecraft.server.management.ItemInWorldManager, int, int, int)void -> d сl
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.activateBlockOrUseItemReturn(net.minecraft.server.management.ItemInWorldManager, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, net.minecraft.item.ItemStack, int, int, int, int, float, float, float)void -> o сi
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.tryUseItemReturn(net.minecraft.server.management.ItemInWorldManager, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, net.minecraft.item.ItemStack)void ->  хbi
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.tryUseItem(net.minecraft.server.management.ItemInWorldManager, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, net.minecraft.item.ItemStack)void -> gа z
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.lambda$uncheckedTryHarvestBlock$1(net.minecraft.server.management.ItemInWorldManager)void ->  czс
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.tryHarvestBlock(net.minecraft.server.management.ItemInWorldManager, int, int, int)void -> ri н
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.lambda$onBlockClicked$0(net.minecraft.server.management.ItemInWorldManager)void -> c jх
ml.luxinfine.events.core.handlers.ItemInWorldManagerHook.lambda$tryHarvestBlock$2(net.minecraft.server.management.ItemInWorldManager)void -> qa a

ml.luxinfine.helper.jei.JEIHandler.getRecipeBottoms()java.util.Set -> getRecipeBottoms
ml.luxinfine.helper.jei.JEIHandler.drawStringC(java.lang.String, int, int, int)void -> drawStringC
ml.luxinfine.helper.jei.JEIHandler.bindTexture(net.minecraft.util.ResourceLocation)void -> bindTexture
ml.luxinfine.helper.jei.JEIHandler.drawFluidTank(int, int, int, int, int, net.minecraftforge.fluids.Fluid, int)void -> drawFluidTank
ml.luxinfine.helper.jei.JEIHandler.drawStringC(java.lang.String, int, int, boolean)void -> drawStringC
ml.luxinfine.helper.jei.JEIHandler.providers[java.util.List] -> d ce
ml.luxinfine.helper.jei.JEIHandler.getRecipeMarkers()java.util.List -> getRecipeMarkers
ml.luxinfine.helper.jei.JEIHandler.drawProgressBar(int, int, int, int, int, int, float, ml.luxinfine.helper.guis.ProgressBarDirection)void -> drawProgressBar
ml.luxinfine.helper.jei.JEIHandler.drawString(java.lang.String, int, int, int, boolean)void -> drawString
ml.luxinfine.helper.jei.JEIHandler.createBottom(java.lang.String, int, int, int, int, java.lang.Object[])ml.luxinfine.helper.jei.JEIHandler$RecipeBottom -> createBottom
ml.luxinfine.helper.jei.JEIHandler.drawProgressBar(int, int, int, int, int, int, ml.luxinfine.helper.guis.ProgressBarDirection)void -> drawProgressBar
ml.luxinfine.helper.jei.JEIHandler.registerInfoBottom(int, int, int, java.util.List)void -> registerInfoBottom
ml.luxinfine.helper.jei.JEIHandler.onDrawElements(java.lang.Object)void -> onDrawElements
ml.luxinfine.helper.jei.JEIHandler.drawTexturedModalRect(int, int, int, int, int, int)void -> drawTexturedModalRect
ml.luxinfine.helper.jei.JEIHandler.drawString(java.lang.String, int, int, int)void -> drawString
ml.luxinfine.helper.jei.JEIHandler.transferRect(codechicken.nei.recipe.GuiRecipe, int, boolean)boolean -> m сa
ml.luxinfine.helper.jei.JEIHandler.registerInfoBottom(int, int, int, ml.luxinfine.helper.recipes.RecipeInfoProvider)void -> registerInfoBottom
ml.luxinfine.helper.jei.JEIHandler.handlerID[java.lang.String] -> р оh
ml.luxinfine.helper.jei.JEIHandler.addCacheRecipe(java.lang.Object)void -> addCacheRecipe
ml.luxinfine.helper.jei.JEIHandler.getRecipeBottom()ml.luxinfine.helper.jei.JEIHandler$RecipeBottom -> getRecipeBottom
ml.luxinfine.helper.jei.JEIHandler.bindTexture(java.lang.String)void -> bindTexture
ml.luxinfine.helper.jei.JEIHandler.addPositionStacks(java.util.List, java.util.List, java.lang.Object)void -> addPositionStacks
ml.luxinfine.helper.jei.JEIHandler.registerInfoBottom(int, int, java.util.List)void -> registerInfoBottom
ml.luxinfine.helper.jei.JEIHandler.drawStringR(java.lang.String, int, int, int, boolean)void -> drawStringR
ml.luxinfine.helper.jei.JEIHandler.registerHoverHandler(int, int, int, int, ml.luxinfine.helper.recipes.RecipeInfoProvider)void -> registerHoverHandler
ml.luxinfine.helper.jei.JEIHandler.infoSize[int] ->  oeq
ml.luxinfine.helper.jei.JEIHandler.infoYPosition[int] -> а ix
ml.luxinfine.helper.jei.JEIHandler.onRegister()void -> onRegister
ml.luxinfine.helper.jei.JEIHandler.drawStringR(java.lang.String, int, int, int)void -> drawStringR
ml.luxinfine.helper.jei.JEIHandler.createBottom(int, int, int, int, java.lang.Object[])ml.luxinfine.helper.jei.JEIHandler$RecipeBottom -> createBottom
ml.luxinfine.helper.jei.JEIHandler.infoProviders[java.util.HashSet] -> о хм
ml.luxinfine.helper.jei.JEIHandler.infoXPosition[int] ->  мhс
ml.luxinfine.helper.jei.JEIHandler.drawProgressBar(int, int, int, int, int, int, int)void -> drawProgressBar
ml.luxinfine.helper.jei.JEIHandler.drawStringC(java.lang.String, int, int, int, boolean)void -> drawStringC
ml.luxinfine.helper.jei.JEIHandler.registerInfoBottom(int, int, ml.luxinfine.helper.recipes.RecipeInfoProvider)void -> registerInfoBottom
ml.luxinfine.helper.jei.JEIHandler.addPositionFluids(java.util.List, java.util.List, java.lang.Object)void -> addPositionFluids
ml.luxinfine.helper.jei.JEIHandler.drawStringC(java.lang.String, int, int)void -> drawStringC
ml.luxinfine.helper.jei.JEIHandler.getRecipe(int)java.lang.Object -> getRecipe
ml.luxinfine.helper.jei.JEIHandler.getStringWidth(java.lang.String)int -> getStringWidth

ml.luxinfine.events.core.handlers.entity.EntityEndermanHook -> team.luxinfine.helper.10_07_2024__18_16_32.mei
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.onLivingUpdate(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, net.minecraft.entity.monster.EntityEnderman)boolean ->  jnz
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.onLivingUpdate(net.minecraft.entity.monster.EntityEnderman, net.minecraft.block.Block, net.minecraft.entity.monster.EntityEnderman)void ->  flj
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$0(net.minecraft.entity.monster.EntityEnderman, net.minecraft.block.Block)void -> e ur
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$5(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, int, int)boolean ->  нmм
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$1(net.minecraft.entity.monster.EntityEnderman, int)void -> а хо
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$2(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, net.minecraft.entity.monster.EntityEnderman)boolean -> zа k
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$4(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, int, int, net.minecraft.entity.monster.EntityEnderman)boolean -> do x
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.lambda$onLivingUpdate$3(net.minecraft.world.World, int, int, int, net.minecraft.block.Block)boolean -> м ga
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.onLivingUpdate(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, int, int, net.minecraft.entity.monster.EntityEnderman)boolean -> tt r
ml.luxinfine.events.core.handlers.entity.EntityEndermanHook.onLivingUpdate(net.minecraft.entity.monster.EntityEnderman, int, net.minecraft.entity.monster.EntityEnderman)void -> а ud

ml.luxinfine.helper.asm.ItemMinecartHook -> team.luxinfine.helper.10_07_2024__18_16_32.txо
ml.luxinfine.helper.asm.ItemMinecartHook.lambda$onItemUse$0(net.minecraft.entity.Entity, net.minecraft.entity.player.EntityPlayer)void -> yo o
ml.luxinfine.helper.asm.ItemMinecartHook.onItemUse(net.minecraft.world.World, net.minecraft.entity.Entity, net.minecraft.item.ItemMinecart, net.minecraft.item.ItemStack, net.minecraft.entity.player.EntityPlayer, net.minecraft.world.World, int, int, int, int, float, float, float)void ->  kxm


ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor -> team.luxinfine.helper.10_07_2024__18_16_32.awf
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor.has(ml.luxinfine.helper.integrations.Regions$RegionEntry)boolean -> has
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor.nativeFlag[ml.luxinfine.helper.integrations.impl.wg.WGCustomFlag] -> r d
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor.set(ml.luxinfine.helper.integrations.Regions$RegionEntry, java.lang.Object)void -> set
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor.get(ml.luxinfine.helper.integrations.Regions$RegionEntry)java.lang.Object -> get
ml.luxinfine.helper.integrations.impl.wg.WGCustomFlagAccessor.asWGRegion(ml.luxinfine.helper.integrations.Regions$RegionEntry)com.sk89q.worldguard.protection.regions.ProtectedRegion -> try goto

ml.luxinfine.helper.utils.PlaceholderUtils$RelationalPlaceholder.parse(net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP, java.lang.String)java.lang.String -> parse

ml.luxinfine.helper.asm.DispenserTileHook -> team.luxinfine.helper.10_07_2024__18_16_32.wwх
ml.luxinfine.helper.asm.DispenserTileHook.writeToNBT(net.minecraft.tileentity.TileEntityDispenser, net.minecraft.nbt.NBTTagCompound)void -> oо у
ml.luxinfine.helper.asm.DispenserTileHook.readFromNBT(net.minecraft.tileentity.TileEntityDispenser, net.minecraft.nbt.NBTTagCompound)void -> о nt
ml.luxinfine.helper.asm.DispenserTileHook._provideOwner(net.minecraft.tileentity.TileEntityDispenser, ml.luxinfine.hooks.api.IHookContext)void -> w pm
ml.luxinfine.helper.asm.DispenserTileHook.OWNER_FIELD[ml.luxinfine.hooks.api.FieldsAccessor] -> jj u
ml.luxinfine.helper.asm.DispenserTileHook._setOwner(net.minecraft.tileentity.TileEntityDispenser, com.mojang.authlib.GameProfile)void ->  viс

ml.luxinfine.helper.utils.WorldUtils.fortuneItem[net.minecraft.item.ItemStack] -> нj е
ml.luxinfine.helper.utils.WorldUtils.silkTouchItem[net.minecraft.item.ItemStack] -> i uz
ml.luxinfine.helper.utils.WorldUtils.collector[java.util.List] ->  pdp
ml.luxinfine.helper.utils.WorldUtils._init()void -> оo f
ml.luxinfine.helper.utils.WorldUtils._onDrop(net.minecraftforge.event.entity.EntityJoinWorldEvent)void -> h dt

ml.luxinfine.config.internal.TypeAdapterBridge -> team.luxinfine.helper.10_07_2024__18_16_32.zxu
ml.luxinfine.config.internal.TypeAdapterBridge.rule[ml.luxinfine.config.api.IConfigSerializeRule] ->  jcg


ml.luxinfine.helper.ModConfig$AFK -> team.luxinfine.helper.10_07_2024__18_16_32.уos$нgq

ml.luxinfine.helper.integrations.impl.DefaultIntegrationsConfig -> team.luxinfine.helper.10_07_2024__18_16_32.аrq

ml.luxinfine.hooks.internal.injects.fuzzy.FieldSetInjectorFuzzy.requiredArgs(org.objectweb.asm.tree.FieldInsnNode)boolean -> eх u
ml.luxinfine.hooks.internal.injects.fuzzy.FieldSetInjectorFuzzy.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> sp n
ml.luxinfine.hooks.internal.injects.fuzzy.FieldSetInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.config.objects.CustomClass.regex[java.util.regex.Pattern] ->  mwe
ml.luxinfine.config.objects.CustomClass.check[ml.luxinfine.helper.utils.objects.InstanceChecker] -> h sy
ml.luxinfine.config.objects.CustomClass.isInstance(java.lang.Object)boolean -> isInstance
ml.luxinfine.config.objects.CustomClass.pattern[java.lang.String] -> xe y
ml.luxinfine.config.objects.CustomClass.matches(java.lang.String)boolean ->  уdс

ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.pyс
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getPlayerData(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerData
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getSupportedFeatures()java.util.Set -> getSupportedFeatures
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider._fetchUser(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> i ng
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.hasPermission(net.minecraft.command.ICommandSender, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.api[net.luckperms.api.LuckPerms] ->  оuq
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.lambda$getPlayerData$4(net.luckperms.api.model.user.User)ml.luxinfine.helper.integrations.Permissions$PlayerData ->  tdz
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.queryMeta(java.util.UUID)net.luckperms.api.cacheddata.CachedMetaData ->  bрy
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.deleteGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> deleteGroup
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider._fetchGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> try goto
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.features[java.util.EnumSet] -> gz l
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.lambda$getGroups$1(net.luckperms.api.model.group.Group)ml.luxinfine.helper.integrations.impl.luck_perms.LPGroup ->  jkа
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.createGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> createGroup
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getMeta(java.lang.String)net.luckperms.api.cacheddata.CachedMetaData ->  аqх
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.lambda$deleteGroup$2(net.luckperms.api.model.group.Group)java.lang.Boolean ->  оеr
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.lambda$getGroup$0(net.luckperms.api.model.group.Group)ml.luxinfine.helper.integrations.Permissions$GroupData -> cx r
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.lambda$createGroup$3(java.lang.String)java.lang.Boolean -> ec d
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.impl.luck_perms.BukkitLuckpermsProvider.getGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getGroup

ml.luxinfine.hooks.api.InjectTarget.provider2[ml.luxinfine.hooks.internal.injects.fuzzy.IFuzzyInjectProvider] -> р уp
ml.luxinfine.hooks.api.InjectTarget.provider[ml.luxinfine.hooks.internal.injects.precise.IPreciseInjectProvider] ->  nx
ml.luxinfine.hooks.api.InjectTarget.create(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, byte, java.lang.String[], java.lang.String[], boolean, java.lang.String, java.lang.String)ml.luxinfine.hooks.internal.injects.BaseInjector -> с sp
ml.luxinfine.hooks.api.InjectTarget.createFuzzy(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, byte, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String)ml.luxinfine.hooks.internal.injects.BaseInjector -> м оo

ml.luxinfine.commands.internal.args.DurationCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.dхh
ml.luxinfine.commands.internal.args.DurationCmdArg.readDuration(ml.luxinfine.commands.api.IStringReader)long -> о ks
ml.luxinfine.commands.internal.args.DurationCmdArg.allowSpaces[boolean] -> k id
ml.luxinfine.commands.internal.args.DurationCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.time.Duration ->  tna
ml.luxinfine.commands.internal.args.DurationCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.items.internal.EnergyTooltipHandler -> team.luxinfine.helper.10_07_2024__18_16_32.еоs
ml.luxinfine.helper.items.internal.EnergyTooltipHandler.onTooltipRequest(net.minecraftforge.event.entity.player.ItemTooltipEvent)void -> g уh
ml.luxinfine.helper.items.internal.EnergyTooltipHandler.ic2[boolean] -> c kv

ml.luxinfine.config.api.Config$ConfigSide.isSupportedSide()boolean -> isSupportedSide

ml.luxinfine.hooks.internal.injects.fuzzy.ReturnInjectorFuzzy.throwableSafety[boolean] ->  tde
ml.luxinfine.hooks.internal.injects.fuzzy.ReturnInjectorFuzzy.isThrowableSafety(java.lang.String[])boolean -> нn f
ml.luxinfine.hooks.internal.injects.fuzzy.ReturnInjectorFuzzy.generateHookInvokeCode(ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int, org.objectweb.asm.tree.LocalVariableNode, boolean, org.objectweb.asm.Type[], boolean, boolean, int)org.objectweb.asm.tree.InsnList -> y iр
ml.luxinfine.hooks.internal.injects.fuzzy.ReturnInjectorFuzzy.hasCode(org.objectweb.asm.tree.AbstractInsnNode, org.objectweb.asm.tree.AbstractInsnNode)boolean -> zlo long
ml.luxinfine.hooks.internal.injects.fuzzy.ReturnInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf


ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.sмi
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getRegionsInPosition(net.minecraft.world.World, int, int, int)java.util.Set -> getRegionsInPosition
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getRegisteredFlags()java.util.Set -> getRegisteredFlags
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canPlaceBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canPlaceBlock
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getGlobalRegion(net.minecraft.world.World)java.util.Optional -> getGlobalRegion
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.deleteRegion(net.minecraft.world.World, java.lang.String)ml.luxinfine.helper.integrations.Regions$DeletionStatus -> deleteRegion
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.registerFlag(java.lang.String, java.util.function.Function, java.util.function.Function, java.lang.Object, java.util.function.Function, java.util.function.BiConsumer)ml.luxinfine.helper.integrations.Regions$RegionFlag -> registerFlag
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getRegionsInChunk(net.minecraft.world.World, int, int)java.util.Set -> getRegionsInChunk
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canFromTo(net.minecraft.world.World, int, int, int, int, int, int)boolean -> canFromTo
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canInteract(net.minecraft.world.World, int, int, int, net.minecraftforge.common.util.ForgeDirection, java.util.UUID)boolean -> canInteract
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canAttack(net.minecraft.entity.Entity, java.util.UUID)boolean -> canAttack
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canAttack(net.minecraft.entity.Entity, net.minecraft.entity.Entity)boolean -> canAttack
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getRegionsInWorld(net.minecraft.world.World)java.util.Set -> getRegionsInWorld
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.getRegion(net.minecraft.world.World, java.lang.String)java.util.Optional -> getRegion
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canTeleport(net.minecraft.entity.Entity, net.minecraft.world.World, double, double, double)boolean -> canTeleport
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.canBreakBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canBreakBlock
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider.addRegion(ml.luxinfine.helper.integrations.Regions$Region, net.minecraft.world.World, ml.luxinfine.helper.integrations.Regions$RegionShape, java.lang.String, boolean, net.minecraft.util.ChunkCoordinates[])ml.luxinfine.helper.integrations.Regions$CreationStatus -> addRegion

ml.luxinfine.commands.api.tree.IOptionalCommandBuilder.optionalArgument(java.lang.String, ml.luxinfine.commands.api.arguments.ICommandArgument)ml.luxinfine.commands.api.tree.IOptionalCommandBuilder -> optionalArgument

ml.luxinfine.hooks.internal.ClassesDataCache._getSRGName0(ml.luxinfine.helper.utils.objects.ClassAccessor, java.lang.String, java.lang.String)java.lang.String ->  хkg
ml.luxinfine.hooks.internal.ClassesDataCache.readType(java.io.DataInputStream, java.lang.String[])org.objectweb.asm.Type -> x eн
ml.luxinfine.hooks.internal.ClassesDataCache.finalizeCache()void -> finalizeCache
ml.luxinfine.hooks.internal.ClassesDataCache.getSRGName(java.lang.String, java.lang.String, java.lang.String)java.lang.String -> g vh
ml.luxinfine.hooks.internal.ClassesDataCache.mapped2srg[java.util.HashMap] -> nо m
ml.luxinfine.hooks.internal.ClassesDataCache.injectMappingsData(java.io.InputStream)int ->  oeq

ml.luxinfine.events.core.handlers.entity.EntityPotionHook -> team.luxinfine.helper.10_07_2024__18_16_32.xre
ml.luxinfine.events.core.handlers.entity.EntityPotionHook.onImpact(net.minecraft.world.World, java.lang.Class, net.minecraft.util.AxisAlignedBB, net.minecraft.entity.projectile.EntityPotion, net.minecraft.util.MovingObjectPosition, ml.luxinfine.hooks.api.IHookContext)java.util.List ->  еrn
ml.luxinfine.events.core.handlers.entity.EntityPotionHook.lambda$onImpact$0(net.minecraft.entity.projectile.EntityPotion, net.minecraft.util.MovingObjectPosition, java.util.List, ml.luxinfine.hooks.api.IHookContext)void ->  czс

ml.luxinfine.helper.ModConfig$DropEntry -> team.luxinfine.helper.10_07_2024__18_16_32.уos$DropEntry

ml.luxinfine.helper.virtualentity.world.FakeChunkProvider -> team.luxinfine.helper.10_07_2024__18_16_32.мiе
ml.luxinfine.helper.virtualentity.world.FakeChunkProvider.emptyChunk[net.minecraft.world.chunk.EmptyChunk] ->  lke

ml.luxinfine.helper.asm.EntitySnowmanHook -> team.luxinfine.helper.10_07_2024__18_16_32.qpа
ml.luxinfine.helper.asm.EntitySnowmanHook.readEntityFromNBT(net.minecraft.entity.monster.EntitySnowman, net.minecraft.nbt.NBTTagCompound)void ->  bgl
ml.luxinfine.helper.asm.EntitySnowmanHook.OWNER_FIELD[ml.luxinfine.hooks.api.FieldsAccessor] -> q cn
ml.luxinfine.helper.asm.EntitySnowmanHook._setOwner(net.minecraft.entity.monster.EntitySnowman, com.mojang.authlib.GameProfile)void -> xх d
ml.luxinfine.helper.asm.EntitySnowmanHook.writeEntityToNBT(net.minecraft.entity.monster.EntitySnowman, net.minecraft.nbt.NBTTagCompound)void -> о kv
ml.luxinfine.helper.asm.EntitySnowmanHook._provideOwner(net.minecraft.entity.monster.EntitySnowman, ml.luxinfine.hooks.api.IHookContext)void ->  нх

ml.luxinfine.events.blocks.LiquidFlowEvent.fromX[int] -> на х
ml.luxinfine.events.blocks.LiquidFlowEvent.getFluidBlock()net.minecraft.block.Block -> getFluidBlock
ml.luxinfine.events.blocks.LiquidFlowEvent.fromZ[int] -> с nа
ml.luxinfine.events.blocks.LiquidFlowEvent.fromY[int] ->  рbе
ml.luxinfine.events.blocks.LiquidFlowEvent.world[net.minecraft.world.World] ->  uda
ml.luxinfine.events.blocks.LiquidFlowEvent.getFluidMeta()int -> getFluidMeta
ml.luxinfine.events.blocks.LiquidFlowEvent.getToY()int -> getToY
ml.luxinfine.events.blocks.LiquidFlowEvent.getWorld()net.minecraft.world.World -> getWorld
ml.luxinfine.events.blocks.LiquidFlowEvent.toY[int] -> y sx
ml.luxinfine.events.blocks.LiquidFlowEvent.toX[int] ->  ikn
ml.luxinfine.events.blocks.LiquidFlowEvent.getFromX()int -> getFromX
ml.luxinfine.events.blocks.LiquidFlowEvent.getFromY()int -> getFromY
ml.luxinfine.events.blocks.LiquidFlowEvent.fluidBlock[net.minecraft.block.Block] ->  rqх
ml.luxinfine.events.blocks.LiquidFlowEvent.toZ[int] -> i pz
ml.luxinfine.events.blocks.LiquidFlowEvent.fluidMeta[int] ->  нoh
ml.luxinfine.events.blocks.LiquidFlowEvent.getToZ()int -> getToZ
ml.luxinfine.events.blocks.LiquidFlowEvent.getFromZ()int -> getFromZ
ml.luxinfine.events.blocks.LiquidFlowEvent.getToX()int -> getToX

ml.luxinfine.events.blocks.TripWireTriggerEvent.getLocation()ml.luxinfine.helper.utils.objects.Location -> getLocation
ml.luxinfine.events.blocks.TripWireTriggerEvent.entity[net.minecraft.entity.Entity] -> mm r
ml.luxinfine.events.blocks.TripWireTriggerEvent.getEntity()net.minecraft.entity.Entity -> getEntity
ml.luxinfine.events.blocks.TripWireTriggerEvent.location[ml.luxinfine.helper.utils.objects.Location] -> h kk

ml.luxinfine.events.core.handlers.blocks.BlockDynamicLiquidHook -> team.luxinfine.helper.10_07_2024__18_16_32.vеp
ml.luxinfine.events.core.handlers.blocks.BlockDynamicLiquidHook.updateTick(net.minecraft.block.BlockDynamicLiquid, net.minecraft.world.World, int, int, int, int, net.minecraft.block.BlockDynamicLiquid, net.minecraft.world.World, int, int, int, java.util.Random)void -> pn e
ml.luxinfine.events.core.handlers.blocks.BlockDynamicLiquidHook.lambda$updateTick$0(net.minecraft.block.BlockDynamicLiquid, net.minecraft.world.World, int, int, int, int, int, int, int)void -> vk у
ml.luxinfine.events.core.handlers.blocks.BlockDynamicLiquidHook.lambda$updateTick$1(net.minecraft.block.BlockDynamicLiquid, net.minecraft.world.World, int, int, int, int)void ->  сgх

ml.luxinfine.hooks.internal.HooksLoader.classToDesc(java.lang.String[])java.lang.String[] ->  wuа
ml.luxinfine.hooks.internal.HooksLoader.applyTransformations(java.lang.String, org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean ->  сxу
ml.luxinfine.hooks.internal.HooksLoader.registerMethodInjectors(ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject, java.lang.String, boolean, java.lang.String[], java.lang.String[], ml.luxinfine.hooks.internal.ClassesDataCache)void ->  рxх
ml.luxinfine.hooks.internal.HooksLoader.RAW_TRANSFORMERS[java.util.ArrayList] -> sp j
ml.luxinfine.hooks.internal.HooksLoader.HOOKS_LOGGER[org.apache.logging.log4j.Logger] -> на х
ml.luxinfine.hooks.internal.HooksLoader.registerFieldCreators(java.util.Set, java.util.Map)void -> fjo break
ml.luxinfine.hooks.internal.HooksLoader.loadDeclaredClassOf(ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject)java.lang.Class ->  kмu
ml.luxinfine.hooks.internal.HooksLoader.setFieldAccessor(java.lang.Class, java.lang.String, ml.luxinfine.hooks.internal.Pair)void -> м bр
ml.luxinfine.hooks.internal.HooksLoader.parseClasses(ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject, java.lang.String, java.lang.String)java.lang.String[] -> z bу
ml.luxinfine.hooks.internal.HooksLoader.addEarlySource(java.nio.file.Path)void -> v wl
ml.luxinfine.hooks.internal.HooksLoader.parseHookContainerTarget(ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject)java.lang.String -> с mi
ml.luxinfine.hooks.internal.HooksLoader.fetchMandatoryOverride()byte -> q wa
ml.luxinfine.hooks.internal.HooksLoader.init()void -> u ес
ml.luxinfine.hooks.internal.HooksLoader.loadDefaultSRGMappings(ml.luxinfine.hooks.internal.ClassesDataCache)void -> zlo long
ml.luxinfine.hooks.internal.HooksLoader.HOOKS_DEBUG[boolean] -> n oj
ml.luxinfine.hooks.internal.HooksLoader.OVERRIDE_MANDATORY_STATE[byte] -> e cx

ml.luxinfine.config.internal.DefaultConfigParsers$11 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$11
ml.luxinfine.config.internal.DefaultConfigParsers$11.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)net.minecraft.block.Block -> а мc
ml.luxinfine.config.internal.DefaultConfigParsers$11.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$11.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$11.write(com.google.common.reflect.TypeToken, net.minecraft.block.Block)com.google.gson.JsonElement ->  сcu

ml.luxinfine.config.internal.DefaultConfigParsers$10 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$10
ml.luxinfine.config.internal.DefaultConfigParsers$10.write(com.google.common.reflect.TypeToken, net.minecraft.item.Item)com.google.gson.JsonElement ->  qox
ml.luxinfine.config.internal.DefaultConfigParsers$10.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$10.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)net.minecraft.item.Item ->  уdс
ml.luxinfine.config.internal.DefaultConfigParsers$10.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read

ml.luxinfine.config.internal.CfgSyncCache -> ml.luxinfine.config.internal.dt
ml.luxinfine.config.internal.CfgSyncCache.SYNC_CACHE[java.util.HashMap] -> уr а
ml.luxinfine.config.internal.CfgSyncCache.refreshRecursively(org.apache.commons.lang3.tuple.Pair, java.lang.Class, java.lang.String)void -> a уz
ml.luxinfine.config.internal.CfgSyncCache.refresh(java.lang.String, java.lang.String, java.lang.Class)void -> o lx
ml.luxinfine.config.internal.CfgSyncCache.onJoin(cpw.mods.fml.common.gameevent.PlayerEvent$PlayerLoggedInEvent)void -> x мv
ml.luxinfine.config.internal.CfgSyncCache.lambda$refreshRecursively$0(org.apache.commons.lang3.tuple.Pair)java.util.Map -> k iy
ml.luxinfine.config.internal.CfgSyncCache.lambda$sendConfigs$1(net.minecraft.entity.player.EntityPlayerMP, org.apache.commons.lang3.tuple.Pair, java.util.Map)void -> е do
ml.luxinfine.config.internal.CfgSyncCache.sendConfigs(net.minecraft.entity.player.EntityPlayerMP)void -> ан y

ml.luxinfine.helper.virtualentity.dummy.DummyEntityLookHelper -> team.luxinfine.helper.10_07_2024__18_16_32.uаh
ml.luxinfine.helper.virtualentity.dummy.DummyEntityLookHelper.INSTANCE[net.minecraft.entity.ai.EntityLookHelper] ->  kfn

ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler -> team.luxinfine.helper.10_07_2024__18_16_32.vpс
ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler.onInit()void -> w sd

ml.luxinfine.events.core.listeners.DispenserProcessListener$1 -> team.luxinfine.helper.10_07_2024__18_16_32.aqm$mbi

ml.luxinfine.helper.utils.objects.ChunkLocation.getChunkSafe()net.minecraft.world.chunk.Chunk -> getChunkSafe
ml.luxinfine.helper.utils.objects.ChunkLocation.getChunk()net.minecraft.world.chunk.Chunk -> getChunk
ml.luxinfine.helper.utils.objects.ChunkLocation.setWorld(net.minecraft.world.World)ml.luxinfine.helper.utils.objects.ChunkLocation -> setWorld
ml.luxinfine.helper.utils.objects.ChunkLocation.setDim(int)ml.luxinfine.helper.utils.objects.ChunkLocation -> setDim
ml.luxinfine.helper.utils.objects.ChunkLocation.getDim()int -> getDim
ml.luxinfine.helper.utils.objects.ChunkLocation.getWorldSafe()net.minecraft.world.WorldServer -> getWorldSafe
ml.luxinfine.helper.utils.objects.ChunkLocation.setZ(int)ml.luxinfine.helper.utils.objects.ChunkLocation -> setZ
ml.luxinfine.helper.utils.objects.ChunkLocation.setX(int)ml.luxinfine.helper.utils.objects.ChunkLocation -> setX
ml.luxinfine.helper.utils.objects.ChunkLocation.readFromNBT(net.minecraft.nbt.NBTTagCompound)void -> readFromNBT
ml.luxinfine.helper.utils.objects.ChunkLocation.compareTo(ml.luxinfine.helper.utils.objects.ChunkLocation)int -> compareTo
ml.luxinfine.helper.utils.objects.ChunkLocation.getX()int -> getX
ml.luxinfine.helper.utils.objects.ChunkLocation.getZ()int -> getZ
ml.luxinfine.helper.utils.objects.ChunkLocation.writeToNBT(net.minecraft.nbt.NBTTagCompound)void -> writeToNBT
ml.luxinfine.helper.utils.objects.ChunkLocation.getWorld()net.minecraft.world.WorldServer -> getWorld
ml.luxinfine.helper.utils.objects.ChunkLocation.setPoint(int, int)ml.luxinfine.helper.utils.objects.ChunkLocation -> setPoint

ml.luxinfine.hooks.internal.ClassesDataCache$Key.name[java.lang.String] -> g vs
ml.luxinfine.hooks.internal.ClassesDataCache$Key.clazz[java.lang.String] -> м on
ml.luxinfine.hooks.internal.ClassesDataCache$Key.h[int] -> w al
ml.luxinfine.hooks.internal.ClassesDataCache$Key.desc[java.lang.String] -> jg н

ml.luxinfine.events.core.listeners.SnowmanListener -> team.luxinfine.helper.10_07_2024__18_16_32.сxо
ml.luxinfine.events.core.listeners.SnowmanListener.snowmanUpdateEnd()void -> rс w
ml.luxinfine.events.core.listeners.SnowmanListener.SNOWMAN_PROCESS[net.minecraft.entity.monster.EntitySnowman] -> nм х
ml.luxinfine.events.core.listeners.SnowmanListener.snowmanUpdateStart(net.minecraft.entity.monster.EntitySnowman)void ->  aео
ml.luxinfine.events.core.listeners.SnowmanListener.onBlockChange(ml.luxinfine.events.blocks.BlockSetEvent)void ->  cfе

ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider -> team.luxinfine.helper.10_07_2024__18_16_32.zoс
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.setBalance(java.util.UUID, double)boolean -> setBalance
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.removeBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> removeBalanceListener
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.postBalanceUpdate(org.bukkit.OfflinePlayer)void ->  xta
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.addBalanceListener(ml.luxinfine.helper.integrations.Economy$BalanceChangeListener)void -> addBalanceListener
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.removeBalance(java.util.UUID, double)boolean -> removeBalance
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.lambda$null$0(java.util.UUID)boolean -> mh r
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.initialize()byte -> initialize
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.addBalance(java.util.UUID, double)boolean -> addBalance
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.provider[net.milkbowl.vault.economy.Economy] -> уu v
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.getBalanceListeners()java.util.Collection -> getBalanceListeners
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.getBalance(java.util.UUID)java.util.Optional -> getBalance
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.lambda$initialize$1()void ->  сом
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.changeListeners[java.util.ArrayList] ->  vmt
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.task[org.bukkit.scheduler.BukkitTask] -> x мv
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.lambda$postBalanceUpdate$2(int, double, net.minecraft.entity.player.EntityPlayerMP)void ->  nkр
ml.luxinfine.helper.integrations.impl.bukkit_core.VaultEconomyProvider.lastBalance[gnu.trove.map.hash.TObjectDoubleHashMap] ->  сjf

ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.kw
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInWorld$5(com.sk89q.worldguard.protection.regions.ProtectedRegion)boolean -> p еу
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$10(net.minecraft.util.ChunkCoordinates)com.sk89q.worldedit.BlockVector2D ->  pau
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInPosition$1(com.sk89q.worldguard.protection.regions.ProtectedRegion)boolean -> ем o
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$11(net.minecraft.util.ChunkCoordinates)int -> bl а
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canPlaceBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canPlaceBlock
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.postEvent(org.bukkit.event.Event)boolean ->  нoh
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.deleteRegion(net.minecraft.world.World, java.lang.String)ml.luxinfine.helper.integrations.Regions$DeletionStatus -> deleteRegion
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canAttack(net.minecraft.entity.Entity, net.minecraft.entity.Entity)boolean -> canAttack
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$8(net.minecraft.util.ChunkCoordinates)int ->  yхм
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInChunk$4(com.sk89q.worldguard.protection.regions.ProtectedRegion, com.sk89q.worldguard.protection.regions.ProtectedRegion)ml.luxinfine.helper.integrations.impl.wg.WGRegion -> sу d
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getArea[ml.luxinfine.helper.utils.objects.MethodAccessor] -> еh i
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.checkFlag(net.minecraft.world.World, int, int, int, java.util.UUID, com.sk89q.worldguard.protection.flags.StateFlag)boolean -> final byte
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getRegion(net.minecraft.world.World, java.lang.String)java.util.Optional -> getRegion
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canTeleport(net.minecraft.entity.Entity, net.minecraft.world.World, double, double, double)boolean -> canTeleport
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.virtualRegions[java.util.Map] -> le d
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInChunk$3(java.awt.Rectangle, java.util.Map$Entry)boolean -> sp n
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.plugin[com.sk89q.worldguard.bukkit.WorldGuardPlugin] -> b аw
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getRegionsInPosition(net.minecraft.world.World, int, int, int)java.util.Set -> getRegionsInPosition
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$12(net.minecraft.util.ChunkCoordinates)int -> w al
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getRegisteredFlags()java.util.Set -> getRegisteredFlags
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getGlobalRegion(net.minecraft.world.World)java.util.Optional -> getGlobalRegion
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canAttack(net.minecraft.entity.Entity, java.util.UUID)boolean -> canAttack
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$13(java.lang.Integer)java.util.Set ->  аеe
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canFromTo(net.minecraft.world.World, int, int, int, int, int, int)boolean -> canFromTo
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getRegionsInChunk(net.minecraft.world.World, int, int)java.util.Set -> getRegionsInChunk
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canInteract(net.minecraft.world.World, int, int, int, net.minecraftforge.common.util.ForgeDirection, java.util.UUID)boolean -> canInteract
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.registerFlag(java.lang.String, java.util.function.Function, java.util.function.Function, java.lang.Object, java.util.function.Function, java.util.function.BiConsumer)ml.luxinfine.helper.integrations.Regions$RegionFlag -> registerFlag
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$7(net.minecraft.util.ChunkCoordinates)com.sk89q.worldedit.BlockVector2D -> аt u
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$addRegion$9(net.minecraft.util.ChunkCoordinates)int -> nv q
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$purgeVirtualRegions$0(java.lang.Integer, java.util.Set)void -> u аo
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInWorld$6(com.sk89q.worldguard.protection.regions.ProtectedRegion, com.sk89q.worldguard.protection.regions.ProtectedRegion)ml.luxinfine.helper.integrations.impl.wg.WGRegion -> final byte
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.getRegionsInWorld(net.minecraft.world.World)java.util.Set -> getRegionsInWorld
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.canBreakBlock(net.minecraft.world.World, int, int, int, java.util.UUID)boolean -> canBreakBlock
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.lambda$getRegionsInPosition$2(com.sk89q.worldguard.protection.regions.ProtectedRegion, com.sk89q.worldguard.protection.regions.ProtectedRegion)ml.luxinfine.helper.integrations.impl.wg.WGRegion -> х cu
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.addRegion(ml.luxinfine.helper.integrations.Regions$Region, net.minecraft.world.World, ml.luxinfine.helper.integrations.Regions$RegionShape, java.lang.String, boolean, net.minecraft.util.ChunkCoordinates[])ml.luxinfine.helper.integrations.Regions$CreationStatus -> addRegion
ml.luxinfine.helper.integrations.impl.wg.WorldGuardRegionsProvider.findFlag(java.lang.String)com.sk89q.worldguard.protection.flags.Flag ->  tхj

ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.mfs
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getPlayerData(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerData
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getSupportedFeatures()java.util.Set -> getSupportedFeatures
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, int)int -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, boolean)boolean -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.chatProvider[net.milkbowl.vault.chat.Chat] ->  амy
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.adaptWorld(net.minecraft.world.World)java.lang.String ->  jkа
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, double)double -> getAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.deleteGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> deleteGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, double)double -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.permissionProvider[net.milkbowl.vault.permission.Permission] -> i нm
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.features[java.util.EnumSet] -> d ws
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, int)int -> getAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, boolean)boolean -> getAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.createGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> createGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.initialize()byte -> initialize
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.queryChatProvider()void ->  хно
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPermissionsProvider.getGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getGroup

ml.luxinfine.helper.utils.objects.InstanceChecker.isInstance(java.lang.Object)boolean -> isInstance

ml.luxinfine.helper.virtualentity.VirtualEntityHooks -> team.luxinfine.helper.10_07_2024__18_16_32.ffi
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.FAKE_WORLD[ml.luxinfine.helper.virtualentity.world.FakeServerWorld] -> х оr
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.recentlyHit[ml.luxinfine.helper.utils.objects.FieldAccessor] -> o ho
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.dropFewItems[ml.luxinfine.helper.utils.objects.MethodAccessor] -> ye l
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.createVirtualEntity(java.lang.String)net.minecraft.entity.Entity -> new eyl
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.dropRareDrop[ml.luxinfine.helper.utils.objects.MethodAccessor] -> z gн
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.dropEquipment[ml.luxinfine.helper.utils.objects.MethodAccessor] -> dу l
ml.luxinfine.helper.virtualentity.VirtualEntityHooks.getDrop(net.minecraft.entity.EntityLivingBase, net.minecraft.item.ItemStack, int)java.util.List ->  xуu

ml.luxinfine.helper.integrations.Integration.isDummy()boolean -> isDummy


ml.luxinfine.helper.virtualentity.dummy.DummyJumpHelper -> team.luxinfine.helper.10_07_2024__18_16_32.ejs
ml.luxinfine.helper.virtualentity.dummy.DummyJumpHelper.INSTANCE[net.minecraft.entity.ai.EntityJumpHelper] -> i нm

ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayerGroup -> team.luxinfine.helper.10_07_2024__18_16_32.мuv
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayerGroup.expire[java.time.Instant] -> dм w
ml.luxinfine.helper.integrations.impl.luck_perms.LPPlayerGroup.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate

ml.luxinfine.commands.internal.args.NBTCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.hpp
ml.luxinfine.commands.internal.args.NBTCmdArg.getTagLength(java.lang.String)int ->  cxg
ml.luxinfine.commands.internal.args.NBTCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.nbt.NBTTagCompound ->  saн
ml.luxinfine.commands.internal.args.NBTCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.utils.objects.MethodAccessor.invoke(java.lang.Object, java.lang.Object[])java.lang.Object -> invoke

ml.luxinfine.helper.guis.elements.GuiLabel.getTextPosition()ml.luxinfine.helper.guis.ElementPosition -> getTextPosition
ml.luxinfine.helper.guis.elements.GuiLabel.dropTextShadow()boolean -> dropTextShadow
ml.luxinfine.helper.guis.elements.GuiLabel.getTextColor()int -> getTextColor
ml.luxinfine.helper.guis.elements.GuiLabel.setText(ml.luxinfine.helper.guis.elements.GuiText)ml.luxinfine.helper.guis.elements.GuiLabel -> setText
ml.luxinfine.helper.guis.elements.GuiLabel.getText()java.lang.String -> getText


ml.luxinfine.helper.utils.EntityUtils.RND[java.util.Random] -> рf r

ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$1 -> team.luxinfine.helper.10_07_2024__18_16_32.рmм$хmx

ml.luxinfine.commands.internal.args.EnumCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.bxk
ml.luxinfine.commands.internal.args.EnumCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Enum -> i bо
ml.luxinfine.commands.internal.args.EnumCmdArg.enumType[java.lang.Class] -> l rv
ml.luxinfine.commands.internal.args.EnumCmdArg.lambda$new$0(java.lang.Class, ml.luxinfine.commands.api.ICommandContext)java.util.List -> b tо
ml.luxinfine.commands.internal.args.EnumCmdArg.parseInternal(java.lang.String)java.lang.Enum -> nn r
ml.luxinfine.commands.internal.args.EnumCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.utils.objects.EnergyType._multiplyExact(long, long)long -> на с
ml.luxinfine.helper.utils.objects.EnergyType.formatEUPerTick(double)java.lang.String -> formatEUPerTick
ml.luxinfine.helper.utils.objects.EnergyType.formatEUStored(double, double)java.lang.String -> formatEUStored
ml.luxinfine.helper.utils.objects.EnergyType.formatFromEU(double)java.lang.String -> formatFromEU

ml.luxinfine.hooks.internal.Pair.right[java.lang.Object] ->  ccs
ml.luxinfine.hooks.internal.Pair.left[java.lang.Object] ->  nvi

ml.luxinfine.helper.network.ContainerSync$CHandler -> team.luxinfine.helper.10_07_2024__18_16_32.wcс$lwp
ml.luxinfine.helper.network.ContainerSync$CHandler.onMessage(ml.luxinfine.helper.network.ContainerSync, cpw.mods.fml.common.network.simpleimpl.MessageContext)cpw.mods.fml.common.network.simpleimpl.IMessage -> е iс
ml.luxinfine.helper.network.ContainerSync$CHandler.lambda$onMessage$0(ml.luxinfine.helper.network.ContainerSync)void ->  bps

ml.luxinfine.helper.tiles.TileMachineBase.supportedRotation()boolean -> supportedRotation
ml.luxinfine.helper.tiles.TileMachineBase.markForSave()void -> markForSave
ml.luxinfine.helper.tiles.TileMachineBase.getSyncData(net.minecraft.nbt.NBTTagCompound)net.minecraft.nbt.NBTTagCompound -> getSyncData
ml.luxinfine.helper.tiles.TileMachineBase.onSyncData(net.minecraft.nbt.NBTTagCompound)void -> onSyncData
ml.luxinfine.helper.tiles.TileMachineBase.getCurrentChunk()net.minecraft.world.chunk.Chunk -> getCurrentChunk
ml.luxinfine.helper.tiles.TileMachineBase.onTileLoad()void -> onTileLoad
ml.luxinfine.helper.tiles.TileMachineBase.setRotation(int)void -> setRotation
ml.luxinfine.helper.tiles.TileMachineBase.getRotation()int -> getRotation
ml.luxinfine.helper.tiles.TileMachineBase.markForSync()void -> markForSync
ml.luxinfine.helper.tiles.TileMachineBase.chunk[java.lang.ref.WeakReference] ->  jcg
ml.luxinfine.helper.tiles.TileMachineBase.rotation[int] ->  zeх

ml.luxinfine.helper.utils.internal.IPlayer.getExperienceTotal()float -> getExperienceTotal
ml.luxinfine.helper.utils.internal.IPlayer.getBurnTicks()int -> getBurnTicks
ml.luxinfine.helper.utils.internal.IPlayer.removeExperience(int)void -> removeExperience
ml.luxinfine.helper.utils.internal.IPlayer.getLocation()ml.luxinfine.helper.utils.objects.PlayerLocation -> getLocation
ml.luxinfine.helper.utils.internal.IPlayer.getEnderInventory()net.minecraft.inventory.InventoryEnderChest -> getEnderInventory
ml.luxinfine.helper.utils.internal.IPlayer.setWorld(net.minecraft.world.World)void -> setWorld
ml.luxinfine.helper.utils.internal.IPlayer.getName()java.lang.String -> getName
ml.luxinfine.helper.utils.internal.IPlayer.getFoodLevel()int -> getFoodLevel
ml.luxinfine.helper.utils.internal.IPlayer.setHealth(float)void -> setHealth
ml.luxinfine.helper.utils.internal.IPlayer.asOnlinePlayer()java.util.Optional -> asOnlinePlayer
ml.luxinfine.helper.utils.internal.IPlayer.getPlayerData()net.minecraft.nbt.NBTTagCompound -> getPlayerData
ml.luxinfine.helper.utils.internal.IPlayer.getExperienceLevel()int -> getExperienceLevel
ml.luxinfine.helper.utils.internal.IPlayer.addPotionEffect(net.minecraft.potion.PotionEffect)void -> addPotionEffect
ml.luxinfine.helper.utils.internal.IPlayer.getExperienceRequired()float -> getExperienceRequired
ml.luxinfine.helper.utils.internal.IPlayer.setGameMode(net.minecraft.world.WorldSettings$GameType)void -> setGameMode
ml.luxinfine.helper.utils.internal.IPlayer.getGameMode()net.minecraft.world.WorldSettings$GameType -> getGameMode
ml.luxinfine.helper.utils.internal.IPlayer.getMaxHealth()float -> getMaxHealth
ml.luxinfine.helper.utils.internal.IPlayer.setFoodLevel(int)void -> setFoodLevel
ml.luxinfine.helper.utils.internal.IPlayer.getUUID()java.util.UUID -> getUUID
ml.luxinfine.helper.utils.internal.IPlayer.isOnline()boolean -> isOnline
ml.luxinfine.helper.utils.internal.IPlayer.getInventory()net.minecraft.entity.player.InventoryPlayer -> getInventory
ml.luxinfine.helper.utils.internal.IPlayer.getExperience()float -> getExperience
ml.luxinfine.helper.utils.internal.IPlayer.getX()double -> getX
ml.luxinfine.helper.utils.internal.IPlayer.setLocation(double, double, double, float, float)void -> setLocation
ml.luxinfine.helper.utils.internal.IPlayer.getProperties(java.lang.Class, java.lang.String)net.minecraftforge.common.IExtendedEntityProperties -> getProperties
ml.luxinfine.helper.utils.internal.IPlayer.getZ()double -> getZ
ml.luxinfine.helper.utils.internal.IPlayer.getDimension()int -> getDimension
ml.luxinfine.helper.utils.internal.IPlayer.getLanguage()java.lang.String -> getLanguage
ml.luxinfine.helper.utils.internal.IPlayer.removePotionEffect(net.minecraft.potion.Potion)void -> removePotionEffect
ml.luxinfine.helper.utils.internal.IPlayer.free()void -> free
ml.luxinfine.helper.utils.internal.IPlayer.getHealth()float -> getHealth
ml.luxinfine.helper.utils.internal.IPlayer.getPotionEffects()java.util.Collection -> getPotionEffects
ml.luxinfine.helper.utils.internal.IPlayer.setBurnTicks(int)void -> setBurnTicks
ml.luxinfine.helper.utils.internal.IPlayer.setSaturationLevel(float)void -> setSaturationLevel
ml.luxinfine.helper.utils.internal.IPlayer.addExperience(int)void -> addExperience
ml.luxinfine.helper.utils.internal.IPlayer.getSaturationLevel()float -> getSaturationLevel
ml.luxinfine.helper.utils.internal.IPlayer.getY()double -> getY
ml.luxinfine.helper.utils.internal.IPlayer.getProfile()com.mojang.authlib.GameProfile -> getProfile


ml.luxinfine.events.blocks.BlockSetEvent$UnknownSource.isUnknown()boolean -> isUnknown

ml.luxinfine.helper.utils.objects.EnergyType$1.formatFromEU(double)java.lang.String -> formatFromEU

ml.luxinfine.helper.utils.MsgUtils.chatLines[ml.luxinfine.helper.utils.objects.FieldAccessor] -> pн y
ml.luxinfine.helper.utils.MsgUtils.FORMAT_PATTERN[java.util.regex.Pattern] ->  vhh
ml.luxinfine.helper.utils.MsgUtils.FORMAT_CODES[java.lang.String] ->  pkр

ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil -> team.luxinfine.helper.10_07_2024__18_16_32.нmv
ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil.addPlayerXP(net.minecraft.entity.player.EntityPlayer, int)void -> i qу
ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil.getExperienceForLevel(int)int ->  vjх
ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil.LAST_EXPERIENCE_FIELD[java.lang.reflect.Field] -> а ix
ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil.getLevelForExperience(int)int ->  lнy
ml.luxinfine.helper.utils.internal.offline_player_accessors.XpUtil.getPlayerXP(net.minecraft.entity.player.EntityPlayer)int -> ем o

ml.luxinfine.helper.guis.elements.IGuiSizableElement.getWidth()int -> getWidth
ml.luxinfine.helper.guis.elements.IGuiSizableElement.isHover(int, int)boolean -> isHover
ml.luxinfine.helper.guis.elements.IGuiSizableElement.getHeight()int -> getHeight
ml.luxinfine.helper.guis.elements.IGuiSizableElement.setSize(int, int)ml.luxinfine.helper.guis.elements.IGuiSizableElement -> setSize

ml.luxinfine.config.hooks.ConfigCategoryRegistrationHook -> team.luxinfine.helper.10_07_2024__18_16_32.dрy
ml.luxinfine.config.hooks.ConfigCategoryRegistrationHook.init(ml.luxinfine.hooks.api.IHookContext)void ->  оzc

ml.luxinfine.helper.compat.IC2Helper -> team.luxinfine.helper.10_07_2024__18_16_32.мmu
ml.luxinfine.helper.compat.IC2Helper.registerEnergyTile(net.minecraft.tileentity.TileEntity)void -> a уz
ml.luxinfine.helper.compat.IC2Helper.getTierFromPower(double)int ->  c
ml.luxinfine.helper.compat.IC2Helper.unregisterEnergyTile(net.minecraft.tileentity.TileEntity)void -> rc h

ml.luxinfine.events.core.EventFactory -> team.luxinfine.helper.10_07_2024__18_16_32.npt
ml.luxinfine.events.core.EventFactory.fireFireFromLightningBolt(net.minecraft.world.World, int, int, int, net.minecraft.entity.effect.EntityLightningBolt)boolean -> sp n
ml.luxinfine.events.core.EventFactory.PLAYERS_LIMIT_BYPASS_PERMISSION[java.lang.String] ->  vkа
ml.luxinfine.events.core.EventFactory.fireFireDetonate(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, int, int, int, int, net.minecraftforge.common.util.ForgeDirection)void -> q tz
ml.luxinfine.events.core.EventFactory.SET_BLOCK_LOCK[boolean] -> x my
ml.luxinfine.events.core.EventFactory.fireEndermanSetBlock(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, net.minecraft.entity.monster.EntityEnderman)boolean ->  osj
ml.luxinfine.events.core.EventFactory.lambda$popAction$2()void -> yo k
ml.luxinfine.events.core.EventFactory.pushPlayerAction(net.minecraft.entity.player.EntityPlayer)void -> zt b
ml.luxinfine.events.core.EventFactory.tryPlayerConnect(net.minecraft.server.network.NetHandlerLoginServer, com.mojang.authlib.GameProfile, java.lang.String)boolean -> dj n
ml.luxinfine.events.core.EventFactory.firePistonExtend(net.minecraft.world.World, int, int, int, int, boolean)boolean ->  ago
ml.luxinfine.events.core.EventFactory.fireFireFormLiquid(net.minecraft.world.World, int, int, int, int, int, int, net.minecraft.block.BlockStaticLiquid)boolean ->  xta
ml.luxinfine.events.core.EventFactory.getActionsStack()ml.luxinfine.events.blocks.BlockSetEvent$ActionSource ->  реz
ml.luxinfine.events.core.EventFactory.fireEntityBlockDestroy(net.minecraft.world.IBlockAccess, int, int, int, net.minecraft.entity.Entity, boolean)boolean -> nz о
ml.luxinfine.events.core.EventFactory.lambda$fireBlockSet$3(net.minecraft.world.chunk.Chunk, int, int, int, int, net.minecraft.block.Block)boolean -> extends catch
ml.luxinfine.events.core.EventFactory.fireLiquidFlow(net.minecraftforge.fluids.BlockFluidFinite, net.minecraft.world.World, int, int, int, int, int, int)boolean -> м bр
ml.luxinfine.events.core.EventFactory.pushCommandActionBukkit(java.lang.String, java.lang.String[], java.lang.String)void -> synchronized yjе
ml.luxinfine.events.core.EventFactory.fireLiquidFlow(net.minecraft.block.BlockDynamicLiquid, net.minecraft.world.World, int, int, int, int, int, int, int)void -> h оt
ml.luxinfine.events.core.EventFactory.fireEndermanSetBlock(net.minecraft.world.World, int, int, int, net.minecraft.block.Block, int, int, net.minecraft.entity.monster.EntityEnderman)boolean -> mм н
ml.luxinfine.events.core.EventFactory.callEvent(cpw.mods.fml.common.eventhandler.Event)boolean -> w eа
ml.luxinfine.events.core.EventFactory.fireBlockSet(net.minecraft.world.chunk.Chunk, int, int, int, net.minecraft.block.Block, int)boolean -> bl а
ml.luxinfine.events.core.EventFactory.fireHopperPickup(net.minecraft.inventory.IInventory, net.minecraft.entity.item.EntityItem)boolean -> b lх
ml.luxinfine.events.core.EventFactory.fireAttackEntityFromEnd(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, byte, boolean)void -> h id
ml.luxinfine.events.core.EventFactory.pushCommandAction(net.minecraft.command.ICommand, net.minecraft.command.ICommandSender, java.lang.String[])void -> ug е
ml.luxinfine.events.core.EventFactory.fireLiquidFlow(net.minecraftforge.fluids.BlockFluidClassic, net.minecraft.world.World, int, int, int, int, int, int, int)boolean -> х yе
ml.luxinfine.events.core.EventFactory.firePressurePlate(net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity)boolean -> с pc
ml.luxinfine.events.core.EventFactory.lambda$tryPlayerConnect$4(net.minecraft.server.network.NetHandlerLoginServer, net.minecraft.util.IChatComponent, io.netty.util.concurrent.Future)void ->  zyе
ml.luxinfine.events.core.EventFactory.firePistonRetract(net.minecraft.world.World, int, int, int, int, boolean, int)boolean -> е dа
ml.luxinfine.events.core.EventFactory.fireFireSpread(net.minecraft.world.World, int, int, int, int, int, int, int, net.minecraftforge.common.util.ForgeDirection)boolean ->  tna
ml.luxinfine.events.core.EventFactory.BLOCK_SET_ACTIONS_STACK[java.lang.ThreadLocal] ->  rаh
ml.luxinfine.events.core.EventFactory.lambda$callEvent$0(cpw.mods.fml.common.eventhandler.Event)boolean -> сp е
ml.luxinfine.events.core.EventFactory.fireBlockSet(net.minecraft.world.chunk.Chunk, int, int, int, int)boolean ->  ikn
ml.luxinfine.events.core.EventFactory.pushBlockTickAction(net.minecraft.block.Block, net.minecraft.world.World, int, int, int)void -> al l
ml.luxinfine.events.core.EventFactory.fireFireFromFireball(net.minecraft.world.World, int, int, int, net.minecraft.entity.projectile.EntitySmallFireball)boolean -> y iр
ml.luxinfine.events.core.EventFactory.ENTITY_COLLISIONS[java.util.Map] -> pz r
ml.luxinfine.events.core.EventFactory.fireHopperImport(net.minecraft.tileentity.IHopper, net.minecraft.inventory.IInventory, int, int)boolean -> k iy
ml.luxinfine.events.core.EventFactory.UNKNOWN_SOURCE[ml.luxinfine.events.blocks.BlockSetEvent$UnknownSource] -> b kу
ml.luxinfine.events.core.EventFactory.fireTripWire(net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity)boolean ->  nоb
ml.luxinfine.events.core.EventFactory.lambda$callEvent$1(cpw.mods.fml.common.eventhandler.Event, boolean)void ->  cfе
ml.luxinfine.events.core.EventFactory.ENTITY_DAMAGE_PROCESS[gnu.trove.map.hash.TIntByteHashMap] ->  xуu
ml.luxinfine.events.core.EventFactory.fireLiquidFlow(net.minecraft.world.World, int, int, int, net.minecraftforge.fluids.BlockFluidFinite, int, int, int, int)boolean -> x yс
ml.luxinfine.events.core.EventFactory.fireAttackEntityFromStart(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, float, byte)boolean -> еe k
ml.luxinfine.events.core.EventFactory.fireFarmlandTrample(net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity)boolean -> сw b
ml.luxinfine.events.core.EventFactory.popAction()void -> k dс
ml.luxinfine.events.core.EventFactory.firePotionSplash(net.minecraft.entity.projectile.EntityPotion, net.minecraft.util.MovingObjectPosition, java.util.List, java.util.List)boolean ->  рxх
ml.luxinfine.events.core.EventFactory.fireFireBurn(net.minecraft.world.World, int, int, int, int, int, int, net.minecraftforge.common.util.ForgeDirection)boolean ->  rqх
ml.luxinfine.events.core.EventFactory.fireFireSpread(net.minecraft.world.World, int, int, int, int, int, int, int)boolean -> w eа

ml.luxinfine.config.objects.CustomStack._setConfigPath(java.lang.String)void -> r tt
ml.luxinfine.config.objects.CustomStack.item[net.minecraft.item.Item] -> ос p
ml.luxinfine.config.objects.CustomStack.setStackSize(int)void -> setStackSize
ml.luxinfine.config.objects.CustomStack.tag[net.minecraft.nbt.NBTTagCompound] -> zа k
ml.luxinfine.config.objects.CustomStack.getMetaBounds()int[] -> getMetaBounds
ml.luxinfine.config.objects.CustomStack.itemName[java.lang.String] ->  хgс
ml.luxinfine.config.objects.CustomStack.configPath[java.util.function.Supplier] ->  gxb
ml.luxinfine.config.objects.CustomStack.writeSync()net.minecraft.nbt.NBTTagCompound -> writeSync
ml.luxinfine.config.objects.CustomStack.getItem()net.minecraft.item.Item -> getItem
ml.luxinfine.config.objects.CustomStack._setConfigPath(java.util.function.Supplier)void -> q ot
ml.luxinfine.config.objects.CustomStack.fromConfig(java.lang.String, java.lang.String, int, int, int, net.minecraft.nbt.NBTTagCompound)ml.luxinfine.config.objects.CustomStack ->  nxе
ml.luxinfine.config.objects.CustomStack.modID[java.lang.String] -> r хv
ml.luxinfine.config.objects.CustomStack.getTag()net.minecraft.nbt.NBTTagCompound -> getTag
ml.luxinfine.config.objects.CustomStack.hasTag()boolean -> hasTag
ml.luxinfine.config.objects.CustomStack.setMeta(int)void -> setMeta
ml.luxinfine.config.objects.CustomStack.setMetaBounds(int, int)void -> setMetaBounds
ml.luxinfine.config.objects.CustomStack._getItemName0()java.lang.String ->  kwх
ml.luxinfine.config.objects.CustomStack.setTag(net.minecraft.nbt.NBTTagCompound)void -> setTag
ml.luxinfine.config.objects.CustomStack.writeToNBT()net.minecraft.nbt.NBTTagCompound -> writeToNBT
ml.luxinfine.config.objects.CustomStack.stackSize[int] -> уx а
ml.luxinfine.config.objects.CustomStack.equals(net.minecraft.block.Block, int)boolean -> equals
ml.luxinfine.config.objects.CustomStack.getStackSize()int -> getStackSize
ml.luxinfine.config.objects.CustomStack.fromMeta[int] ->  eap
ml.luxinfine.config.objects.CustomStack.toMCStack()net.minecraft.item.ItemStack -> toMCStack
ml.luxinfine.config.objects.CustomStack.toMeta[int] ->  dlk
ml.luxinfine.config.objects.CustomStack.toMCStacks()java.util.ArrayList -> toMCStacks

ml.luxinfine.helper.integrations.impl.dummy.EmptyGodProvider -> team.luxinfine.helper.10_07_2024__18_16_32.qbе
ml.luxinfine.helper.integrations.impl.dummy.EmptyGodProvider.setGodEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setGodEnabled
ml.luxinfine.helper.integrations.impl.dummy.EmptyGodProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyGodProvider.isGodEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isGodEnabled
ml.luxinfine.helper.integrations.impl.dummy.EmptyGodProvider.isGodActive(java.util.UUID)boolean -> isGodActive

ml.luxinfine.helper.utils.internal.offline_player_accessors.ServerConfigManagerHook -> team.luxinfine.helper.10_07_2024__18_16_32.fvl
ml.luxinfine.helper.utils.internal.offline_player_accessors.ServerConfigManagerHook.saveAllPlayerData(net.minecraft.server.management.ServerConfigurationManager)void ->  уxa
ml.luxinfine.helper.utils.internal.offline_player_accessors.ServerConfigManagerHook.init()void -> u zz

ml.luxinfine.helper.tiles.OwnedTile._setOwner(com.mojang.authlib.GameProfile)void -> _setOwner
ml.luxinfine.helper.tiles.OwnedTile.owner[com.mojang.authlib.GameProfile] -> рw y
ml.luxinfine.helper.tiles.OwnedTile._provideOwner()com.mojang.authlib.GameProfile -> _provideOwner

ml.luxinfine.helper.integrations.IntegrationsRegistry.dummyProviders[java.util.Map] -> oр l
ml.luxinfine.helper.integrations.IntegrationsRegistry.registry[java.util.Map] -> vx о


ml.luxinfine.events.blocks.PressurePlateStartEvent.getLocation()ml.luxinfine.helper.utils.objects.Location -> getLocation
ml.luxinfine.events.blocks.PressurePlateStartEvent.entity[net.minecraft.entity.Entity] -> р ze
ml.luxinfine.events.blocks.PressurePlateStartEvent.getEntity()net.minecraft.entity.Entity -> getEntity
ml.luxinfine.events.blocks.PressurePlateStartEvent.location[ml.luxinfine.helper.utils.objects.Location] -> u xр

ml.luxinfine.helper.guis.elements.IGuiElement$HoverTipsEvent.getHoverTips(java.util.List, int, int)void -> getHoverTips

ml.luxinfine.helper.LuxinfineHelper.initUMVanish()void ->  eeх
ml.luxinfine.helper.LuxinfineHelper.onSeverStarted(cpw.mods.fml.common.event.FMLServerStartedEvent)void ->  нхс
ml.luxinfine.helper.LuxinfineHelper.package2modCache[java.util.Map] ->  png
ml.luxinfine.helper.LuxinfineHelper.onConstruct(cpw.mods.fml.common.event.FMLConstructionEvent)void ->  уdс
ml.luxinfine.helper.LuxinfineHelper.LOGGER[org.apache.logging.log4j.Logger] ->  vсu
ml.luxinfine.helper.LuxinfineHelper.onGameLoaded(cpw.mods.fml.common.event.FMLLoadCompleteEvent)void -> jo b
ml.luxinfine.helper.LuxinfineHelper.findModForClass(java.lang.String)cpw.mods.fml.common.ModContainer ->  yyb
ml.luxinfine.helper.LuxinfineHelper.registerObjects[java.util.Set] -> s fh
ml.luxinfine.helper.LuxinfineHelper.getAutoRegistrationMethod(ml.luxinfine.helper.registration.RegistrableObject$GameState, cpw.mods.fml.common.discovery.ASMDataTable$ASMData, java.lang.Class)java.lang.reflect.Method ->  ipr
ml.luxinfine.helper.LuxinfineHelper.onPostInit(cpw.mods.fml.common.event.FMLPostInitializationEvent)void -> х yе
ml.luxinfine.helper.LuxinfineHelper.doRegistration(ml.luxinfine.helper.registration.RegistrableObject$GameState, cpw.mods.fml.common.event.FMLStateEvent)void -> еt q
ml.luxinfine.helper.LuxinfineHelper.getEvents(java.lang.Object)java.util.LinkedList -> case irp
ml.luxinfine.helper.LuxinfineHelper.callWithMod(cpw.mods.fml.common.ModContainer, java.lang.Runnable)void -> a уz
ml.luxinfine.helper.LuxinfineHelper.findMod(java.lang.String)cpw.mods.fml.common.ModContainer -> р ze
ml.luxinfine.helper.LuxinfineHelper.setActiveModInternal(cpw.mods.fml.common.ModContainer)void ->  cfе
ml.luxinfine.helper.LuxinfineHelper.checkConnection(java.util.Map, cpw.mods.fml.relauncher.Side)boolean ->  nx
ml.luxinfine.helper.LuxinfineHelper.MCEnvLoaded[boolean] -> yo r
ml.luxinfine.helper.LuxinfineHelper.getActiveModInternal()cpw.mods.fml.common.ModContainer -> x ch
ml.luxinfine.helper.LuxinfineHelper.configClasses[java.util.Set] -> f ld
ml.luxinfine.helper.LuxinfineHelper.NETWORK[cpw.mods.fml.common.network.simpleimpl.SimpleNetworkWrapper] -> xy h
ml.luxinfine.helper.LuxinfineHelper.initUMPerms()void ->  cyb
ml.luxinfine.helper.LuxinfineHelper.onServerStarting(cpw.mods.fml.common.event.FMLServerStartingEvent)void ->  hsb
ml.luxinfine.helper.LuxinfineHelper.onPreInit(cpw.mods.fml.common.event.FMLPreInitializationEvent)void -> i uz
ml.luxinfine.helper.LuxinfineHelper.onInit(cpw.mods.fml.common.event.FMLInitializationEvent)void -> мо f
ml.luxinfine.helper.LuxinfineHelper.serverLoaded[boolean] -> nm j

ml.luxinfine.helper.integrations.Economy$BalanceChangeListener.onBalanceChanged(net.minecraft.entity.player.EntityPlayerMP, double)void -> onBalanceChanged

ml.luxinfine.events.entity.EntityDestroyBlockEvent.getTarget()ml.luxinfine.helper.utils.objects.Location -> getTarget
ml.luxinfine.events.entity.EntityDestroyBlockEvent.entity[net.minecraft.entity.Entity] ->  iсv
ml.luxinfine.events.entity.EntityDestroyBlockEvent.target[ml.luxinfine.helper.utils.objects.Location] -> d cf
ml.luxinfine.events.entity.EntityDestroyBlockEvent.willSpawn[boolean] -> k оn
ml.luxinfine.events.entity.EntityDestroyBlockEvent.getEntity()net.minecraft.entity.Entity -> getEntity
ml.luxinfine.events.entity.EntityDestroyBlockEvent.isWillSpawn()boolean -> isWillSpawn

ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry$1 -> team.luxinfine.helper.10_07_2024__18_16_32.рmм$ноj$1
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry$1.asRawSource()java.util.Optional -> asRawSource
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry$1.asPlayerUUID()java.util.Optional -> asPlayerUUID
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry$1.this$0[ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry] ->  pdх

ml.luxinfine.commands.internal.impl.BakedCommandNode -> team.luxinfine.helper.10_07_2024__18_16_32.ggq
ml.luxinfine.commands.internal.impl.BakedCommandNode.bindInfoRecursive(ml.luxinfine.commands.api.tree.IBakedCommandNode, java.lang.String)void -> мu h
ml.luxinfine.commands.internal.impl.BakedCommandNode.parent[ml.luxinfine.commands.api.tree.IBakedCommandNode] ->  оuk
ml.luxinfine.commands.internal.impl.BakedCommandNode.subCommands[java.util.List] -> ow e
ml.luxinfine.commands.internal.impl.BakedCommandNode.name[java.lang.String] ->  puv
ml.luxinfine.commands.internal.impl.BakedCommandNode.getDimensionsWhitelist()int[] -> getDimensionsWhitelist
ml.luxinfine.commands.internal.impl.BakedCommandNode.getExecutionCost()double -> getExecutionCost
ml.luxinfine.commands.internal.impl.BakedCommandNode.getSubCommands()java.util.List -> getSubCommands
ml.luxinfine.commands.internal.impl.BakedCommandNode.optionalArgs[java.util.List] -> mh w
ml.luxinfine.commands.internal.impl.BakedCommandNode.getName()java.lang.String -> getName
ml.luxinfine.commands.internal.impl.BakedCommandNode.getRunnable()ml.luxinfine.commands.api.ICommandRunnable -> getRunnable
ml.luxinfine.commands.internal.impl.BakedCommandNode.getLocalCommands()java.util.List -> getLocalCommands
ml.luxinfine.commands.internal.impl.BakedCommandNode.isEnabled()boolean -> isEnabled
ml.luxinfine.commands.internal.impl.BakedCommandNode.getDimensionsBlacklist()int[] -> getDimensionsBlacklist
ml.luxinfine.commands.internal.impl.BakedCommandNode.getOptionalArguments()java.util.List -> getOptionalArguments
ml.luxinfine.commands.internal.impl.BakedCommandNode.modSource[java.lang.String] -> нx х
ml.luxinfine.commands.internal.impl.BakedCommandNode.getCodeName()java.lang.String -> getCodeName
ml.luxinfine.commands.internal.impl.BakedCommandNode.getSourceModID()java.lang.String -> getSourceModID
ml.luxinfine.commands.internal.impl.BakedCommandNode.args[java.util.List] -> zh x
ml.luxinfine.commands.internal.impl.BakedCommandNode.getCooldown()long -> getCooldown
ml.luxinfine.commands.internal.impl.BakedCommandNode.programName[java.lang.String] -> nr i
ml.luxinfine.commands.internal.impl.BakedCommandNode.getArguments()java.util.List -> getArguments
ml.luxinfine.commands.internal.impl.BakedCommandNode.aliases[java.util.List] -> cc а
ml.luxinfine.commands.internal.impl.BakedCommandNode.localCommands[java.util.List] -> fl v
ml.luxinfine.commands.internal.impl.BakedCommandNode.runnable[ml.luxinfine.commands.api.ICommandRunnable] ->  bfs
ml.luxinfine.commands.internal.impl.BakedCommandNode.isEnabled[boolean] ->  kdd
ml.luxinfine.commands.internal.impl.BakedCommandNode.getParentNode()ml.luxinfine.commands.api.tree.IBakedCommandNode -> getParentNode
ml.luxinfine.commands.internal.impl.BakedCommandNode.DIMBlacklist[int[]] -> km e
ml.luxinfine.commands.internal.impl.BakedCommandNode.cooldown[long] -> r на
ml.luxinfine.commands.internal.impl.BakedCommandNode.DIMWhitelist[int[]] -> x tр
ml.luxinfine.commands.internal.impl.BakedCommandNode.getAliases()java.util.List -> getAliases
ml.luxinfine.commands.internal.impl.BakedCommandNode.executionCost[double] ->  qеf

ml.luxinfine.helper.guis.elements.GuiText$GuiStaticText.text[java.lang.String] -> wх j
ml.luxinfine.helper.guis.elements.GuiText$GuiStaticText.getText()java.lang.String -> getText

ml.luxinfine.helper.integrations.Permissions$Attribute.getValue()java.lang.String -> getValue

ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsGodProvider -> team.luxinfine.helper.10_07_2024__18_16_32.рsx
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsGodProvider.setGodEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setGodEnabled
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsGodProvider.instance[com.earth2me.essentials.Essentials] ->  omе
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsGodProvider.isGodEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isGodEnabled
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsGodProvider.isGodActive(java.util.UUID)boolean -> isGodActive

ml.luxinfine.helper.compat.bukkit.BukkitProxy.craftBukkitPackage[java.lang.String] -> н te
ml.luxinfine.helper.compat.bukkit.BukkitProxy.bukkit2CraftWorld[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  рre
ml.luxinfine.helper.compat.bukkit.BukkitProxy.findCmd(java.lang.String)org.bukkit.command.Command -> yс h
ml.luxinfine.helper.compat.bukkit.BukkitProxy.onServerStartLoading()void -> p vr
ml.luxinfine.helper.compat.bukkit.BukkitProxy.getCmdDesc(java.lang.String)java.lang.String -> f wc
ml.luxinfine.helper.compat.bukkit.BukkitProxy.pluginCommandsMap[org.bukkit.command.SimpleCommandMap] ->  jip
ml.luxinfine.helper.compat.bukkit.BukkitProxy.registryCallbacks[java.util.HashMap] -> z qс
ml.luxinfine.helper.compat.bukkit.BukkitProxy.defineClass[java.lang.reflect.Method] ->  qуm
ml.luxinfine.helper.compat.bukkit.BukkitProxy.executeCommand(java.lang.String)boolean -> нм y
ml.luxinfine.helper.compat.bukkit.BukkitProxy.registerCallbacksHandler()void -> рs h
ml.luxinfine.helper.compat.bukkit.BukkitProxy.getCmdSyntax(java.lang.String)java.lang.String ->  zaр
ml.luxinfine.helper.compat.bukkit.BukkitProxy.unregisterCommand(java.lang.String, boolean)java.util.Map -> r на
ml.luxinfine.helper.compat.bukkit.BukkitProxy.getCommandsWithoutAliases(boolean, boolean)java.util.Set ->  оuk
ml.luxinfine.helper.compat.bukkit.BukkitProxy.toByteArray(java.io.InputStream)byte[] ->  сcu
ml.luxinfine.helper.compat.bukkit.BukkitProxy.registerCommand(java.lang.String, java.lang.Object, boolean)void -> w al
ml.luxinfine.helper.compat.bukkit.BukkitProxy.modCommandsMap[org.bukkit.command.SimpleCommandMap] -> н ii
ml.luxinfine.helper.compat.bukkit.BukkitProxy.mc2BukkitEntityConverter[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  rig
ml.luxinfine.helper.compat.bukkit.BukkitProxy.executeCommand(net.minecraft.entity.player.EntityPlayer, java.lang.String)boolean ->  cуs
ml.luxinfine.helper.compat.bukkit.BukkitProxy.hasCmdPermission(net.minecraft.command.ICommandSender, java.lang.String)boolean ->  bbi
ml.luxinfine.helper.compat.bukkit.BukkitProxy.commandsInMap[ml.luxinfine.helper.utils.objects.FieldAccessor] -> z te
ml.luxinfine.helper.compat.bukkit.BukkitProxy.getExistsCommands()java.util.Set -> vo c

ml.luxinfine.helper.virtualentity.asm.HookEntityLivingBase -> team.luxinfine.helper.10_07_2024__18_16_32.cae
ml.luxinfine.helper.virtualentity.asm.HookEntityLivingBase.initTracker(net.minecraft.entity.EntityLivingBase, net.minecraft.entity.EntityLivingBase, net.minecraft.world.World)net.minecraft.util.CombatTracker -> l rz

ml.luxinfine.helper.handlers.BindFakeHandler -> team.luxinfine.helper.10_07_2024__18_16_32.ltz
ml.luxinfine.helper.handlers.BindFakeHandler.dispenserProjectile(ml.luxinfine.events.blocks.DispenserEvent$EntitySpawn)void -> хv t
ml.luxinfine.helper.handlers.BindFakeHandler.onBlockPlace(net.minecraftforge.event.world.BlockEvent$PlaceEvent)void -> lм е
ml.luxinfine.helper.handlers.BindFakeHandler.lambda$dispenserProjectile$0(ml.luxinfine.events.blocks.DispenserEvent$EntitySpawn, net.minecraft.entity.player.EntityPlayer)void -> nl c

ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode -> team.luxinfine.helper.10_07_2024__18_16_32.pрr$нd
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.NOT_MONEY[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  нet
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.SUCCESS[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  bjy
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.EXECUTE_ERROR[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  zlg
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.NO_PERMISSIONS[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  sig
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.BAD_WORLD[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] -> хv t
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.UNKNOWN_COMMAND[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] -> сu h
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.PENDING_PAY_CONFIRM[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] -> ix х
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.SYNTAX_ERROR[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] ->  смx
ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode.COOLDOWN[ml.luxinfine.commands.internal.impl.MinecraftWrappedCommand$OperationCode] -> pс b

ml.luxinfine.helper.tiles.internal.TileWailaTooltipHandler$1 -> team.luxinfine.helper.10_07_2024__18_16_32.vpс$eмd

ml.luxinfine.commands.internal.args.TransformingCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.qgх
ml.luxinfine.commands.internal.args.TransformingCmdArg.setSuggestionProvider(ml.luxinfine.commands.api.suggestions.ISuggestionsProvider)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setSuggestionProvider
ml.luxinfine.commands.internal.args.TransformingCmdArg.setDescriptionProvider(java.util.function.Function)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.internal.args.TransformingCmdArg.transformer[ml.luxinfine.commands.api.arguments.ICommandArgumentTransformer] -> о uм
ml.luxinfine.commands.internal.args.TransformingCmdArg.source[ml.luxinfine.commands.api.arguments.BaseCommandArgument] -> si o
ml.luxinfine.commands.internal.args.TransformingCmdArg.getDescription(ml.luxinfine.commands.api.ICommandContext)java.lang.String -> getDescription
ml.luxinfine.commands.internal.args.TransformingCmdArg.setDescriptionProvider(java.lang.String, java.lang.Object[])ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.internal.args.TransformingCmdArg.getSuggestions(ml.luxinfine.commands.api.ICommandContext)java.util.List -> getSuggestions
ml.luxinfine.commands.internal.args.TransformingCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse


ml.luxinfine.helper.jei.JEIRecipeHandler.getRecipes()java.util.List -> getRecipes
ml.luxinfine.helper.jei.JEIRecipeHandler.addPositionStacks(java.util.List, java.util.List, java.lang.Object)void -> addPositionStacks
ml.luxinfine.helper.jei.JEIRecipeHandler.addPositionStacks(java.util.List, java.util.List, ml.luxinfine.helper.recipes.RecipeBase)void -> addPositionStacks
ml.luxinfine.helper.jei.JEIRecipeHandler.asFluid(net.minecraft.item.ItemStack)net.minecraftforge.fluids.Fluid -> ig s
ml.luxinfine.helper.jei.JEIRecipeHandler.registerNEISlots(java.util.List, java.util.List)void -> registerNEISlots

ml.luxinfine.events.blocks.BlockSetEvent$PlayerSource.getPlayer()net.minecraft.entity.player.EntityPlayer -> getPlayer

ml.luxinfine.helper.utils.internal.CustomChatPacket -> team.luxinfine.helper.10_07_2024__18_16_32.eхм
ml.luxinfine.helper.utils.internal.CustomChatPacket.key[java.util.UUID] -> in n
ml.luxinfine.helper.utils.internal.CustomChatPacket.readUTF8String(io.netty.buffer.ByteBuf)java.lang.String -> yс h
ml.luxinfine.helper.utils.internal.CustomChatPacket.access$100(ml.luxinfine.helper.utils.internal.CustomChatPacket)java.util.List -> g vh
ml.luxinfine.helper.utils.internal.CustomChatPacket.messageLines[java.util.List] -> be i
ml.luxinfine.helper.utils.internal.CustomChatPacket.lambda$toBytes$0(io.netty.buffer.ByteBuf)void -> hw h
ml.luxinfine.helper.utils.internal.CustomChatPacket.writeUTF8String(io.netty.buffer.ByteBuf, java.lang.String)void ->  vkа
ml.luxinfine.helper.utils.internal.CustomChatPacket.lambda$fromBytes$1(io.netty.buffer.ByteBuf)void ->  cvм
ml.luxinfine.helper.utils.internal.CustomChatPacket.access$000(ml.luxinfine.helper.utils.internal.CustomChatPacket)java.util.UUID -> qn z

ml.luxinfine.config.internal.DefaultConfigParsers$3 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$3
ml.luxinfine.config.internal.DefaultConfigParsers$3.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$3.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$3.write(com.google.common.reflect.TypeToken, java.util.Map$Entry)com.google.gson.JsonElement -> y xu
ml.luxinfine.config.internal.DefaultConfigParsers$3.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.util.Map$Entry -> хk е

ml.luxinfine.config.internal.DefaultConfigParsers$1 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$1
ml.luxinfine.config.internal.DefaultConfigParsers$1.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$1.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$1.write(com.google.common.reflect.TypeToken, java.lang.Class)com.google.gson.JsonElement -> ui h
ml.luxinfine.config.internal.DefaultConfigParsers$1.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Class ->  zxr

ml.luxinfine.hooks.internal.injects.precise.ThrowInjector.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.config.internal.DefaultConfigParsers$2 -> team.luxinfine.helper.10_07_2024__18_16_32.gu$2
ml.luxinfine.config.internal.DefaultConfigParsers$2.write(com.google.common.reflect.TypeToken, org.apache.commons.lang3.tuple.Triple)com.google.gson.JsonElement -> import float
ml.luxinfine.config.internal.DefaultConfigParsers$2.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.internal.DefaultConfigParsers$2.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.config.internal.DefaultConfigParsers$2.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)org.apache.commons.lang3.tuple.Triple -> е u

ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations -> team.luxinfine.helper.10_07_2024__18_16_32.wnv
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$8(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> z qс
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$null$6(org.bukkit.event.server.PluginDisableEvent)void ->  puv
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$3(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void ->  qaj
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$5(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> e pc
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$7(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> p аk
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.init()void -> b еv
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$0(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> сp u
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$2(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void ->  uyр
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$1(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void ->  anо
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitIntegrations.lambda$init$4(ml.luxinfine.helper.compat.bukkit.BukkitProxy$InjectEnvironment)void -> zn g

ml.luxinfine.helper.utils.objects.LazyValue.isInitialized()boolean -> isInitialized
ml.luxinfine.helper.utils.objects.LazyValue.src[java.util.function.Supplier] ->  оаd
ml.luxinfine.helper.utils.objects.LazyValue.value[java.lang.Object] -> o zx

ml.luxinfine.helper.containers.InfinitySlotItemSizePacket -> team.luxinfine.helper.10_07_2024__18_16_32.vgm
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.access$100(ml.luxinfine.helper.containers.InfinitySlotItemSizePacket)net.minecraft.item.ItemStack[] ->  сjf
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.access$000(ml.luxinfine.helper.containers.InfinitySlotItemSizePacket)short ->  сjf
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.readItemStackFromBuffer(io.netty.buffer.ByteBuf)net.minecraft.item.ItemStack -> w al
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.items[net.minecraft.item.ItemStack[]] ->  сgх
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.lambda$fromBytes$0(io.netty.buffer.ByteBuf)void -> y hа
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.slot[short] ->  lнy
ml.luxinfine.helper.containers.InfinitySlotItemSizePacket.lambda$toBytes$1(io.netty.buffer.ByteBuf)void ->  dwg


ml.luxinfine.helper.jei.JEIHooks.openJEIRecipes0(java.lang.String)void -> t es

ml.luxinfine.commands.api.arguments.ICommandArgument.getDescription(ml.luxinfine.commands.api.ICommandContext)java.lang.String -> getDescription
ml.luxinfine.commands.api.arguments.ICommandArgument.getSuggestions(ml.luxinfine.commands.api.ICommandContext)java.util.List -> getSuggestions
ml.luxinfine.commands.api.arguments.ICommandArgument.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.Economy$TransactionContext.setBalance(java.util.UUID, double)boolean -> setBalance
ml.luxinfine.helper.integrations.Economy$TransactionContext.removeBalance(java.util.UUID, double)boolean -> removeBalance
ml.luxinfine.helper.integrations.Economy$TransactionContext.addBalance(java.util.UUID, double)boolean -> addBalance
ml.luxinfine.helper.integrations.Economy$TransactionContext.getBalance(java.util.UUID)java.util.Optional -> getBalance



ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$RelationalPlaceholder -> team.luxinfine.helper.10_07_2024__18_16_32.tуx$уhz

ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry -> team.luxinfine.helper.10_07_2024__18_16_32.рmм$ноj
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.getPunishReason()java.util.Optional -> getPunishReason
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.getPunishSource()ml.luxinfine.helper.integrations.Punishments$PunishSource -> getPunishSource
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.getRemovePunishDate()java.util.Optional -> getRemovePunishDate
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.entry[net.minecraft.server.management.UserListEntry] -> е u
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.getPunishDate()java.util.Optional -> getPunishDate
ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry.access$100(ml.luxinfine.helper.integrations.impl.VanillaPunishmentsProvider$MCBanEntry)net.minecraft.server.management.UserListEntry -> zа k

ml.luxinfine.hooks.internal.InterfaceBinderImpl.requiredInterfaces[java.lang.String[]] -> c rt
ml.luxinfine.hooks.internal.InterfaceBinderImpl.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)boolean ->  kj
ml.luxinfine.hooks.internal.InterfaceBinderImpl.requiredAnnotations[java.lang.String[]] ->  xmе
ml.luxinfine.hooks.internal.InterfaceBinderImpl.interfacesToBind[java.lang.String[]] -> cу k
ml.luxinfine.hooks.internal.InterfaceBinderImpl.hookContainerClass[java.lang.String] -> x yd

ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand -> team.luxinfine.helper.10_07_2024__18_16_32.нуa
ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand.lambda$null$1(java.lang.String, java.lang.Class)boolean ->  ocy
ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand.init()void -> ao n
ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand.lambda$null$2(java.lang.String)ml.luxinfine.commands.api.CommandException -> b lх
ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand.lambda$init$0(ml.luxinfine.commands.api.ICommandContext)java.util.List -> f dy
ml.luxinfine.helper.utils.internal.ShowIntegrationsCommand.lambda$init$3(ml.luxinfine.commands.api.ICommandContext)void ->  mmн

ml.luxinfine.helper.asm.ASMTransformer.transform(java.lang.String, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.asm.ASMTransformer$Callback)void -> transform

ml.luxinfine.helper.guis.elements.IGuiLabel.getTextPosition()ml.luxinfine.helper.guis.ElementPosition -> getTextPosition
ml.luxinfine.helper.guis.elements.IGuiLabel.dropTextShadow()boolean -> dropTextShadow
ml.luxinfine.helper.guis.elements.IGuiLabel.isHover(int, int)boolean -> isHover
ml.luxinfine.helper.guis.elements.IGuiLabel.getTextColor()int -> getTextColor
ml.luxinfine.helper.guis.elements.IGuiLabel.drawText(int, int)void -> drawText
ml.luxinfine.helper.guis.elements.IGuiLabel.getText()java.lang.String -> getText

ml.luxinfine.helper.asm.HookHelper -> team.luxinfine.helper.10_07_2024__18_16_32.yрi
ml.luxinfine.helper.asm.HookHelper.readFromNBT(net.minecraft.nbt.NBTTagCompound)com.mojang.authlib.GameProfile ->  ryp
ml.luxinfine.helper.asm.HookHelper.writeToNBT(net.minecraft.nbt.NBTTagCompound, com.mojang.authlib.GameProfile)void -> nz о

ml.luxinfine.helper.integrations.FlyState.setFlyEnabled(java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setFlyEnabled
ml.luxinfine.helper.integrations.FlyState.isFlyActive(java.util.UUID)boolean -> isFlyActive
ml.luxinfine.helper.integrations.FlyState.isFlyEnabled(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isFlyEnabled

ml.luxinfine.events.blocks.FarmlandTrampleEvent.getTargetBlock()ml.luxinfine.helper.utils.objects.Location -> getTargetBlock
ml.luxinfine.events.blocks.FarmlandTrampleEvent.targetBlock[ml.luxinfine.helper.utils.objects.Location] -> е uр
ml.luxinfine.events.blocks.FarmlandTrampleEvent.entity[net.minecraft.entity.Entity] -> pu g
ml.luxinfine.events.blocks.FarmlandTrampleEvent.getEntity()net.minecraft.entity.Entity -> getEntity

ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer -> team.luxinfine.helper.10_07_2024__18_16_32.нds
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getPermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getPermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setAttributeValue(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getAttribute
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getPermissions()ml.luxinfine.helper.integrations.OperationResult -> getPermissions
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setPermissionValue(java.lang.String, boolean)ml.luxinfine.helper.integrations.OperationResult -> setPermissionValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.addGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.vaultPerm[net.milkbowl.vault.permission.Permission] -> h ts
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.user[java.util.UUID] ->  уki
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getSuffix()ml.luxinfine.helper.integrations.OperationResult -> getSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setSuffix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setSuffix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.removeAttribute(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeAttribute
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.addGroup(java.lang.String, java.time.Instant)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.vaultChat[net.milkbowl.vault.chat.Chat] ->  fo
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setTempPermissionValue(java.lang.String, java.time.Instant, boolean)ml.luxinfine.helper.integrations.OperationResult -> setTempPermissionValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.removePermission(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removePermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.removeGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getPrimaryGroup()ml.luxinfine.helper.integrations.OperationResult -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getPrefix()ml.luxinfine.helper.integrations.OperationResult -> getPrefix
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.getAttributes()ml.luxinfine.helper.integrations.OperationResult -> getAttributes
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setTempAttributeValue(java.lang.String, java.time.Instant, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setTempAttributeValue
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPlayer.setPrefix(java.lang.String, int)ml.luxinfine.helper.integrations.OperationResult -> setPrefix



ml.luxinfine.commands.internal.args.WorldCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.нre
ml.luxinfine.commands.internal.args.WorldCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.world.WorldServer ->  tdz
ml.luxinfine.commands.internal.args.WorldCmdArg.lambda$null$0(net.minecraft.world.WorldServer)java.lang.String ->  pmo
ml.luxinfine.commands.internal.args.WorldCmdArg.force[boolean] -> xd e
ml.luxinfine.commands.internal.args.WorldCmdArg.lambda$new$1(ml.luxinfine.commands.api.ICommandContext)java.util.List -> у zp
ml.luxinfine.commands.internal.args.WorldCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm -> team.luxinfine.helper.10_07_2024__18_16_32.svs
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.removeCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeCondition
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.addCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addCondition
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.key[java.lang.String] -> v lм
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.getConditions()ml.luxinfine.helper.integrations.OperationResult -> getConditions
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.isAllowPermission()boolean -> isAllowPermission
ml.luxinfine.helper.integrations.impl.vault_perms.VaultPerm.allow[boolean] -> см м

ml.luxinfine.helper.asm.BlockTNTHook -> team.luxinfine.helper.10_07_2024__18_16_32.мti
ml.luxinfine.helper.asm.BlockTNTHook.lambda$null$0(net.minecraft.entity.item.EntityTNTPrimed, net.minecraft.entity.player.EntityPlayer)void -> сu h
ml.luxinfine.helper.asm.BlockTNTHook.lambda$func_150114_a$1(net.minecraft.entity.item.EntityTNTPrimed, net.minecraft.world.World, int, int, int)void ->  мhс
ml.luxinfine.helper.asm.BlockTNTHook.func_150114_a(net.minecraft.world.World, double, double, double, net.minecraft.entity.EntityLivingBase, net.minecraft.block.BlockTNT, net.minecraft.world.World, int, int, int, int, net.minecraft.entity.EntityLivingBase, ml.luxinfine.hooks.api.IHookContext)net.minecraft.entity.item.EntityTNTPrimed -> нр x
ml.luxinfine.helper.asm.BlockTNTHook.createNewTileEntity(net.minecraft.block.BlockTNT, net.minecraft.world.World, int, ml.luxinfine.hooks.api.IHookContext)void ->  ysd

ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.annotationProperties[java.util.Map] -> kj v
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.objectName[java.lang.String] -> оz о
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.declareClassName[java.lang.String] ->  tуl
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.hash(java.lang.String)int -> s ем
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.h[int] ->  uм
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.modifiers[int] -> аq с
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.objectDesc[java.lang.String] -> у xр
ml.luxinfine.hooks.internal.ModsScanner$AnnotatedObject.classSource[java.nio.file.Path] -> xe y

ml.luxinfine.helper.asm.langhooks.NetHandlerPlayServerHook -> team.luxinfine.helper.10_07_2024__18_16_32.oмu
ml.luxinfine.helper.asm.langhooks.NetHandlerPlayServerHook.processClientSettings(net.minecraft.network.NetHandlerPlayServer, net.minecraft.network.play.client.C15PacketClientSettings)void ->  wnm

ml.luxinfine.commands.api.arguments.BaseCommandArgument.setSuggestionProvider(ml.luxinfine.commands.api.suggestions.ISuggestionsProvider)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setSuggestionProvider
ml.luxinfine.commands.api.arguments.BaseCommandArgument.setDescriptionProvider(java.util.function.Function)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.api.arguments.BaseCommandArgument.filter(ml.luxinfine.commands.api.arguments.ICommandArgumentFilter, java.lang.String)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> filter
ml.luxinfine.commands.api.arguments.BaseCommandArgument.filter(ml.luxinfine.commands.api.arguments.ICommandArgumentFilter)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> filter
ml.luxinfine.commands.api.arguments.BaseCommandArgument.getDescription(ml.luxinfine.commands.api.ICommandContext)java.lang.String -> getDescription
ml.luxinfine.commands.api.arguments.BaseCommandArgument.setDescriptionProvider(java.lang.String, java.lang.Object[])ml.luxinfine.commands.api.arguments.BaseCommandArgument -> setDescriptionProvider
ml.luxinfine.commands.api.arguments.BaseCommandArgument.transform(ml.luxinfine.commands.api.arguments.ICommandArgumentTransformer)ml.luxinfine.commands.api.arguments.BaseCommandArgument -> transform
ml.luxinfine.commands.api.arguments.BaseCommandArgument.getSuggestions(ml.luxinfine.commands.api.ICommandContext)java.util.List -> getSuggestions

ml.luxinfine.commands.internal.args.FloatCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.оun
ml.luxinfine.commands.internal.args.FloatCmdArg.minimum[float] -> k ux
ml.luxinfine.commands.internal.args.FloatCmdArg.maximum[float] -> рх f
ml.luxinfine.commands.internal.args.FloatCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Float ->  сcu
ml.luxinfine.commands.internal.args.FloatCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse




ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute -> team.luxinfine.helper.10_07_2024__18_16_32.izo
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.removeCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeCondition
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.container[net.luckperms.api.model.PermissionHolder] ->  nka
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.addCondition(java.lang.String, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addCondition
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.getValue()java.lang.String -> getValue
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.getName()java.lang.String -> getName
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.getExpireDate()ml.luxinfine.helper.integrations.OperationResult -> getExpireDate
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.lambda$updateNode$0(net.luckperms.api.node.types.MetaNode)java.lang.Boolean ->  vkа
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.node[net.luckperms.api.node.types.MetaNode] -> ow e
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.getConditions()ml.luxinfine.helper.integrations.OperationResult -> getConditions
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.lp[net.luckperms.api.LuckPerms] ->  мp
ml.luxinfine.helper.integrations.impl.luck_perms.LPAttribute.updateNode(net.luckperms.api.node.types.MetaNode)ml.luxinfine.helper.integrations.OperationResult -> dм w

ml.luxinfine.helper.asm.TileEntityHopperHook -> team.luxinfine.helper.10_07_2024__18_16_32.xvн
ml.luxinfine.helper.asm.TileEntityHopperHook.OWNER_FIELD[ml.luxinfine.hooks.api.FieldsAccessor] -> аp р
ml.luxinfine.helper.asm.TileEntityHopperHook.readFromNBT(net.minecraft.tileentity.TileEntityHopper, net.minecraft.nbt.NBTTagCompound)void ->  oоj
ml.luxinfine.helper.asm.TileEntityHopperHook.writeToNBT(net.minecraft.tileentity.TileEntityHopper, net.minecraft.nbt.NBTTagCompound)void ->  dxw
ml.luxinfine.helper.asm.TileEntityHopperHook._setOwner(net.minecraft.tileentity.TileEntityHopper, com.mojang.authlib.GameProfile)void -> eu x
ml.luxinfine.helper.asm.TileEntityHopperHook._provideOwner(net.minecraft.tileentity.TileEntityHopper, ml.luxinfine.hooks.api.IHookContext)void ->  pui

ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter -> team.luxinfine.helper.10_07_2024__18_16_32.ltн
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.lambda$read$1(java.lang.Class, java.lang.String)com.google.gson.JsonParseException -> уa o
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.lambda$read$0(java.lang.Class)com.google.gson.JsonParseException -> wp у
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)ml.luxinfine.helper.integrations.Integration ->  eхн
ml.luxinfine.helper.integrations.impl.CfgIntegrationsAdapter.write(com.google.common.reflect.TypeToken, ml.luxinfine.helper.integrations.Integration)com.google.gson.JsonElement -> si o


ml.luxinfine.helper.asm.ServerConfigurationManagerHook -> team.luxinfine.helper.10_07_2024__18_16_32.нqh
ml.luxinfine.helper.asm.ServerConfigurationManagerHook.allowUserToConnect(net.minecraft.server.management.ServerConfigurationManager, int, net.minecraft.server.management.ServerConfigurationManager, java.net.SocketAddress, com.mojang.authlib.GameProfile)int -> hx н
ml.luxinfine.helper.asm.ServerConfigurationManagerHook.lambda$allowUserToConnect$1(int)int -> x рi
ml.luxinfine.helper.asm.ServerConfigurationManagerHook.lambda$allowUserToConnect$0(com.mojang.authlib.GameProfile, int)int ->  xmе


ml.luxinfine.helper.virtualentity.world.FakeChunkLoader -> team.luxinfine.helper.10_07_2024__18_16_32.сyz

ml.luxinfine.helper.utils.objects.EnergyType$2.formatFromEU(double)java.lang.String -> formatFromEU


ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider -> team.luxinfine.helper.10_07_2024__18_16_32.ptс
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.isDummy()boolean -> isDummy
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, int)int -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, boolean)boolean -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, boolean)boolean -> getAttributeValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, int)int -> getAttributeValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeValue(java.util.UUID, java.lang.String, double)double -> getAttributeValue
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.impl.dummy.EmptyPermissionsProvider.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, double)double -> getAttributeGroupValue

ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1 -> team.luxinfine.helper.10_07_2024__18_16_32.sмi$1
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1.has(ml.luxinfine.helper.integrations.Regions$RegionEntry)boolean -> has
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1.set(ml.luxinfine.helper.integrations.Regions$RegionEntry, java.lang.Object)void -> set
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1.val$defaultValue[java.lang.Object] -> yu z
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1.get(ml.luxinfine.helper.integrations.Regions$RegionEntry)java.lang.Object -> get
ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider$1.this$0[ml.luxinfine.helper.integrations.impl.dummy.EmptyRegionsProvider] -> sj d

ml.luxinfine.helper.handlers.PlayerModsListener$ModInfo.getModVersion()java.lang.String -> getModVersion
ml.luxinfine.helper.handlers.PlayerModsListener$ModInfo.getModID()java.lang.String -> getModID
ml.luxinfine.helper.handlers.PlayerModsListener$ModInfo.modVersion[java.lang.String] -> м cj
ml.luxinfine.helper.handlers.PlayerModsListener$ModInfo.modID[java.lang.String] -> jg b

ml.luxinfine.helper.integrations.Permissions.getPlayerData(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getPlayerData
ml.luxinfine.helper.integrations.Permissions.getAttributeValue(java.util.UUID, java.lang.String, long)long -> getAttributeValue
ml.luxinfine.helper.integrations.Permissions.getSupportedFeatures()java.util.Set -> getSupportedFeatures
ml.luxinfine.helper.integrations.Permissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, int)int -> getAttributeGroupValue
ml.luxinfine.helper.integrations.Permissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, boolean)boolean -> getAttributeGroupValue
ml.luxinfine.helper.integrations.Permissions.hasPermission(net.minecraft.command.ICommandSender, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.Permissions.getAttributeValue(java.util.UUID, java.lang.String, java.lang.String)java.lang.String -> getAttributeValue
ml.luxinfine.helper.integrations.Permissions.hasPermissionGroup(net.minecraft.world.World, java.lang.String, java.lang.String)boolean -> hasPermissionGroup
ml.luxinfine.helper.integrations.Permissions.hasPermission(java.util.UUID, java.lang.String)boolean -> hasPermission
ml.luxinfine.helper.integrations.Permissions.getPrefix(java.util.UUID)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.Permissions.getAttributeValue(java.util.UUID, java.lang.String, double)double -> getAttributeValue
ml.luxinfine.helper.integrations.Permissions.deleteGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> deleteGroup
ml.luxinfine.helper.integrations.Permissions.getPrimaryGroup(java.util.UUID)java.lang.String -> getPrimaryGroup
ml.luxinfine.helper.integrations.Permissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, double)double -> getAttributeGroupValue
ml.luxinfine.helper.integrations.Permissions.getAttributeValue(java.util.UUID, java.lang.String, int)int -> getAttributeValue
ml.luxinfine.helper.integrations.Permissions.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.Permissions.getAttributeValue(java.util.UUID, java.lang.String, boolean)boolean -> getAttributeValue
ml.luxinfine.helper.integrations.Permissions.createGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> createGroup
ml.luxinfine.helper.integrations.Permissions.getSuffix(java.util.UUID)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.Permissions.getPrefix(net.minecraft.world.World, java.lang.String)java.lang.String -> getPrefix
ml.luxinfine.helper.integrations.Permissions.getSuffix(net.minecraft.world.World, java.lang.String)java.lang.String -> getSuffix
ml.luxinfine.helper.integrations.Permissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, java.lang.String)java.lang.String -> getAttributeGroupValue
ml.luxinfine.helper.integrations.Permissions.getPlayerGroups(java.util.UUID)java.util.Set -> getPlayerGroups
ml.luxinfine.helper.integrations.Permissions.getAttributeGroupValue(net.minecraft.world.World, java.lang.String, java.lang.String, long)long -> getAttributeGroupValue
ml.luxinfine.helper.integrations.Permissions.getGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getGroup

ml.luxinfine.helper.integrations.Punishments.unbanIP(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> unbanIP
ml.luxinfine.helper.integrations.Punishments.getBans()ml.luxinfine.helper.integrations.OperationResult -> getBans
ml.luxinfine.helper.integrations.Punishments.getBanInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getBanInfo
ml.luxinfine.helper.integrations.Punishments.isMuted(java.util.UUID)boolean -> isMuted
ml.luxinfine.helper.integrations.Punishments.getMutes()ml.luxinfine.helper.integrations.OperationResult -> getMutes
ml.luxinfine.helper.integrations.Punishments.getIPBanInfo(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> getIPBanInfo
ml.luxinfine.helper.integrations.Punishments.getMuteInfo(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getMuteInfo
ml.luxinfine.helper.integrations.Punishments.unban(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unban
ml.luxinfine.helper.integrations.Punishments.getIPBans()ml.luxinfine.helper.integrations.OperationResult -> getIPBans
ml.luxinfine.helper.integrations.Punishments.banIP(java.lang.String, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> banIP
ml.luxinfine.helper.integrations.Punishments.ban(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> ban
ml.luxinfine.helper.integrations.Punishments.mute(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> mute
ml.luxinfine.helper.integrations.Punishments.isBanned(java.util.UUID)boolean -> isBanned
ml.luxinfine.helper.integrations.Punishments.getWarns(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.Punishments.unmute(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> unmute
ml.luxinfine.helper.integrations.Punishments.getSupportedPunishTypes()java.util.Set -> getSupportedPunishTypes
ml.luxinfine.helper.integrations.Punishments.getWarns()ml.luxinfine.helper.integrations.OperationResult -> getWarns
ml.luxinfine.helper.integrations.Punishments.removeWarn(java.util.UUID, int)ml.luxinfine.helper.integrations.OperationResult -> removeWarn
ml.luxinfine.helper.integrations.Punishments.warn(java.util.UUID, long, java.util.UUID, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> warn


ml.luxinfine.helper.blocks.IRotatableTile.supportedRotation()boolean -> supportedRotation
ml.luxinfine.helper.blocks.IRotatableTile.setRotation(int)void -> setRotation
ml.luxinfine.helper.blocks.IRotatableTile.getRotation()int -> getRotation


ml.luxinfine.commands.api.tree.IRunOrSubCommandBuilder.run(ml.luxinfine.commands.api.ICommandRunnable)ml.luxinfine.commands.api.tree.IBakedCommandNode -> run
ml.luxinfine.commands.api.tree.IRunOrSubCommandBuilder.subCommand(ml.luxinfine.commands.api.tree.IBakedCommandNode)ml.luxinfine.commands.api.tree.IRunOrSubCommandBuilder -> subCommand

ml.luxinfine.hooks.internal.ModsScanner.findCore()void ->  оeо
ml.luxinfine.hooks.internal.ModsScanner.iterate(java.nio.file.Path, java.util.function.Consumer)void ->  rfа
ml.luxinfine.hooks.internal.ModsScanner.getInternalName(org.objectweb.asm.tree.AnnotationNode)java.lang.String ->  сgх
ml.luxinfine.hooks.internal.ModsScanner.nodeHandler(java.nio.file.Path, java.util.Map)java.util.function.Consumer ->  tхj
ml.luxinfine.hooks.internal.ModsScanner.decode(java.lang.String)java.lang.String -> f jk
ml.luxinfine.hooks.internal.ModsScanner.findLoadedMods()java.util.Set -> vi i
ml.luxinfine.hooks.internal.ModsScanner.searchAnnotationsInfo()java.util.Map ->  mwe
ml.luxinfine.hooks.internal.ModsScanner.getTargetPaths()java.util.List -> ep m
ml.luxinfine.hooks.internal.ModsScanner.searchAnnotationsInfoInternal()void -> ff о
ml.luxinfine.hooks.internal.ModsScanner.findModDirMods(java.io.File, java.io.File[])void -> be i
ml.luxinfine.hooks.internal.ModsScanner.checkClazz(java.nio.file.Path)boolean -> y sw
ml.luxinfine.hooks.internal.ModsScanner.parseAnnotationProperties(java.util.List)java.util.Map -> p vr
ml.luxinfine.hooks.internal.ModsScanner.addFileToClassPaths(java.io.File)void -> cу k
ml.luxinfine.hooks.internal.ModsScanner.readClass(java.io.InputStream)org.objectweb.asm.tree.ClassNode -> b аw
ml.luxinfine.hooks.internal.ModsScanner.handleFile(java.util.stream.Stream, java.util.function.Consumer)void -> i bо
ml.luxinfine.hooks.internal.ModsScanner.isWin[boolean] -> аd н
ml.luxinfine.hooks.internal.ModsScanner.classPaths[java.util.List] -> f gg
ml.luxinfine.hooks.internal.ModsScanner.annotations[java.util.Map] -> qн n
ml.luxinfine.hooks.internal.ModsScanner.zipJar[java.util.regex.Pattern] ->  miq

ml.luxinfine.helper.asm.EntityWitherHook -> team.luxinfine.helper.10_07_2024__18_16_32.uuc
ml.luxinfine.helper.asm.EntityWitherHook.readEntityFromNBT(net.minecraft.entity.boss.EntityWither, net.minecraft.nbt.NBTTagCompound)void ->  ijd
ml.luxinfine.helper.asm.EntityWitherHook.OWNER_FIELD[ml.luxinfine.hooks.api.FieldsAccessor] -> dv е
ml.luxinfine.helper.asm.EntityWitherHook._setOwner(net.minecraft.entity.boss.EntityWither, com.mojang.authlib.GameProfile)void ->  xмo
ml.luxinfine.helper.asm.EntityWitherHook._provideOwner(net.minecraft.entity.boss.EntityWither, ml.luxinfine.hooks.api.IHookContext)void ->  hmn
ml.luxinfine.helper.asm.EntityWitherHook.writeEntityToNBT(net.minecraft.entity.boss.EntityWither, net.minecraft.nbt.NBTTagCompound)void ->  уjz

ml.luxinfine.events.blocks.BlockSetEvent$CommandSource.getCommandArgs()java.lang.String[] -> getCommandArgs
ml.luxinfine.events.blocks.BlockSetEvent$CommandSource.getCommandSender()java.lang.String -> getCommandSender
ml.luxinfine.events.blocks.BlockSetEvent$CommandSource.getCommand()java.lang.String -> getCommand


ml.luxinfine.hooks.internal.HookUtils.readStack(org.objectweb.asm.tree.analysis.Frame)org.objectweb.asm.tree.analysis.BasicValue[] -> mm r
ml.luxinfine.hooks.internal.HookUtils.buildFieldAccessorInterface()ml.luxinfine.hooks.internal.Pair -> ej о
ml.luxinfine.hooks.internal.HookUtils.LOADER[ml.luxinfine.hooks.internal.HookUtils$ASMClassLoader] -> еt q
ml.luxinfine.hooks.internal.HookUtils.generateBoxing(org.objectweb.asm.Type)org.objectweb.asm.tree.InsnList ->  xfe
ml.luxinfine.hooks.internal.HookUtils.generateUnboxing(org.objectweb.asm.Type)org.objectweb.asm.tree.InsnList ->  оаu
ml.luxinfine.hooks.internal.HookUtils.stopJVM()java.lang.Object -> уu v
ml.luxinfine.hooks.internal.HookUtils.interfaceId[int] -> o rр
ml.luxinfine.hooks.internal.HookUtils.buildFieldAccessorImpl(java.lang.Class, java.lang.String)ml.luxinfine.hooks.api.FieldsAccessor -> ej о
ml.luxinfine.hooks.internal.HookUtils.getConstructorInitNode(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode)org.objectweb.asm.tree.MethodInsnNode -> рs h
ml.luxinfine.hooks.internal.HookUtils.configureHookContext(int, int, int, org.objectweb.asm.tree.LocalVariableNode, boolean)org.objectweb.asm.tree.InsnList ->  рbе
ml.luxinfine.hooks.internal.HookUtils.checkClass(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, java.lang.String[], java.lang.String[])boolean -> y iр
ml.luxinfine.hooks.internal.HookUtils.loadFuzzyParameters(boolean, java.lang.String)org.objectweb.asm.tree.InsnList -> ix i
ml.luxinfine.hooks.internal.HookUtils.generateExitFromHookContext(org.objectweb.asm.tree.MethodNode)org.objectweb.asm.tree.InsnList -> jk f

ml.luxinfine.helper.utils.ASMUtils$GlobalVar.load()org.objectweb.asm.tree.FieldInsnNode -> load
ml.luxinfine.helper.utils.ASMUtils$GlobalVar.store()org.objectweb.asm.tree.FieldInsnNode -> store
ml.luxinfine.helper.utils.ASMUtils$GlobalVar.owner[java.lang.String] -> h yа

ml.luxinfine.events.entity.PotionSplashEvent.getPotionEffects()java.util.List -> getPotionEffects
ml.luxinfine.events.entity.PotionSplashEvent.thrower[net.minecraft.entity.player.EntityPlayer] ->  zhu
ml.luxinfine.events.entity.PotionSplashEvent.entityPotion[net.minecraft.entity.projectile.EntityPotion] -> b kу
ml.luxinfine.events.entity.PotionSplashEvent.potionEffects[java.util.List] -> v pе
ml.luxinfine.events.entity.PotionSplashEvent.getImpactTarget()net.minecraft.util.MovingObjectPosition -> getImpactTarget
ml.luxinfine.events.entity.PotionSplashEvent.affectedEntities[java.util.List] -> мx х
ml.luxinfine.events.entity.PotionSplashEvent.getAffectedEntities()java.util.List -> getAffectedEntities
ml.luxinfine.events.entity.PotionSplashEvent.getThrower()java.util.Optional -> getThrower
ml.luxinfine.events.entity.PotionSplashEvent.impactTarget[net.minecraft.util.MovingObjectPosition] ->  uм
ml.luxinfine.events.entity.PotionSplashEvent.getEntityPotion()net.minecraft.entity.projectile.EntityPotion -> getEntityPotion


ml.luxinfine.helper.jei.JEIHandler$RecipeBottom.results[java.lang.Object[]] ->  kj
ml.luxinfine.helper.jei.JEIHandler$RecipeBottom.rect[java.awt.Rectangle] -> еt q

ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler -> team.luxinfine.helper.10_07_2024__18_16_32.nyc
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.recipesPerPage(codechicken.nei.recipe.GuiRecipe)int -> с sp
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.lambda$recipesPerPage$1(net.minecraft.client.gui.GuiButton)boolean -> in n
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.handlers[java.util.Map] -> w fz
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.register(java.lang.Class, java.lang.Class, codechicken.nei.api.IOverlayHandler)void ->  ago
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.lambda$register$0(java.lang.Class)java.util.Map ->  аеe
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.onGuiRefresh(net.minecraftforge.client.event.GuiScreenEvent$DrawScreenEvent$Pre)void -> w eа
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.JEI_EXTENSION[boolean] -> j kk
ml.luxinfine.helper.jei.JEIUndefinedOverlaysHandler.onButtonClick(net.minecraftforge.client.event.GuiScreenEvent$ActionPerformedEvent$Pre)void ->  qis

ml.luxinfine.hooks.internal.HookContextImpl.getInjectIndex()int -> getInjectIndex
ml.luxinfine.hooks.internal.HookContextImpl.caughtException()boolean -> caughtException
ml.luxinfine.hooks.internal.HookContextImpl.getRedirectedValue()java.lang.Object -> getRedirectedValue
ml.luxinfine.hooks.internal.HookContextImpl.getCustomLocalVars()java.lang.Object[] -> getCustomLocalVars
ml.luxinfine.hooks.internal.HookContextImpl.exit(java.lang.Object)void -> exit
ml.luxinfine.hooks.internal.HookContextImpl.getSourceClass()java.lang.Class -> getSourceClass

ml.luxinfine.events.core.listeners.DispenserProcessListener -> team.luxinfine.helper.10_07_2024__18_16_32.aqm
ml.luxinfine.events.core.listeners.DispenserProcessListener.DISPENSER_PROCESS[ml.luxinfine.events.core.listeners.DispenserProcessListener$DispenserProcess] -> u аo
ml.luxinfine.events.core.listeners.DispenserProcessListener.onEntitySpawn(net.minecraftforge.event.entity.EntityJoinWorldEvent)void ->  qhk
ml.luxinfine.events.core.listeners.DispenserProcessListener.onProcessEnd(net.minecraft.item.ItemStack)ml.luxinfine.events.core.listeners.DispenserProcessListener$Result -> p sx
ml.luxinfine.events.core.listeners.DispenserProcessListener.onProcessStart(net.minecraft.dispenser.IBlockSource, net.minecraft.item.ItemStack)ml.luxinfine.events.core.listeners.DispenserProcessListener$Result ->  oid
ml.luxinfine.events.core.listeners.DispenserProcessListener.onBlockChange(ml.luxinfine.events.blocks.BlockSetEvent)void -> х ld

ml.luxinfine.helper.utils.internal.CustomChatPacket$CHandler -> team.luxinfine.helper.10_07_2024__18_16_32.eхм$ugk
ml.luxinfine.helper.utils.internal.CustomChatPacket$CHandler.onMessage(ml.luxinfine.helper.utils.internal.CustomChatPacket, cpw.mods.fml.common.network.simpleimpl.MessageContext)cpw.mods.fml.common.network.simpleimpl.IMessage ->  pmo
ml.luxinfine.helper.utils.internal.CustomChatPacket$CHandler.lambda$onMessage$0(ml.luxinfine.helper.utils.internal.CustomChatPacket)void -> у nf

ml.luxinfine.events.core.handlers.blocks.BlockFluidClassicHook -> team.luxinfine.helper.10_07_2024__18_16_32.nzd
ml.luxinfine.events.core.handlers.blocks.BlockFluidClassicHook.lambda$updateTick$0(net.minecraftforge.fluids.BlockFluidClassic, net.minecraft.world.World, int, int, int, int, int, int, int)void ->  vmt
ml.luxinfine.events.core.handlers.blocks.BlockFluidClassicHook.lambda$updateTick$1(net.minecraftforge.fluids.BlockFluidClassic, net.minecraft.world.World, int, int, int, int)void -> h yа
ml.luxinfine.events.core.handlers.blocks.BlockFluidClassicHook.updateTick(net.minecraftforge.fluids.BlockFluidClassic, net.minecraft.world.World, int, int, int, int, net.minecraftforge.fluids.BlockFluidClassic, net.minecraft.world.World, int, int, int, java.util.Random)void ->  xqс
ml.luxinfine.events.core.handlers.blocks.BlockFluidClassicHook.flowIntoBlock[ml.luxinfine.helper.utils.objects.MethodAccessor] -> ro w

ml.luxinfine.events.blocks.DispenserEvent$BlockChange.getTarget()ml.luxinfine.helper.utils.objects.Location -> getTarget
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.newBlock[net.minecraft.block.Block] -> j hу
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.getOldMeta()int -> getOldMeta
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.getNewMeta()int -> getNewMeta
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.oldBlock[net.minecraft.block.Block] -> j vа
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.getOldBlock()net.minecraft.block.Block -> getOldBlock
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.oldMeta[int] -> y jm
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.target[ml.luxinfine.helper.utils.objects.Location] ->  xмb
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.newMeta[int] ->  tрн
ml.luxinfine.events.blocks.DispenserEvent$BlockChange.getNewBlock()net.minecraft.block.Block -> getNewBlock

ml.luxinfine.config.objects.CustomStackList.containsBlock(net.minecraft.block.Block)boolean -> containsBlock
ml.luxinfine.config.objects.CustomStackList.addItems(ml.luxinfine.config.objects.CustomStack[])void -> addItems
ml.luxinfine.config.objects.CustomStackList._setConfigPath(java.lang.String)void -> nм о
ml.luxinfine.config.objects.CustomStackList.clear()void -> clear
ml.luxinfine.config.objects.CustomStackList.itemsList[java.util.List] -> i bа
ml.luxinfine.config.objects.CustomStackList.get(int)ml.luxinfine.config.objects.CustomStack -> get
ml.luxinfine.config.objects.CustomStackList.isEmpty()boolean -> isEmpty
ml.luxinfine.config.objects.CustomStackList.writeToNBT()net.minecraft.nbt.NBTTagCompound -> writeToNBT
ml.luxinfine.config.objects.CustomStackList.addItems(net.minecraft.item.ItemStack[])void -> addItems
ml.luxinfine.config.objects.CustomStackList.containsItem(net.minecraft.item.Item)boolean -> containsItem
ml.luxinfine.config.objects.CustomStackList.removeItems(net.minecraft.item.ItemStack[])int -> removeItems
ml.luxinfine.config.objects.CustomStackList.toStringList()java.util.ArrayList -> toStringList
ml.luxinfine.config.objects.CustomStackList.configPath[java.lang.String] -> pg j
ml.luxinfine.config.objects.CustomStackList.getSize()int -> getSize
ml.luxinfine.config.objects.CustomStackList.addItems(java.lang.String[])void -> addItems
ml.luxinfine.config.objects.CustomStackList.removeItems(ml.luxinfine.config.objects.CustomStack[])int -> removeItems
ml.luxinfine.config.objects.CustomStackList.writeSync()net.minecraft.nbt.NBTTagCompound -> writeSync
ml.luxinfine.config.objects.CustomStackList.addItems(java.util.List, java.lang.String[])void -> addItems
ml.luxinfine.config.objects.CustomStackList.toMCStacks()java.util.ArrayList -> toMCStacks
ml.luxinfine.config.objects.CustomStackList.containsItem(net.minecraft.item.ItemStack)boolean -> containsItem
ml.luxinfine.config.objects.CustomStackList.containsItem(ml.luxinfine.config.objects.CustomStack)boolean -> containsItem
ml.luxinfine.config.objects.CustomStackList.containsBlock(net.minecraft.block.Block, int)boolean -> containsBlock


ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderWrapper -> team.luxinfine.helper.10_07_2024__18_16_32.tуx$oxу
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderWrapper.parse(net.minecraft.entity.player.EntityPlayerMP, java.lang.String)java.lang.String -> parse
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderWrapper.papiHook[me.clip.placeholderapi.PlaceholderHook] -> q zc
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderWrapper.parse(java.util.UUID, java.lang.String)java.lang.String -> parse

ml.luxinfine.commands.internal.args.PotionCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.lеl
ml.luxinfine.commands.internal.args.PotionCmdArg.lambda$null$0(net.minecraft.potion.Potion)java.lang.String -> x my
ml.luxinfine.commands.internal.args.PotionCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.potion.Potion -> pu g
ml.luxinfine.commands.internal.args.PotionCmdArg.lambda$new$1(ml.luxinfine.commands.api.ICommandContext)java.util.List -> aо d
ml.luxinfine.commands.internal.args.PotionCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.Regions$Region.addMember(java.util.UUID)boolean -> addMember
ml.luxinfine.helper.integrations.Regions$Region.getOwners()java.util.Set -> getOwners
ml.luxinfine.helper.integrations.Regions$Region.hasFlag(java.lang.String)boolean -> hasFlag
ml.luxinfine.helper.integrations.Regions$Region.removeMember(java.util.UUID)boolean -> removeMember
ml.luxinfine.helper.integrations.Regions$Region.addOwner(java.util.UUID)boolean -> addOwner
ml.luxinfine.helper.integrations.Regions$Region.setFlag(java.lang.String, java.lang.String)boolean -> setFlag
ml.luxinfine.helper.integrations.Regions$Region.removeOwner(java.util.UUID)boolean -> removeOwner
ml.luxinfine.helper.integrations.Regions$Region.getMembers()java.util.Set -> getMembers
ml.luxinfine.helper.integrations.Regions$Region.getFlag(java.lang.String)java.lang.String -> getFlag

ml.luxinfine.helper.utils.internal.MinecraftServerHook -> team.luxinfine.helper.10_07_2024__18_16_32.zte
ml.luxinfine.helper.utils.internal.MinecraftServerHook.run(net.minecraft.server.MinecraftServer)void -> g tt
ml.luxinfine.helper.utils.internal.MinecraftServerHook.serverThread[java.lang.Thread] ->  нуy
ml.luxinfine.helper.utils.internal.MinecraftServerHook.run_exit(net.minecraft.server.MinecraftServer)void -> il m

ml.luxinfine.helper.guis.GuiBase.skipRectangleTransfer[boolean] ->  ncz
ml.luxinfine.helper.guis.GuiBase.drawHitItem(net.minecraft.client.gui.FontRenderer, net.minecraft.client.renderer.texture.TextureManager, net.minecraft.item.ItemStack, int, int)void -> у mn
ml.luxinfine.helper.guis.GuiBase.drawText(java.lang.String, int, int, int)void -> drawText
ml.luxinfine.helper.guis.GuiBase.drawGuiTank(int, int, int, int, int, net.minecraftforge.fluids.FluidStack)void -> drawGuiTank
ml.luxinfine.helper.guis.GuiBase.bindTexture(net.minecraft.util.ResourceLocation)void -> bindTexture
ml.luxinfine.helper.guis.GuiBase.hoverContainer[java.util.ArrayList] -> м рp
ml.luxinfine.helper.guis.GuiBase.drawBackgroundGui(int, int, float)void -> drawBackgroundGui
ml.luxinfine.helper.guis.GuiBase.getContainer()ml.luxinfine.helper.containers.ContainerBase -> getContainer
ml.luxinfine.helper.guis.GuiBase.drawProgressBar(int, int, int, int, int, int, double, int)void -> drawProgressBar
ml.luxinfine.helper.guis.GuiBase.drawTextC(java.lang.String, int, int)void -> drawTextC
ml.luxinfine.helper.guis.GuiBase.getTextWidth(java.lang.String)int -> getTextWidth
ml.luxinfine.helper.guis.GuiBase.drawTextC(java.lang.String, int, int, int)void -> drawTextC
ml.luxinfine.helper.guis.GuiBase.drawText(java.lang.String, int, int, int, boolean)void -> drawText
ml.luxinfine.helper.guis.GuiBase.drawHoverText(java.lang.String, int, int, int, int, int, int)void -> drawHoverText
ml.luxinfine.helper.guis.GuiBase.drawHoverText(java.util.List, int, int, int, int, int, int)void -> drawHoverText
ml.luxinfine.helper.guis.GuiBase.drawTextC(java.lang.String, int, int, boolean)void -> drawTextC
ml.luxinfine.helper.guis.GuiBase.drawTextC(java.lang.String, int, int, int, boolean)void -> drawTextC
ml.luxinfine.helper.guis.GuiBase.drawTextR(java.lang.String, int, int, int)void -> drawTextR
ml.luxinfine.helper.guis.GuiBase.getTile()net.minecraft.tileentity.TileEntity -> getTile
ml.luxinfine.helper.guis.GuiBase.getTexture()net.minecraft.util.ResourceLocation -> getTexture
ml.luxinfine.helper.guis.GuiBase.drawTextR(java.lang.String, int, int, int, boolean)void -> drawTextR
ml.luxinfine.helper.guis.GuiBase.addElement(ml.luxinfine.helper.guis.elements.IGuiElement)ml.luxinfine.helper.guis.elements.IGuiElement -> addElement

ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderRelationalWrapper -> team.luxinfine.helper.10_07_2024__18_16_32.tуx$cнq
ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$PlaceholderRelationalWrapper.parse(net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP, java.lang.String)java.lang.String -> parse

ml.luxinfine.helper.utils.objects.ClassAccessor$EarlyClassAccessor -> ml.luxinfine.helper.utils.objects.ClassAccessor$аbf

ml.luxinfine.hooks.internal.injects.fuzzy.AfterInvokeInjectorFuzzy.throwableSafety[boolean] ->  нaa
ml.luxinfine.hooks.internal.injects.fuzzy.AfterInvokeInjectorFuzzy.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList -> dj n
ml.luxinfine.hooks.internal.injects.fuzzy.AfterInvokeInjectorFuzzy.removeThrowableSafeTag(java.lang.String[])java.lang.String[] -> r eg

ml.luxinfine.helper.utils.objects.Cuboid$BlockIterator.acceptEntry(ml.luxinfine.helper.utils.objects.Cuboid$BlockEntry)boolean -> acceptEntry

ml.luxinfine.commands.internal.args.Vector -> team.luxinfine.helper.10_07_2024__18_16_32.tсr
ml.luxinfine.commands.internal.args.Vector.read(double, ml.luxinfine.commands.api.IStringReader)double -> k id
ml.luxinfine.commands.internal.args.Vector.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.util.Vec3 -> s fh
ml.luxinfine.commands.internal.args.Vector.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.config.internal.ConfigManager -> ml.luxinfine.config.internal.aоo
ml.luxinfine.config.internal.ConfigManager.registerFromHook(java.lang.Class)void -> у nf
ml.luxinfine.config.internal.ConfigManager.lambda$null$2(java.lang.Class, ml.luxinfine.config.internal.ConfigInfo)boolean -> у mn
ml.luxinfine.config.internal.ConfigManager.lambda$reloadConfig$9(java.util.ArrayList, java.lang.String, java.util.Map)void ->  fou
ml.luxinfine.config.internal.ConfigManager.getParser()com.google.gson.Gson -> m zd
ml.luxinfine.config.internal.ConfigManager.readCfg(net.minecraft.command.ICommandSender, java.util.Map, java.util.List)ml.luxinfine.config.internal.ConfigReloadInfo -> nм m
ml.luxinfine.config.internal.ConfigManager.lambda$null$16(java.lang.String)void -> iо c
ml.luxinfine.config.internal.ConfigManager.lambda$postConfigsReload$15(ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String, java.util.Map)void -> kh v
ml.luxinfine.config.internal.ConfigManager.lambda$registerAfterGameLoaded$1()void -> t о
ml.luxinfine.config.internal.ConfigManager.lambda$null$21(ml.luxinfine.config.internal.ConfigInfo)void -> v wo
ml.luxinfine.config.internal.ConfigManager.lambda$null$22(java.lang.String, java.util.Map)void ->  рre
ml.luxinfine.config.internal.ConfigManager.lambda$postConfigsReload$18(ml.luxinfine.config.internal.ConfigReloadInfo)void -> ka y
ml.luxinfine.config.internal.ConfigManager.lambda$handleValue$29(java.lang.Class, com.google.gson.JsonElement)java.lang.Object -> dk а
ml.luxinfine.config.internal.ConfigManager.lambda$null$11(ml.luxinfine.config.internal.ConfigReloadInfo)void -> мx е
ml.luxinfine.config.internal.ConfigManager.lambda$registerAnnotatedConfig$3(java.lang.Class, java.util.Map)boolean ->  ska
ml.luxinfine.config.internal.ConfigManager.NO_PRETTY_PARSER[com.google.gson.Gson] -> c ts
ml.luxinfine.config.internal.ConfigManager.lambda$reloadConfig$6(net.minecraft.command.ICommandSender)void ->  сcu
ml.luxinfine.config.internal.ConfigManager.CUSTOM_RULES_INHERIT[java.util.Map] -> dx h
ml.luxinfine.config.internal.ConfigManager.rebuildParser()void -> my y
ml.luxinfine.config.internal.ConfigManager.lambda$reloadConfig$5(net.minecraft.command.ICommandSender, java.lang.String, java.lang.String)void -> ye l
ml.luxinfine.config.internal.ConfigManager.reloadConfig(net.minecraft.command.ICommandSender, java.lang.String, java.lang.String, boolean)void ->  qfr
ml.luxinfine.config.internal.ConfigManager.sendModifyEvent(java.lang.Class, java.lang.String, java.lang.Class, java.lang.Object, java.lang.Object, java.lang.String)java.lang.Object ->  уki
ml.luxinfine.config.internal.ConfigManager.lambda$null$7(java.util.ArrayList, java.lang.String, java.lang.String)void ->  ikn
ml.luxinfine.config.internal.ConfigManager.lambda$null$17(ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String)void -> а мc
ml.luxinfine.config.internal.ConfigManager.registerAnnotatedConfig(java.lang.Class, java.lang.String)void ->  хрd
ml.luxinfine.config.internal.ConfigManager.serverLoaded[boolean] -> c xw
ml.luxinfine.config.internal.ConfigManager.lambda$null$24(java.lang.String)java.lang.String -> z ek
ml.luxinfine.config.internal.ConfigManager.addCustomParseRule(java.lang.Class, boolean, ml.luxinfine.config.internal.TypeAdapterBridge)void -> q tz
ml.luxinfine.config.internal.ConfigManager.configReloadLog[java.lang.ThreadLocal] ->  еqn
ml.luxinfine.config.internal.ConfigManager.lambda$null$13(ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String, java.lang.String)void -> x yс
ml.luxinfine.config.internal.ConfigManager.reloadRequesterLang[java.lang.ThreadLocal] ->  нpf
ml.luxinfine.config.internal.ConfigManager.registerConfig(java.lang.Class, java.lang.String, java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method, java.lang.String)boolean -> x eн
ml.luxinfine.config.internal.ConfigManager.lambda$readCfg$26(ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String, java.util.Map)void -> rр n
ml.luxinfine.config.internal.ConfigManager.PARSER[com.google.gson.Gson] -> vx о
ml.luxinfine.config.internal.ConfigManager.lambda$static$0()void -> h ур
ml.luxinfine.config.internal.ConfigManager.lambda$readClass$28(java.util.List, java.lang.String, java.lang.reflect.Field, java.lang.String)void -> import float
ml.luxinfine.config.internal.ConfigManager.defaultValues[java.util.Map] ->  xep
ml.luxinfine.config.internal.ConfigManager.lambda$postConfigsReload$20(ml.luxinfine.config.internal.ConfigReloadInfo)void -> еа i
ml.luxinfine.config.internal.ConfigManager.LOGGER[org.apache.logging.log4j.Logger] ->  kuр
ml.luxinfine.config.internal.ConfigManager.lambda$reloadConfig$10(net.minecraft.command.ICommandSender, java.util.Map, java.util.ArrayList)ml.luxinfine.config.internal.ConfigReloadInfo -> zа k
ml.luxinfine.config.internal.ConfigManager.lambda$readClass$27(java.util.List, java.lang.String, java.lang.reflect.Field, java.lang.String)void -> l bi
ml.luxinfine.config.internal.ConfigManager.sortConfigProperties(com.google.gson.JsonObject)com.google.gson.JsonObject ->  pkр
ml.luxinfine.config.internal.ConfigManager.lambda$null$8(java.util.ArrayList, java.lang.String, ml.luxinfine.config.internal.ConfigInfo)void -> c uо
ml.luxinfine.config.internal.ConfigManager.postConfigsReload(ml.luxinfine.config.internal.ConfigReloadInfo)void ->  сgх
ml.luxinfine.config.internal.ConfigManager.lambda$postConfigsReload$23(ml.luxinfine.config.internal.ConfigReloadInfo)void ->  нih
ml.luxinfine.config.internal.ConfigManager.lambda$null$19(java.lang.String)void ->  yхн
ml.luxinfine.config.internal.ConfigManager.searchConfigClazz(java.lang.String, java.lang.String)java.lang.Class -> ro w
ml.luxinfine.config.internal.ConfigManager.handleValue(com.google.gson.JsonObject, com.google.common.reflect.TypeToken, ml.luxinfine.config.api.ConfigValue, java.lang.Object, java.lang.String, java.lang.String, java.util.List, java.util.List)java.lang.Object -> yo k
ml.luxinfine.config.internal.ConfigManager.registerAfterGameLoaded(java.util.Set)void -> м рp
ml.luxinfine.config.internal.ConfigManager.lambda$registerConfig$4(java.lang.String)java.util.Map -> ff о
ml.luxinfine.config.internal.ConfigManager.lambda$reloadConfig$12(ml.luxinfine.config.internal.ConfigReloadInfo)void -> rd q
ml.luxinfine.config.internal.ConfigManager.searchConfigs(java.lang.String, java.lang.String)java.util.Map -> н bм
ml.luxinfine.config.internal.ConfigManager.lambda$null$25(java.lang.String, ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String, ml.luxinfine.config.internal.ConfigInfo)void ->  tм
ml.luxinfine.config.internal.ConfigManager.readClass(java.lang.String, java.lang.Class, com.google.gson.JsonObject, java.util.List, java.util.List)void ->  ocy
ml.luxinfine.config.internal.ConfigManager.searchConfigs_0(java.lang.String, java.lang.String)java.util.Map -> х х
ml.luxinfine.config.internal.ConfigManager.REGISTERED_CONFIGS[java.util.Map] -> k fа
ml.luxinfine.config.internal.ConfigManager.CUSTOM_RULES[java.util.Map] -> dm k
ml.luxinfine.config.internal.ConfigManager.lambda$null$14(ml.luxinfine.config.internal.ConfigReloadInfo, java.lang.String, ml.luxinfine.config.internal.ConfigInfo)void ->  еqа
ml.luxinfine.config.internal.ConfigManager.registerAdapter(java.lang.Class, ml.luxinfine.config.api.IConfigSerializeRule, boolean)void -> l rv

ml.luxinfine.commands.internal.args.Position -> team.luxinfine.helper.10_07_2024__18_16_32.tмz
ml.luxinfine.commands.internal.args.Position.read(int, ml.luxinfine.commands.api.IStringReader)int -> in n
ml.luxinfine.commands.internal.args.Position.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)net.minecraft.util.ChunkCoordinates -> extends catch
ml.luxinfine.commands.internal.args.Position.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.helper.integrations.Permissions$PlayerData.setTempAttributeValue(java.lang.String, java.time.Instant, java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> setTempAttributeValue
ml.luxinfine.helper.integrations.Permissions$PlayerData.addGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.Permissions$PlayerData.getGroups()ml.luxinfine.helper.integrations.OperationResult -> getGroups
ml.luxinfine.helper.integrations.Permissions$PlayerData.addGroup(java.lang.String, java.time.Instant)ml.luxinfine.helper.integrations.OperationResult -> addGroup
ml.luxinfine.helper.integrations.Permissions$PlayerData.setTempPermissionValue(java.lang.String, java.time.Instant, boolean)ml.luxinfine.helper.integrations.OperationResult -> setTempPermissionValue
ml.luxinfine.helper.integrations.Permissions$PlayerData.removeGroup(java.lang.String)ml.luxinfine.helper.integrations.OperationResult -> removeGroup
ml.luxinfine.helper.integrations.Permissions$PlayerData.getPrimaryGroup()ml.luxinfine.helper.integrations.OperationResult -> getPrimaryGroup

ml.luxinfine.helper.utils.objects.ClassAccessor.isInterface[boolean] ->  dsо
ml.luxinfine.helper.utils.objects.ClassAccessor.isInstanceOf(java.lang.String)boolean -> isInstanceOf
ml.luxinfine.helper.utils.objects.ClassAccessor.interfaces[java.util.List] -> оt t
ml.luxinfine.helper.utils.objects.ClassAccessor.name[java.lang.String] -> aq p
ml.luxinfine.helper.utils.objects.ClassAccessor._acceptModsPaths(java.util.Collection)void ->  zeх
ml.luxinfine.helper.utils.objects.ClassAccessor.getBytecodeFromNotch(java.lang.String)byte[] -> s iе
ml.luxinfine.helper.utils.objects.ClassAccessor.isInstanceOf_0(java.lang.String, boolean)boolean ->  ojf
ml.luxinfine.helper.utils.objects.ClassAccessor.notch2srgNames(java.io.InputStream)byte[] -> у wх
ml.luxinfine.helper.utils.objects.ClassAccessor.fields[java.util.List] -> уu f
ml.luxinfine.helper.utils.objects.ClassAccessor.parent[ml.luxinfine.helper.utils.objects.ClassAccessor] -> lk f
ml.luxinfine.helper.utils.objects.ClassAccessor.getName()java.lang.String -> getName
ml.luxinfine.helper.utils.objects.ClassAccessor.getMethods()java.util.List -> getMethods
ml.luxinfine.helper.utils.objects.ClassAccessor.finalizeLoader()void -> k еа
ml.luxinfine.helper.utils.objects.ClassAccessor.getInterfaces()java.util.List -> getInterfaces
ml.luxinfine.helper.utils.objects.ClassAccessor.getParent()ml.luxinfine.helper.utils.objects.ClassAccessor -> getParent
ml.luxinfine.helper.utils.objects.ClassAccessor.isInterface()boolean -> isInterface
ml.luxinfine.helper.utils.objects.ClassAccessor.cachedClasses[java.util.concurrent.ConcurrentHashMap] -> е w
ml.luxinfine.helper.utils.objects.ClassAccessor.isInstanceOf(java.lang.String, boolean)boolean -> isInstanceOf
ml.luxinfine.helper.utils.objects.ClassAccessor.getSuperClasses(boolean)java.util.Set -> getSuperClasses
ml.luxinfine.helper.utils.objects.ClassAccessor.earlyAccessor[ml.luxinfine.helper.utils.objects.ClassAccessor$EarlyClassAccessor] -> h ts
ml.luxinfine.helper.utils.objects.ClassAccessor.getFields()java.util.List -> getFields
ml.luxinfine.helper.utils.objects.ClassAccessor.methods[java.util.List] ->  оcн

ml.luxinfine.helper.utils.internal.SyncTicksExecutor -> team.luxinfine.helper.10_07_2024__18_16_32.dlн
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.INSTANCE[ml.luxinfine.helper.utils.internal.SyncTicksExecutor] -> voz throws
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.onServerTick(cpw.mods.fml.common.gameevent.TickEvent$ServerTickEvent)void ->  рtt
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.lambda$execute$0()void ->  yw
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.onClientTick(cpw.mods.fml.common.gameevent.TickEvent$ClientTickEvent)void ->  uмf
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.onTick()void ->  iyu
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.lambda$execute$1()void ->  хup
ml.luxinfine.helper.utils.internal.SyncTicksExecutor.queue[java.util.concurrent.ConcurrentLinkedQueue] ->  qnр

ml.luxinfine.commands.internal.commands.HelpCommand -> team.luxinfine.helper.10_07_2024__18_16_32.wqc
ml.luxinfine.commands.internal.commands.HelpCommand.findSortedCommands()java.util.Collection ->  еyn
ml.luxinfine.commands.internal.commands.HelpCommand.HELP_MSG_KEY[java.util.UUID] -> у vu
ml.luxinfine.commands.internal.commands.HelpCommand.lambda$init$0(ml.luxinfine.commands.api.ICommandContext)void ->  еjt
ml.luxinfine.commands.internal.commands.HelpCommand.TITLE_PART[java.lang.String] -> r ee
ml.luxinfine.commands.internal.commands.HelpCommand.init()void -> av i
ml.luxinfine.commands.internal.commands.HelpCommand.createInfoLines(net.minecraft.command.ICommandSender, java.lang.String)java.util.List -> s ем

ml.luxinfine.helper.guis.elements.GuiElementBase.onKeyboardEvent(ml.luxinfine.helper.guis.elements.IGuiElement$KeyboardEvent)ml.luxinfine.helper.guis.elements.GuiElementBase -> onKeyboardEvent
ml.luxinfine.helper.guis.elements.GuiElementBase.setPos(int, int)ml.luxinfine.helper.guis.elements.IGuiElement -> setPos
ml.luxinfine.helper.guis.elements.GuiElementBase.isVisible()boolean -> isVisible
ml.luxinfine.helper.guis.elements.GuiElementBase.handleKeyboard(char, int)boolean -> handleKeyboard
ml.luxinfine.helper.guis.elements.GuiElementBase.onMouseEvent(ml.luxinfine.helper.guis.elements.IGuiElement$MouseEvent)ml.luxinfine.helper.guis.elements.GuiElementBase -> onMouseEvent
ml.luxinfine.helper.guis.elements.GuiElementBase.setVisible(boolean)void -> setVisible
ml.luxinfine.helper.guis.elements.GuiElementBase.getX()int -> getX
ml.luxinfine.helper.guis.elements.GuiElementBase.setPos(int, int)ml.luxinfine.helper.guis.elements.GuiElementBase -> setPos
ml.luxinfine.helper.guis.elements.GuiElementBase.getHoverInfo(int, int, java.util.List)void -> getHoverInfo
ml.luxinfine.helper.guis.elements.GuiElementBase.onHoverTipsEvent(ml.luxinfine.helper.guis.elements.IGuiElement$HoverTipsEvent)ml.luxinfine.helper.guis.elements.GuiElementBase -> onHoverTipsEvent
ml.luxinfine.helper.guis.elements.GuiElementBase.onMouseEvent(java.util.function.IntConsumer)ml.luxinfine.helper.guis.elements.GuiElementBase -> onMouseEvent
ml.luxinfine.helper.guis.elements.GuiElementBase.onHoverTipsEvent(java.util.function.Consumer)ml.luxinfine.helper.guis.elements.GuiElementBase -> onHoverTipsEvent
ml.luxinfine.helper.guis.elements.GuiElementBase.getY()int -> getY
ml.luxinfine.helper.guis.elements.GuiElementBase.onMouseClicked(int, int, int)void -> onMouseClicked

ml.luxinfine.hooks.internal.injects.fuzzy.HeadInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.commands.api.tree.ICommandBuilder.argument(java.lang.String, ml.luxinfine.commands.api.arguments.ICommandArgument)ml.luxinfine.commands.api.tree.ICommandBuilder -> argument

ml.luxinfine.helper.utils.LogUtils.initCleaner()void -> ut y
ml.luxinfine.helper.utils.LogUtils.LOGGER[org.apache.logging.log4j.Logger] -> rg f
ml.luxinfine.helper.utils.LogUtils.task[ml.luxinfine.helper.utils.SchedulerUtils$TimerTask] ->  sа
ml.luxinfine.helper.utils.LogUtils.canSendMsg(net.minecraft.command.ICommandSender, long, boolean, java.lang.String, java.lang.Object[])boolean -> sp n
ml.luxinfine.helper.utils.LogUtils.CACHE[java.util.Map] -> qо c

ml.luxinfine.config.api.IConfigSerializeRule.write(com.google.common.reflect.TypeToken, java.lang.Object)com.google.gson.JsonElement -> write
ml.luxinfine.config.api.IConfigSerializeRule.read(com.google.gson.JsonElement, com.google.common.reflect.TypeToken)java.lang.Object -> read

ml.luxinfine.helper.containers.ContainerBase.intValuesCache[gnu.trove.map.TIntIntMap] -> r eg
ml.luxinfine.helper.containers.ContainerBase.addDoubleToSync(java.util.function.DoubleSupplier, java.util.function.DoubleConsumer)void -> addDoubleToSync
ml.luxinfine.helper.containers.ContainerBase.getTileEntity()net.minecraft.tileentity.TileEntity -> getTileEntity
ml.luxinfine.helper.containers.ContainerBase.sortSlots(net.minecraft.inventory.Slot[], net.minecraft.item.ItemStack)net.minecraft.inventory.Slot[] -> sortSlots
ml.luxinfine.helper.containers.ContainerBase.addLongToSync(java.util.function.LongSupplier, java.util.function.LongConsumer)void -> addLongToSync
ml.luxinfine.helper.containers.ContainerBase.doubleValuesCache[gnu.trove.map.TIntDoubleMap] ->  оеr
ml.luxinfine.helper.containers.ContainerBase.serverDoubleFunctions[java.util.ArrayList] -> ye w
ml.luxinfine.helper.containers.ContainerBase.clientDoubleFunctions[java.util.ArrayList] -> e ot
ml.luxinfine.helper.containers.ContainerBase.applyValue(int, double)void -> my y
ml.luxinfine.helper.containers.ContainerBase.clientIntFunctions[java.util.ArrayList] -> мо y
ml.luxinfine.helper.containers.ContainerBase.addPlayerSlots(net.minecraft.entity.player.EntityPlayer, int, int, int, int, int)void -> addPlayerSlots
ml.luxinfine.helper.containers.ContainerBase.serverLongFunctions[java.util.ArrayList] ->  рнl
ml.luxinfine.helper.containers.ContainerBase.clientLongFunctions[java.util.ArrayList] -> hp а
ml.luxinfine.helper.containers.ContainerBase.applyValue(int, int)void -> i uz
ml.luxinfine.helper.containers.ContainerBase.tile[net.minecraft.tileentity.TileEntity] ->  bpм
ml.luxinfine.helper.containers.ContainerBase.addToSync(java.util.function.IntSupplier, java.util.function.IntConsumer)void -> addToSync
ml.luxinfine.helper.containers.ContainerBase.serverIntFunctions[java.util.ArrayList] -> kz a
ml.luxinfine.helper.containers.ContainerBase.longValuesCache[gnu.trove.map.TIntLongMap] ->  uwk
ml.luxinfine.helper.containers.ContainerBase.applyValue(int, long)void -> ej о
ml.luxinfine.helper.containers.ContainerBase.transferStackToSlots(net.minecraft.item.ItemStack, net.minecraft.inventory.Slot[])net.minecraft.item.ItemStack -> transferStackToSlots
ml.luxinfine.helper.containers.ContainerBase.addPlayerSlots(net.minecraft.entity.player.EntityPlayer, int, int)void -> addPlayerSlots

ml.luxinfine.events.core.handlers.blocks.BlockFireHook -> team.luxinfine.helper.10_07_2024__18_16_32.унe
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.updateTick(net.minecraft.block.BlockFire, net.minecraft.world.World, int, int, int, java.util.Random)void -> dz d
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$tryCatchFire_optional$4(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, int, int, int, int, net.minecraftforge.common.util.ForgeDirection)void ->  нмa
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.tryCatchFire_optional(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, int, net.minecraft.block.BlockFire, net.minecraft.world.World, int, int, int, int, java.util.Random, int, net.minecraftforge.common.util.ForgeDirection)void -> xa y
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$tryCatchFire_optional$5(net.minecraft.block.Block, net.minecraft.world.World, int, int, int, int)void -> е dа
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$null$0(net.minecraft.block.BlockFire, int, int, int, ml.luxinfine.events.blocks.BlockSetEvent)void -> v un
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.updateTick_return(net.minecraft.block.BlockFire, net.minecraft.world.World, int, int, int, java.util.Random)void -> tv е
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.tryCatchFire_return(net.minecraft.block.BlockFire, net.minecraft.world.World, int, int, int, int, java.util.Random, int, net.minecraftforge.common.util.ForgeDirection)void ->  аua
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$updateTick$1(net.minecraft.block.BlockFire, int, int, int)void -> мe v
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$null$2(int, int, int, net.minecraftforge.common.util.ForgeDirection, net.minecraft.block.BlockFire, ml.luxinfine.events.blocks.BlockSetEvent)void ->  уym
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.lambda$tryCatchFire$3(int, int, int, net.minecraftforge.common.util.ForgeDirection, net.minecraft.block.BlockFire)void ->  eeс
ml.luxinfine.events.core.handlers.blocks.BlockFireHook.tryCatchFire(net.minecraft.block.BlockFire, net.minecraft.world.World, int, int, int, int, java.util.Random, int, net.minecraftforge.common.util.ForgeDirection)void ->  gм

ml.luxinfine.helper.utils.ReflectionUtils$ASMClassLoader -> ml.luxinfine.helper.utils.ReflectionUtils$rpw
ml.luxinfine.helper.utils.ReflectionUtils$ASMClassLoader.create(byte[])java.lang.Class ->  wrс


ml.luxinfine.helper.tiles.ITileTooltipProvider.collectSyncableData(net.minecraft.nbt.NBTTagCompound, net.minecraft.entity.player.EntityPlayerMP)void -> collectSyncableData
ml.luxinfine.helper.tiles.ITileTooltipProvider.handleTooltips(net.minecraft.item.ItemStack, net.minecraft.nbt.NBTTagCompound, java.util.List, boolean)void -> handleTooltips

ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider -> team.luxinfine.helper.10_07_2024__18_16_32.azq
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.getIgnoreList(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> getIgnoreList
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.isInIgnoreList(java.util.UUID, java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> isInIgnoreList
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.instance[com.earth2me.essentials.Essentials] -> h js
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.fuzzyConvert(java.lang.String)java.util.UUID -> pb c
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.hasIgnoreImmune(java.util.UUID)ml.luxinfine.helper.integrations.OperationResult -> hasIgnoreImmune
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.setIgnored(java.util.UUID, java.util.UUID, boolean)ml.luxinfine.helper.integrations.OperationResult -> setIgnored
ml.luxinfine.helper.integrations.impl.bukkit_core.BukkitEssentialsIgnoreStateProvider.isIgnored(java.util.UUID, java.util.UUID)boolean -> isIgnored

ml.luxinfine.helper.virtualentity.dummy.DummyMoveHelper -> team.luxinfine.helper.10_07_2024__18_16_32.uvс
ml.luxinfine.helper.virtualentity.dummy.DummyMoveHelper.INSTANCE[net.minecraft.entity.ai.EntityMoveHelper] -> r на

ml.luxinfine.helper.integrations.impl.we.WERegionLocationsIterator -> team.luxinfine.helper.10_07_2024__18_16_32.eyl
ml.luxinfine.helper.integrations.impl.we.WERegionLocationsIterator.region[java.util.Iterator] ->  ipr
ml.luxinfine.helper.integrations.impl.we.WERegionLocationsIterator.dim[int] -> mn u

ml.luxinfine.hooks.internal.injects.fuzzy.AbstractInvokeInjectorFuzzy.requiredArgs(org.objectweb.asm.tree.MethodInsnNode)boolean -> уo m
ml.luxinfine.hooks.internal.injects.fuzzy.AbstractInvokeInjectorFuzzy.generateCode2Inject(org.objectweb.asm.tree.ClassNode, org.objectweb.asm.tree.MethodNode, org.objectweb.asm.tree.MethodInsnNode, boolean, java.util.function.IntSupplier, int, int)org.objectweb.asm.tree.InsnList -> dj n
ml.luxinfine.hooks.internal.injects.fuzzy.AbstractInvokeInjectorFuzzy.transformTargetInfo(ml.luxinfine.hooks.internal.ClassesDataCache, java.lang.String[])java.lang.String[] -> r kz
ml.luxinfine.hooks.internal.injects.fuzzy.AbstractInvokeInjectorFuzzy.applyTransformation(org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor, org.objectweb.asm.tree.MethodNode, java.util.function.IntSupplier, int)boolean ->  сjf

ml.luxinfine.commands.internal.args.DoubleCmdArg -> team.luxinfine.helper.10_07_2024__18_16_32.iwе
ml.luxinfine.commands.internal.args.DoubleCmdArg.maximum[double] -> аj a
ml.luxinfine.commands.internal.args.DoubleCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Double -> xa w
ml.luxinfine.commands.internal.args.DoubleCmdArg.minimum[double] ->  арn
ml.luxinfine.commands.internal.args.DoubleCmdArg.parse(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.commands.api.IStringReader)java.lang.Object -> parse

ml.luxinfine.commands.api.tree.ITerminateCommandBuilder.localCommand(ml.luxinfine.commands.api.tree.IBakedCommandNode)ml.luxinfine.commands.api.tree.ITerminateCommandBuilder -> localCommand
ml.luxinfine.commands.api.tree.ITerminateCommandBuilder.build()ml.luxinfine.commands.api.tree.IBakedCommandNode -> build

ml.luxinfine.events.core.handlers.blocks.BlockBasePressurePlateHook -> team.luxinfine.helper.10_07_2024__18_16_32.vil
ml.luxinfine.events.core.handlers.blocks.BlockBasePressurePlateHook.lambda$onEntityCollidedWithBlock$0(net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void -> g vb
ml.luxinfine.events.core.handlers.blocks.BlockBasePressurePlateHook.onEntityCollidedWithBlock(net.minecraft.block.BlockBasePressurePlate, net.minecraft.world.World, int, int, int, net.minecraft.entity.Entity, ml.luxinfine.hooks.api.IHookContext)void ->  арс

ml.luxinfine.config.commands.CommandReload -> team.luxinfine.helper.10_07_2024__18_16_32.мdu
ml.luxinfine.config.commands.CommandReload.lambda$null$2(java.util.Map$Entry)java.util.stream.Stream -> аt u
ml.luxinfine.config.commands.CommandReload.all2null(java.lang.String)java.lang.String -> k со
ml.luxinfine.config.commands.CommandReload.lambda$init$3(ml.luxinfine.commands.api.ICommandContext)java.util.List -> m dh
ml.luxinfine.config.commands.CommandReload.lambda$init$4(ml.luxinfine.commands.api.ICommandContext)void -> cl у
ml.luxinfine.config.commands.CommandReload.init()void -> v оу
ml.luxinfine.config.commands.CommandReload.lambda$null$1(java.lang.String, java.util.Map$Entry)boolean ->  fxd
ml.luxinfine.config.commands.CommandReload.lambda$init$0(ml.luxinfine.commands.api.ICommandContext)java.util.List ->  kpf

ml.luxinfine.hooks.api.InjectPriority.VALUES[ml.luxinfine.hooks.api.InjectPriority[]] -> о ks

ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager -> team.luxinfine.helper.10_07_2024__18_16_32.bgu
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.copyDataReferences_UMCore(net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP)void ->  jre
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.virtualData[java.util.Map] -> zh w
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.loadOfflinePlayer(com.mojang.authlib.GameProfile)net.minecraft.entity.player.EntityPlayerMP ->  еyn
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$getAccessor$3(ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl, java.util.UUID)net.minecraft.entity.player.EntityPlayerMP -> zh x
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager._onPlayerLogOut(net.minecraft.entity.player.EntityPlayerMP)void ->  аdn
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.copyDataReferences(net.minecraft.entity.player.EntityPlayerMP, net.minecraft.entity.player.EntityPlayerMP)void -> i нm
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.loadOfflinePlayer_UMCore(net.minecraft.entity.player.EntityPlayerMP)void -> рu m
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.savePlayerRef[ml.luxinfine.helper.utils.objects.MethodAccessor] -> мe a
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$init$0()void -> t wе
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$getAccessor$4(java.util.UUID)net.minecraft.entity.player.EntityPlayerMP -> h ур
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.customEntityDataRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> f еi
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.theInventoryEnderChestRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> xu r
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.getAccessor(ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl)java.util.function.Supplier ->  хup
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$null$2(ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl)net.minecraft.entity.player.EntityPlayerMP -> nм о
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.references[java.util.Map] -> y hc
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager._onPlayerConstruct(net.minecraft.entity.player.EntityPlayerMP)void -> rу f
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.finalizeAccessor(ml.luxinfine.helper.utils.internal.offline_player_accessors.PlayerImpl)void -> v wo
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager._onLoggedIn(net.minecraft.entity.player.EntityPlayerMP)void ->  lkе
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.activePotionsMapRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> c аj
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$finalizeAccessor$5(net.minecraft.entity.player.EntityPlayerMP)void ->  xdz
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.ieepMapRef[ml.luxinfine.helper.utils.objects.FieldAccessor] ->  fc
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.serverUMDataLoader[java.lang.Object] ->  lрa
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.init()void -> uс м
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager._onPlayerRead(net.minecraft.entity.player.EntityPlayerMP, net.minecraft.nbt.NBTTagCompound)void -> p sx
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.setUMDataRef[ml.luxinfine.helper.utils.objects.MethodAccessor] ->  ooм
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager._onSaveAllPlayers()void -> b rа
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.getUMDataRef[ml.luxinfine.helper.utils.objects.MethodAccessor] -> cm a
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.fireRef[ml.luxinfine.helper.utils.objects.FieldAccessor] ->  рeн
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.foodStatsRef[ml.luxinfine.helper.utils.objects.FieldAccessor] -> b hr
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.createFake(com.mojang.authlib.GameProfile)net.minecraftforge.common.util.FakePlayer ->  еqа
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.lambda$getAccessor$1(java.util.UUID)java.util.Set ->  bfs
ml.luxinfine.helper.utils.internal.offline_player_accessors.VirtualDataManager.savePlayer(net.minecraft.entity.player.EntityPlayerMP)void ->  bwj

ml.luxinfine.commands.internal.CommandsRegistry$HelpCmdNode -> team.luxinfine.helper.10_07_2024__18_16_32.tit$оeb
ml.luxinfine.commands.internal.CommandsRegistry$HelpCmdNode.getPermission()java.lang.String -> getPermission
ml.luxinfine.commands.internal.CommandsRegistry$HelpCmdNode.path[java.lang.String] ->  нcu
ml.luxinfine.commands.internal.CommandsRegistry$HelpCmdNode.lambda$new$1(ml.luxinfine.commands.api.tree.IBakedCommandNode, java.lang.String, ml.luxinfine.commands.api.ICommandContext)void -> а vq
ml.luxinfine.commands.internal.CommandsRegistry$HelpCmdNode.lambda$null$0(ml.luxinfine.commands.api.ICommandContext, ml.luxinfine.helper.utils.objects.MessageBuilder)void ->  оuq

ml.luxinfine.helper.jei.NEIConfig.handlers[java.util.ArrayList] -> е oy
ml.luxinfine.helper.jei.NEIConfig.registerJEICatalysts(ml.luxinfine.helper.jei.JEIHandler)void -> у zp
ml.luxinfine.helper.jei.NEIConfig.onGameLoaded()void -> у ig
ml.luxinfine.helper.jei.NEIConfig.onGamePreInit(cpw.mods.fml.common.discovery.ASMDataTable)void ->  оаu

ml.luxinfine.helper.ModConfig -> team.luxinfine.helper.10_07_2024__18_16_32.уos

ml.luxinfine.hooks.api.IASMTransformer.transform(java.lang.String, org.objectweb.asm.tree.ClassNode, ml.luxinfine.helper.utils.objects.ClassAccessor)ml.luxinfine.hooks.api.IASMTransformer$TransformResult -> transform

ml.luxinfine.config.internal.ConfigInfo -> ml.luxinfine.config.internal.yma
ml.luxinfine.config.internal.ConfigInfo.comment[java.lang.String] -> fy x
ml.luxinfine.config.internal.ConfigInfo.configClazz[java.lang.Class] -> sе o
ml.luxinfine.config.internal.ConfigInfo.name[java.lang.String] -> мa i
ml.luxinfine.config.internal.ConfigInfo.folder[java.lang.String] ->  nnу
ml.luxinfine.config.internal.ConfigInfo.postLoad[java.lang.reflect.Method] ->  ххb
ml.luxinfine.config.internal.ConfigInfo.preLoad[java.lang.reflect.Method] ->  wnb

ml.luxinfine.events.blocks.DispenserEvent$EntitySpawn.entity[net.minecraft.entity.Entity] -> rm а
ml.luxinfine.events.blocks.DispenserEvent$EntitySpawn.getEntity()net.minecraft.entity.Entity -> getEntity

ml.luxinfine.helper.utils.internal.placeholders.PAPIPlaceholdersAdapter$1 -> team.luxinfine.helper.10_07_2024__18_16_32.tуx$osq

ml.luxinfine.helper.containers.Inventory.stackLimit[int] -> u хx
ml.luxinfine.helper.containers.Inventory.clear()void -> clear
ml.luxinfine.helper.containers.Inventory.name[java.lang.String] ->  ннh
ml.luxinfine.helper.containers.Inventory.readFromNBT(net.minecraft.nbt.NBTTagCompound)void -> readFromNBT
ml.luxinfine.helper.containers.Inventory.setInventorySlotContentsSilently(int, net.minecraft.item.ItemStack)void -> setInventorySlotContentsSilently
ml.luxinfine.helper.containers.Inventory.writeToNBT(net.minecraft.nbt.NBTTagCompound)void -> writeToNBT
ml.luxinfine.helper.containers.Inventory.tile[net.minecraft.tileentity.TileEntity] ->  yhq
ml.luxinfine.helper.containers.Inventory.contents[net.minecraft.item.ItemStack[]] -> м gq

ml.luxinfine.helper.utils.objects.IOfflinePlayer.getUUID()java.util.UUID -> getUUID
ml.luxinfine.helper.utils.objects.IOfflinePlayer.getName()java.lang.String -> getName
ml.luxinfine.helper.utils.objects.IOfflinePlayer.asOnlinePlayer()java.util.Optional -> asOnlinePlayer
ml.luxinfine.helper.utils.objects.IOfflinePlayer.getProfile()com.mojang.authlib.GameProfile -> getProfile

ml.luxinfine.events.blocks.DispenserEvent.getDispenserTarget()ml.luxinfine.helper.utils.objects.Location -> getDispenserTarget
ml.luxinfine.events.blocks.DispenserEvent.getDispenseItem()net.minecraft.item.ItemStack -> getDispenseItem
ml.luxinfine.events.blocks.DispenserEvent.dispenserLocation[ml.luxinfine.helper.utils.objects.Location] -> н ln
ml.luxinfine.events.blocks.DispenserEvent.getDispenserLocation()ml.luxinfine.helper.utils.objects.Location -> getDispenserLocation
ml.luxinfine.events.blocks.DispenserEvent.isDispenser()boolean -> isDispenser
ml.luxinfine.events.blocks.DispenserEvent.setDispenseItem(net.minecraft.item.ItemStack)void -> setDispenseItem
ml.luxinfine.events.blocks.DispenserEvent.isDropper()boolean -> isDropper
ml.luxinfine.events.blocks.DispenserEvent.dispenseItem[net.minecraft.item.ItemStack] ->  bcd

ml.luxinfine.helper.containers.slots.InputSlot.BASE_STACK_PREDICATE[java.util.function.Predicate] ->  kуv

ml.luxinfine.events.core.handlers.entity.SnowmanHandler -> team.luxinfine.helper.10_07_2024__18_16_32.унs
ml.luxinfine.events.core.handlers.entity.SnowmanHandler.onLivingUpdate(net.minecraft.entity.monster.EntitySnowman)void -> wo p
ml.luxinfine.events.core.handlers.entity.SnowmanHandler.lambda$onLivingUpdate$0(net.minecraft.entity.monster.EntitySnowman)void -> о tr
ml.luxinfine.events.core.handlers.entity.SnowmanHandler.onLivingUpdateReturn(net.minecraft.entity.monster.EntitySnowman)void -> jс х

ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook -> team.luxinfine.helper.10_07_2024__18_16_32.jj
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.onUpdate(net.minecraft.entity.effect.EntityLightningBolt)void -> rх у
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.init(net.minecraft.entity.effect.EntityLightningBolt, net.minecraft.world.World, double, double, double, boolean)void -> уk b
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$init$1(net.minecraft.entity.effect.EntityLightningBolt)void ->  kxb
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.init(net.minecraft.entity.effect.EntityLightningBolt, net.minecraft.world.World, double, double, double)void -> qp y
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$init$3(net.minecraft.entity.effect.EntityLightningBolt)void -> х аg
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.onUpdate_return(net.minecraft.entity.effect.EntityLightningBolt)void -> i td
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.init_return(net.minecraft.entity.effect.EntityLightningBolt, net.minecraft.world.World, double, double, double, boolean)void ->  joу
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.init_return(net.minecraft.entity.effect.EntityLightningBolt, net.minecraft.world.World, double, double, double)void -> у bо
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$null$0(net.minecraft.entity.effect.EntityLightningBolt, ml.luxinfine.events.blocks.BlockSetEvent)void ->  ljt
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$null$2(net.minecraft.entity.effect.EntityLightningBolt, ml.luxinfine.events.blocks.BlockSetEvent)void -> c rz
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$null$4(net.minecraft.entity.effect.EntityLightningBolt, ml.luxinfine.events.blocks.BlockSetEvent)void ->  оji
ml.luxinfine.events.core.handlers.blocks.EntityLightningBoltHook.lambda$onUpdate$5(net.minecraft.entity.effect.EntityLightningBolt)void -> hc p

ml.luxinfine.events.core.handlers.entity.EntityInheritHook -> team.luxinfine.helper.10_07_2024__18_16_32.vму
ml.luxinfine.events.core.handlers.entity.EntityInheritHook.attackEntityFrom(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, float, ml.luxinfine.hooks.api.IHookContext)void -> ja w
ml.luxinfine.events.core.handlers.entity.EntityInheritHook.lambda$attackEntityFrom$0(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, float, ml.luxinfine.hooks.api.IHookContext)void -> сp е
ml.luxinfine.events.core.handlers.entity.EntityInheritHook.lambda$attackEntityFromReturn$1(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, ml.luxinfine.hooks.api.IHookContext)void -> in n
ml.luxinfine.events.core.handlers.entity.EntityInheritHook.attackEntityFromReturn(net.minecraft.entity.Entity, net.minecraft.util.DamageSource, float, ml.luxinfine.hooks.api.IHookContext)void -> n us

